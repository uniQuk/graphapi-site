{
  "fa7d1ab190da": {
    "path": "/dataPolicyOperations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaDataPolicyOperation",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaDataPolicyOperation",
        "apiReference": ""
      }
    }
  },
  "c90ad9625449": {
    "path": "/dataPolicyOperations/{dataPolicyOperation-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "User.Export.All",
            "IsAdmin": false,
            "Description": "Export user's data",
            "FullDescription": "Allows the app to export data (e.g. customer content or system-generated logs), associated with any user in your company, when the app is used by a privileged user (e.g. a Company Administrator).",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "User.Read.All",
            "IsAdmin": false,
            "Description": "Read all users' full profiles",
            "FullDescription": "Allows the app to read user profiles without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaDataPolicyOperation",
        "apiReference": "https://learn.microsoft.com/graph/api/datapolicyoperation-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaDataPolicyOperation",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaDataPolicyOperation",
        "apiReference": ""
      }
    }
  },
  "e89f9dfa25fb": {
    "path": "/dataPolicyOperations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaDataPolicyOperationCount",
        "apiReference": ""
      }
    }
  },
  "6f15f5f4439d": {
    "path": "/identity",
    "methods": {}
  },
  "26b458c40093": {
    "path": "/identity/apiConnectors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityApiConnector",
        "apiReference": "https://learn.microsoft.com/graph/api/identityapiconnector-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityApiConnector",
        "apiReference": "https://learn.microsoft.com/graph/api/identityapiconnector-create?view=graph-rest-beta"
      }
    }
  },
  "2205eeb19572": {
    "path": "/identity/apiConnectors/{identityApiConnector-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityApiConnector",
        "apiReference": "https://learn.microsoft.com/graph/api/identityapiconnector-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityApiConnector",
        "apiReference": "https://learn.microsoft.com/graph/api/identityapiconnector-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityApiConnector",
        "apiReference": "https://learn.microsoft.com/graph/api/identityapiconnector-delete?view=graph-rest-beta"
      }
    }
  },
  "8b69795fe697": {
    "path": "/identity/apiConnectors/{identityApiConnector-id}/microsoft.graph.uploadClientCertificate",
    "methods": {}
  },
  "2d1f1b24df39": {
    "path": "/identity/apiConnectors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityApiConnectorCount",
        "apiReference": ""
      }
    }
  },
  "0c91db7d7a9d": {
    "path": "/identity/authenticationEventListeners",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EventListener.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication event listeners",
            "FullDescription": "Allows the app to read your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EventListener.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication event listeners",
            "FullDescription": "Allows the app to read or write your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityAuthenticationEventListener",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-list-authenticationeventlisteners?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityAuthenticationEventListener",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-post-authenticationeventlisteners?view=graph-rest-beta"
      }
    }
  },
  "c6f30af1d429": {
    "path": "/identity/authenticationEventListeners/{authenticationEventListener-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EventListener.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication event listeners",
            "FullDescription": "Allows the app to read your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EventListener.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication event listeners",
            "FullDescription": "Allows the app to read or write your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityAuthenticationEventListener",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityAuthenticationEventListener",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationeventlistener-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityAuthenticationEventListener",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationeventlistener-delete?view=graph-rest-beta"
      }
    }
  },
  "4abf2d0706d5": {
    "path": "/identity/authenticationEventListeners/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EventListener.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication event listeners",
            "FullDescription": "Allows the app to read your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EventListener.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication event listeners",
            "FullDescription": "Allows the app to read or write your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityAuthenticationEventListenerCount",
        "apiReference": ""
      }
    }
  },
  "861f09ed0091": {
    "path": "/identity/authenticationEventsFlows",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EventListener.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication event listeners",
            "FullDescription": "Allows the app to read your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EventListener.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication event listeners",
            "FullDescription": "Allows the app to read or write your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityAuthenticationEventFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-list-authenticationeventsflows?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityAuthenticationEventFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-post-authenticationeventsflows?view=graph-rest-beta"
      }
    }
  },
  "e4c1049d9a0a": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EventListener.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication event listeners",
            "FullDescription": "Allows the app to read your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EventListener.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication event listeners",
            "FullDescription": "Allows the app to read or write your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityAuthenticationEventFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationeventsflow-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityAuthenticationEventFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationeventsflow-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityAuthenticationEventFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationeventsflow-delete?view=graph-rest-beta"
      }
    }
  },
  "4fb992677d7d": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/conditions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityAuthenticationEventFlowCondition",
        "apiReference": ""
      }
    }
  },
  "6ec18e1a338c": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/conditions/applications/includeApplications",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EventListener.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication event listeners",
            "FullDescription": "Allows the app to read your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EventListener.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication event listeners",
            "FullDescription": "Allows the app to read or write your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityAuthenticationEventFlowIncludeApplication",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationconditionsapplications-list-includeapplications?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityAuthenticationEventFlowIncludeApplication",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationconditionsapplications-post-includeapplications?view=graph-rest-beta"
      }
    }
  },
  "a9c91f34f760": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/conditions/applications/includeApplications/{authenticationConditionApplication-appId}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityAuthenticationEventFlowIncludeApplication",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityAuthenticationEventFlowIncludeApplication",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityAuthenticationEventFlowIncludeApplication",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationconditionapplication-delete?view=graph-rest-beta"
      }
    }
  },
  "210fe5f0fe8c": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/conditions/applications/includeApplications/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EventListener.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication event listeners",
            "FullDescription": "Allows the app to read your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EventListener.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication event listeners",
            "FullDescription": "Allows the app to read or write your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityAuthenticationEventFlowIncludeApplicationCount",
        "apiReference": ""
      }
    }
  },
  "e724551169e9": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow",
    "methods": {}
  },
  "3b24594459b5": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/conditions",
    "methods": {}
  },
  "678f8c3a103f": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/conditions/applications/includeApplications",
    "methods": {}
  },
  "2e0fef31a3e5": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/conditions/applications/includeApplications/{authenticationConditionApplication-appId}",
    "methods": {}
  },
  "d0a1cb836a9b": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/conditions/applications/includeApplications/$count",
    "methods": {}
  },
  "d2bd3392729a": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollection",
    "methods": {}
  },
  "318e671455c7": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollection/microsoft.graph.onAttributeCollectionExternalUsersSelfServiceSignUp",
    "methods": {}
  },
  "2b6f97249f3f": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollection/microsoft.graph.onAttributeCollectionExternalUsersSelfServiceSignUp/attributes",
    "methods": {}
  },
  "473e6943d9cb": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollection/microsoft.graph.onAttributeCollectionExternalUsersSelfServiceSignUp/attributes/{identityUserFlowAttribute-id}/$ref",
    "methods": {}
  },
  "010fef1b2793": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollection/microsoft.graph.onAttributeCollectionExternalUsersSelfServiceSignUp/attributes/$count",
    "methods": {}
  },
  "8623ba1a8525": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAttributeCollection/microsoft.graph.onAttributeCollectionExternalUsersSelfServiceSignUp/attributes/$ref",
    "methods": {}
  },
  "4fd4ce484084": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAuthenticationMethodLoadStart",
    "methods": {}
  },
  "3d9dd34b6b57": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAuthenticationMethodLoadStart/microsoft.graph.onAuthenticationMethodLoadStartExternalUsersSelfServiceSignUp",
    "methods": {}
  },
  "58c9dd3a7894": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAuthenticationMethodLoadStart/microsoft.graph.onAuthenticationMethodLoadStartExternalUsersSelfServiceSignUp/identityProviders",
    "methods": {}
  },
  "4f07c760a537": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAuthenticationMethodLoadStart/microsoft.graph.onAuthenticationMethodLoadStartExternalUsersSelfServiceSignUp/identityProviders/{identityProviderBase-id}/$ref",
    "methods": {}
  },
  "a3bcec67b30f": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAuthenticationMethodLoadStart/microsoft.graph.onAuthenticationMethodLoadStartExternalUsersSelfServiceSignUp/identityProviders/$count",
    "methods": {}
  },
  "378fc0468ff9": {
    "path": "/identity/authenticationEventsFlows/{authenticationEventsFlow-id}/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/onAuthenticationMethodLoadStart/microsoft.graph.onAuthenticationMethodLoadStartExternalUsersSelfServiceSignUp/identityProviders/$ref",
    "methods": {}
  },
  "51d2c6ae837f": {
    "path": "/identity/authenticationEventsFlows/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EventListener.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication event listeners",
            "FullDescription": "Allows the app to read your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EventListener.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication event listeners",
            "FullDescription": "Allows the app to read or write your organization's authentication event listeners without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityAuthenticationEventFlowCount",
        "apiReference": ""
      }
    }
  },
  "dd3659b637a8": {
    "path": "/identity/authenticationEventsFlows/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow",
    "methods": {}
  },
  "bea2baab3eaa": {
    "path": "/identity/authenticationEventsFlows/microsoft.graph.externalUsersSelfServiceSignUpEventsFlow/$count",
    "methods": {}
  },
  "53dc0b96399a": {
    "path": "/identity/b2cUserFlows",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-list-b2cuserflows?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2CUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-post-b2cuserflows?view=graph-rest-beta"
      }
    }
  },
  "4b46ff91ef87": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2CUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2CUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-delete?view=graph-rest-beta"
      }
    }
  },
  "1146b36882f9": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/identityProviders",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2CUserFlowIdentityProvider",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-list-identityproviders?view=graph-rest-beta"
      }
    }
  },
  "248f94d116ad": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/identityProviders/{identityProvider-id}/$ref",
    "methods": {}
  },
  "90eafd5a51d9": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/identityProviders/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2CUserFlowIdentityProviderCount",
        "apiReference": ""
      }
    }
  },
  "4665253abb61": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/identityProviders/$ref",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2CUserFlowIdentityProviderByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-list-identityproviders?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2CUserFlowIdentityProviderByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-post-identityproviders?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2CUserFlowIdentityProviderByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-delete-identityproviders?view=graph-rest-beta"
      }
    }
  },
  "345c0009f869": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguage",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-list-languages?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2CUserFlowLanguage",
        "apiReference": ""
      }
    }
  },
  "6e30838abda4": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguage",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguageconfiguration-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2CUserFlowLanguage",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-put-languages?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2CUserFlowLanguage",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguageconfiguration-delete?view=graph-rest-beta"
      }
    }
  },
  "83d870219563": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/defaultPages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageDefaultPage",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguageconfiguration-list-defaultpages?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2CUserFlowLanguageDefaultPage",
        "apiReference": ""
      }
    }
  },
  "8e291305addd": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/defaultPages/{userFlowLanguagePage-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageDefaultPage",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2CUserFlowLanguageDefaultPage",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2CUserFlowLanguageDefaultPage",
        "apiReference": ""
      }
    }
  },
  "6549ff9b7912": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/defaultPages/{userFlowLanguagePage-id}/$value",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageDefaultPageContent",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguageconfiguration-list-defaultpages?view=graph-rest-beta"
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaIdentityB2CUserFlowLanguageDefaultPageContent",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2CUserFlowLanguageDefaultPageContent",
        "apiReference": ""
      }
    }
  },
  "5d375c15bc5f": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/defaultPages/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageDefaultPageCount",
        "apiReference": ""
      }
    }
  },
  "9057be3b0c89": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/overridesPages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageOverridePage",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguageconfiguration-list-overridespages?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2CUserFlowLanguageOverridePage",
        "apiReference": ""
      }
    }
  },
  "8524beaad622": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/overridesPages/{userFlowLanguagePage-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageOverridePage",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2CUserFlowLanguageOverridePage",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguagepage-put?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2CUserFlowLanguageOverridePage",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguagepage-delete?view=graph-rest-beta"
      }
    }
  },
  "c1b46cdba838": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/overridesPages/{userFlowLanguagePage-id}/$value",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageOverridePageContent",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguageconfiguration-list-overridespages?view=graph-rest-beta"
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaIdentityB2CUserFlowLanguageOverridePageContent",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguagepage-put?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2CUserFlowLanguageOverridePageContent",
        "apiReference": "https://learn.microsoft.com/graph/api/userflowlanguagepage-delete?view=graph-rest-beta"
      }
    }
  },
  "edb75faab8be": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/overridesPages/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageOverridePageCount",
        "apiReference": ""
      }
    }
  },
  "580a482c6bfe": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/languages/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowLanguageCount",
        "apiReference": ""
      }
    }
  },
  "053a42e66e1e": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userAttributeAssignments",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowUserAttributeAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-list-userattributeassignments?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2CUserFlowUserAttributeAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cidentityuserflow-post-userattributeassignments?view=graph-rest-beta"
      }
    }
  },
  "936bfeef6553": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userAttributeAssignments/{identityUserFlowAttributeAssignment-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowUserAttributeAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflowattributeassignment-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2CUserFlowUserAttributeAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflowattributeassignment-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2CUserFlowUserAttributeAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflowattributeassignment-delete?view=graph-rest-beta"
      }
    }
  },
  "4b7e369f59e7": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userAttributeAssignments/{identityUserFlowAttributeAssignment-id}/userAttribute",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2CUserFlowUserAttributeAssignmentUserAttribute",
        "apiReference": ""
      }
    }
  },
  "f48d90e2e52d": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userAttributeAssignments/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowUserAttributeAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "dc949b3837c2": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userAttributeAssignments/microsoft.graph.getOrder()",
    "methods": {}
  },
  "2309f303d2ef": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userAttributeAssignments/microsoft.graph.setOrder",
    "methods": {}
  },
  "bfa0b8f594dd": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userFlowIdentityProviders",
    "methods": {}
  },
  "a44a0aae2b62": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userFlowIdentityProviders/{identityProviderBase-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2CUserFlowIdentityProvider",
        "apiReference": ""
      }
    }
  },
  "56ca2ac3624f": {
    "path": "/identity/b2cUserFlows/{b2cIdentityUserFlow-id}/userFlowIdentityProviders/$count",
    "methods": {}
  },
  "b1938d7c1545": {
    "path": "/identity/b2cUserFlows/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2CUserFlowCount",
        "apiReference": ""
      }
    }
  },
  "0699220ade15": {
    "path": "/identity/b2xUserFlows",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-list-b2xuserflows?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2XUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-post-b2xuserflows?view=graph-rest-beta"
      }
    }
  },
  "652bd4c53a45": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/b2xidentityuserflow-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2XUserFlow",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/b2xidentityuserflow-delete?view=graph-rest-beta"
      }
    }
  },
  "327ec9f07578": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowApiConnectorConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/b2xidentityuserflow-get-apiconnectorconfiguration?view=graph-rest-beta"
      }
    }
  },
  "a3e5d6055f80": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration/postAttributeCollection",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowPostAttributeCollection",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2XUserFlowPostAttributeCollection",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowPostAttributeCollection",
        "apiReference": ""
      }
    }
  },
  "420fc9551afc": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration/postAttributeCollection/$ref",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowPostAttributeCollectionByRef",
        "apiReference": ""
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaIdentityB2XUserFlowPostAttributeCollectionByRef",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowPostAttributeCollectionByRef",
        "apiReference": ""
      }
    }
  },
  "2315a02e4682": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration/postAttributeCollection/microsoft.graph.uploadClientCertificate",
    "methods": {}
  },
  "f83af0447623": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration/postFederationSignup",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowPostFederationSignup",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2XUserFlowPostFederationSignup",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowPostFederationSignup",
        "apiReference": ""
      }
    }
  },
  "9ef02881415b": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration/postFederationSignup/$ref",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowPostFederationSignupByRef",
        "apiReference": ""
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaIdentityB2XUserFlowPostFederationSignupByRef",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowPostFederationSignupByRef",
        "apiReference": ""
      }
    }
  },
  "008b9137231b": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration/postFederationSignup/microsoft.graph.uploadClientCertificate",
    "methods": {}
  },
  "b6a0dbddcf66": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration/preTokenIssuance",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowPreTokenIssuance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2XUserFlowPreTokenIssuance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowPreTokenIssuance",
        "apiReference": ""
      }
    }
  },
  "b6552c6f48bd": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/apiConnectorConfiguration/preTokenIssuance/microsoft.graph.uploadClientCertificate",
    "methods": {}
  },
  "4855e12db528": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/identityProviders",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowIdentityProvider",
        "apiReference": "https://learn.microsoft.com/graph/api/b2xidentityuserflow-list-identityproviders?view=graph-rest-beta"
      }
    }
  },
  "2a1c362a1354": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/identityProviders/{identityProvider-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowIdentityProvider",
        "apiReference": ""
      }
    }
  },
  "f995286a8a7e": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/identityProviders/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowIdentityProviderCount",
        "apiReference": ""
      }
    }
  },
  "5d7707f5d2d8": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguage",
        "apiReference": "https://learn.microsoft.com/graph/api/b2xidentityuserflow-list-languages?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2XUserFlowLanguage",
        "apiReference": ""
      }
    }
  },
  "95749575280a": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguage",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2XUserFlowLanguage",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowLanguage",
        "apiReference": ""
      }
    }
  },
  "4dc208249e32": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/defaultPages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageDefaultPage",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2XUserFlowLanguageDefaultPage",
        "apiReference": ""
      }
    }
  },
  "6343f5850af9": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/defaultPages/{userFlowLanguagePage-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageDefaultPage",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2XUserFlowLanguageDefaultPage",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowLanguageDefaultPage",
        "apiReference": ""
      }
    }
  },
  "ceafabe3801b": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/defaultPages/{userFlowLanguagePage-id}/$value",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageDefaultPageContent",
        "apiReference": ""
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaIdentityB2XUserFlowLanguageDefaultPageContent",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowLanguageDefaultPageContent",
        "apiReference": ""
      }
    }
  },
  "f9d4bdcadc42": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/defaultPages/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageDefaultPageCount",
        "apiReference": ""
      }
    }
  },
  "5e1867542b4e": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/overridesPages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageOverridePage",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2XUserFlowLanguageOverridePage",
        "apiReference": ""
      }
    }
  },
  "57ed35fc8bd3": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/overridesPages/{userFlowLanguagePage-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageOverridePage",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2XUserFlowLanguageOverridePage",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowLanguageOverridePage",
        "apiReference": ""
      }
    }
  },
  "c4a93c2e0f96": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/overridesPages/{userFlowLanguagePage-id}/$value",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageOverridePageContent",
        "apiReference": ""
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaIdentityB2XUserFlowLanguageOverridePageContent",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowLanguageOverridePageContent",
        "apiReference": ""
      }
    }
  },
  "ba50fe0aa953": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/{userFlowLanguageConfiguration-id}/overridesPages/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageOverridePageCount",
        "apiReference": ""
      }
    }
  },
  "230d96b83724": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/languages/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowLanguageCount",
        "apiReference": ""
      }
    }
  },
  "2c4c1f725ca6": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userAttributeAssignments",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowUserAttributeAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/b2xidentityuserflow-list-userattributeassignments?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2XUserFlowUserAttributeAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/b2xidentityuserflow-post-userattributeassignments?view=graph-rest-beta"
      }
    }
  },
  "c2e333dd38fd": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userAttributeAssignments/{identityUserFlowAttributeAssignment-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowUserAttributeAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityB2XUserFlowUserAttributeAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowUserAttributeAssignment",
        "apiReference": ""
      }
    }
  },
  "abc084654185": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userAttributeAssignments/{identityUserFlowAttributeAssignment-id}/userAttribute",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowUserAttributeAssignmentUserAttribute",
        "apiReference": ""
      }
    }
  },
  "ce19391b9fcf": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userAttributeAssignments/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowUserAttributeAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "778dd08be91d": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userAttributeAssignments/microsoft.graph.getOrder()",
    "methods": {}
  },
  "9cf5ad02b9d6": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userAttributeAssignments/microsoft.graph.setOrder",
    "methods": {}
  },
  "1dc597a1fd02": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userFlowIdentityProviders",
    "methods": {}
  },
  "6f208cb0227d": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userFlowIdentityProviders/{identityProviderBase-id}/$ref",
    "methods": {
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityB2XUserFlowIdentityProviderBaseByRef",
        "apiReference": ""
      }
    }
  },
  "f8fb79defebb": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userFlowIdentityProviders/$count",
    "methods": {}
  },
  "fbc05ff38804": {
    "path": "/identity/b2xUserFlows/{b2xIdentityUserFlow-id}/userFlowIdentityProviders/$ref",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityB2XUserFlowIdentityProviderByRef",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityB2XUserFlowIdentityProviderByRef",
        "apiReference": ""
      }
    }
  },
  "a507b10a482f": {
    "path": "/identity/b2xUserFlows/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityB2XUserFlowCount",
        "apiReference": ""
      }
    }
  },
  "c59d3affa2b4": {
    "path": "/identity/conditionalAccess/authenticationContextClassReferences",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AuthenticationContext.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication context information",
            "FullDescription": "Allows the app to read the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read your organization's conditional access policies",
            "FullDescription": "Allows the app to read your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "AuthenticationContext.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication context information",
            "FullDescription": "Allows the app to read and update the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationContextClassReference",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccessroot-list-authenticationcontextclassreferences?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "AuthenticationContext.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication context information",
            "FullDescription": "Allows the app to read and update the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaIdentityConditionalAccessAuthenticationContextClassReference",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccessroot-post-authenticationcontextclassreferences?view=graph-rest-beta"
      }
    }
  },
  "0f6cdd9fcb98": {
    "path": "/identity/conditionalAccess/authenticationContextClassReferences/{authenticationContextClassReference-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AuthenticationContext.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication context information",
            "FullDescription": "Allows the app to read the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read your organization's conditional access policies",
            "FullDescription": "Allows the app to read your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "AuthenticationContext.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication context information",
            "FullDescription": "Allows the app to read and update the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationContextClassReference",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationcontextclassreference-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "AuthenticationContext.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication context information",
            "FullDescription": "Allows the app to read and update the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaIdentityConditionalAccessAuthenticationContextClassReference",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationcontextclassreference-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "AuthenticationContext.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication context information",
            "FullDescription": "Allows the app to read and update the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read your organization's conditional access policies",
            "FullDescription": "Allows the app to read your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaIdentityConditionalAccessAuthenticationContextClassReference",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationcontextclassreference-delete?view=graph-rest-beta"
      }
    }
  },
  "44981a05916c": {
    "path": "/identity/conditionalAccess/authenticationContextClassReferences/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AuthenticationContext.Read.All",
            "IsAdmin": false,
            "Description": "Read all authentication context information",
            "FullDescription": "Allows the app to read the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read your organization's conditional access policies",
            "FullDescription": "Allows the app to read your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "AuthenticationContext.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all authentication context information",
            "FullDescription": "Allows the app to read and update the authentication context information in your organization without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationContextClassReferenceCount",
        "apiReference": ""
      }
    }
  },
  "25a36882fcdd": {
    "path": "/identity/conditionalAccess/authenticationStrength",
    "methods": {}
  },
  "68380add0c6d": {
    "path": "/identity/conditionalAccess/authenticationStrength/authenticationMethodModes",
    "methods": {}
  },
  "48f0f2e29a71": {
    "path": "/identity/conditionalAccess/authenticationStrength/authenticationMethodModes/{authenticationMethodModeDetail-id}",
    "methods": {}
  },
  "2b08cfbbb621": {
    "path": "/identity/conditionalAccess/authenticationStrength/authenticationMethodModes/$count",
    "methods": {}
  },
  "2d0646df09e4": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies",
    "methods": {}
  },
  "cce7b93282aa": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies/{authenticationStrengthPolicy-id}",
    "methods": {}
  },
  "ecae80917017": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies/{authenticationStrengthPolicy-id}/combinationConfigurations",
    "methods": {}
  },
  "72cc898adfaf": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies/{authenticationStrengthPolicy-id}/combinationConfigurations/{authenticationCombinationConfiguration-id}",
    "methods": {}
  },
  "f91a40031e9d": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies/{authenticationStrengthPolicy-id}/combinationConfigurations/$count",
    "methods": {}
  },
  "93ba4c6d1b71": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies/{authenticationStrengthPolicy-id}/microsoft.graph.updateAllowedCombinations",
    "methods": {}
  },
  "570fd0cb57ee": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies/{authenticationStrengthPolicy-id}/microsoft.graph.usage()",
    "methods": {}
  },
  "52ab35d9c7cf": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies/$count",
    "methods": {}
  },
  "fac5e60dd9b0": {
    "path": "/identity/conditionalAccess/authenticationStrength/policies/microsoft.graph.findByMethodMode(authenticationMethodModes={authenticationMethodModes})",
    "methods": {}
  },
  "b214dc71e5ff": {
    "path": "/identity/conditionalAccess/authenticationStrengths",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrength",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityConditionalAccessAuthenticationStrength",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityConditionalAccessAuthenticationStrength",
        "apiReference": ""
      }
    }
  },
  "ad71ca8d7747": {
    "path": "/identity/conditionalAccess/authenticationStrengths/authenticationMethodModes",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthAuthenticationMethodMode",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityConditionalAccessAuthenticationStrengthAuthenticationMethodMode",
        "apiReference": ""
      }
    }
  },
  "df2954ab6efd": {
    "path": "/identity/conditionalAccess/authenticationStrengths/authenticationMethodModes/{authenticationMethodModeDetail-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthAuthenticationMethodMode",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityConditionalAccessAuthenticationStrengthAuthenticationMethodMode",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityConditionalAccessAuthenticationStrengthAuthenticationMethodMode",
        "apiReference": ""
      }
    }
  },
  "5082ec3f31b9": {
    "path": "/identity/conditionalAccess/authenticationStrengths/authenticationMethodModes/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthAuthenticationMethodModeCount",
        "apiReference": ""
      }
    }
  },
  "2cf2526e179b": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicy",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicy",
        "apiReference": ""
      }
    }
  },
  "276e69b9bb8a": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies/{authenticationStrengthPolicy-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicy",
        "apiReference": ""
      }
    }
  },
  "bb2a64e62a25": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies/{authenticationStrengthPolicy-id}/combinationConfigurations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      }
    }
  },
  "ed70de9d5632": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies/{authenticationStrengthPolicy-id}/combinationConfigurations/{authenticationCombinationConfiguration-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      }
    }
  },
  "733bb1506a0a": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies/{authenticationStrengthPolicy-id}/combinationConfigurations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicyCombinationConfigurationCount",
        "apiReference": ""
      }
    }
  },
  "9e63261dd194": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies/{authenticationStrengthPolicy-id}/microsoft.graph.updateAllowedCombinations",
    "methods": {}
  },
  "f4eced03114f": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies/{authenticationStrengthPolicy-id}/microsoft.graph.usage()",
    "methods": {}
  },
  "d9fbaf221063": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessAuthenticationStrengthPolicyCount",
        "apiReference": ""
      }
    }
  },
  "13a4119d4ad6": {
    "path": "/identity/conditionalAccess/authenticationStrengths/policies/microsoft.graph.findByMethodMode(authenticationMethodModes={authenticationMethodModes})",
    "methods": {}
  },
  "0d9d9a9b7d39": {
    "path": "/identity/conditionalAccess/microsoft.graph.evaluate",
    "methods": {}
  },
  "8c263677274e": {
    "path": "/identity/conditionalAccess/namedLocations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessNamedLocation",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccessroot-list-namedlocations?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaIdentityConditionalAccessNamedLocation",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccessroot-post-namedlocations?view=graph-rest-beta"
      }
    }
  },
  "0924153cd661": {
    "path": "/identity/conditionalAccess/namedLocations/{namedLocation-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessNamedLocation",
        "apiReference": "https://learn.microsoft.com/graph/api/namedlocation-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaIdentityConditionalAccessNamedLocation",
        "apiReference": "https://learn.microsoft.com/graph/api/countrynamedlocation-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaIdentityConditionalAccessNamedLocation",
        "apiReference": "https://learn.microsoft.com/graph/api/namedlocation-delete?view=graph-rest-beta"
      }
    }
  },
  "bb5d209f8a15": {
    "path": "/identity/conditionalAccess/namedLocations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessNamedLocationCount",
        "apiReference": ""
      }
    }
  },
  "b01e0959ad6a": {
    "path": "/identity/conditionalAccess/policies",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccessroot-list-policies?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaIdentityConditionalAccessPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccessroot-post-policies?view=graph-rest-beta"
      }
    }
  },
  "596134f65309": {
    "path": "/identity/conditionalAccess/policies/{conditionalAccessPolicy-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccesspolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaIdentityConditionalAccessPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccesspolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaIdentityConditionalAccessPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccesspolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "613c6db2fe12": {
    "path": "/identity/conditionalAccess/policies/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessPolicyCount",
        "apiReference": ""
      }
    }
  },
  "e0f7936ccaff": {
    "path": "/identity/conditionalAccess/templates",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessTemplate",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccessroot-list-templates?view=graph-rest-beta"
      }
    }
  },
  "4a2279856a4d": {
    "path": "/identity/conditionalAccess/templates/{conditionalAccessTemplate-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessTemplate",
        "apiReference": "https://learn.microsoft.com/graph/api/conditionalaccesstemplate-get?view=graph-rest-beta"
      }
    }
  },
  "9a08959127f3": {
    "path": "/identity/conditionalAccess/templates/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityConditionalAccessTemplateCount",
        "apiReference": ""
      }
    }
  },
  "8bba2c80cf57": {
    "path": "/identity/continuousAccessEvaluationPolicy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityContinuouAccessEvaluationPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/continuousaccessevaluationpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaIdentityContinuouAccessEvaluationPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/continuousaccessevaluationpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityContinuouAccessEvaluationPolicy",
        "apiReference": ""
      }
    }
  },
  "c292d8462fc3": {
    "path": "/identity/customAuthenticationExtensions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "CustomAuthenticationExtension.Read.All",
            "IsAdmin": false,
            "Description": "Read all custom authentication extensions",
            "FullDescription": "Allows the app to read your organization's custom authentication extensions without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "CustomAuthenticationExtension.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all custom authentication extensions",
            "FullDescription": "Allows the app to read or write your organization's custom authentication extensions without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityCustomAuthenticationExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-list-customauthenticationextensions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityCustomAuthenticationExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-post-customauthenticationextensions?view=graph-rest-beta"
      }
    }
  },
  "8eb20e659ebb": {
    "path": "/identity/customAuthenticationExtensions/{customAuthenticationExtension-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "CustomAuthenticationExtension.Read.All",
            "IsAdmin": false,
            "Description": "Read all custom authentication extensions",
            "FullDescription": "Allows the app to read your organization's custom authentication extensions without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "CustomAuthenticationExtension.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all custom authentication extensions",
            "FullDescription": "Allows the app to read or write your organization's custom authentication extensions without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityCustomAuthenticationExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationeventlistener-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityCustomAuthenticationExtension",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityCustomAuthenticationExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/customauthenticationextension-delete?view=graph-rest-beta"
      }
    }
  },
  "093ce4ed0886": {
    "path": "/identity/customAuthenticationExtensions/{customAuthenticationExtension-id}/microsoft.graph.validateAuthenticationConfiguration",
    "methods": {}
  },
  "d0318564d399": {
    "path": "/identity/customAuthenticationExtensions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "CustomAuthenticationExtension.Read.All",
            "IsAdmin": false,
            "Description": "Read all custom authentication extensions",
            "FullDescription": "Allows the app to read your organization's custom authentication extensions without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "CustomAuthenticationExtension.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all custom authentication extensions",
            "FullDescription": "Allows the app to read or write your organization's custom authentication extensions without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityCustomAuthenticationExtensionCount",
        "apiReference": ""
      }
    }
  },
  "5ce89fbe7614": {
    "path": "/identity/customAuthenticationExtensions/microsoft.graph.validateAuthenticationConfiguration",
    "methods": {}
  },
  "b2f7959aa9bb": {
    "path": "/identity/identityProviders",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityProvider.Read.All",
            "IsAdmin": false,
            "Description": "Read identity providers",
            "FullDescription": "Allows the app to read your organizations identity (authentication) providers properties without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityProvider.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write identity providers",
            "FullDescription": "Allows the app to read and write your organizations identity (authentication) providers properties without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityProvider",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-list-identityproviders?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityProvider",
        "apiReference": "https://learn.microsoft.com/graph/api/identitycontainer-post-identityproviders?view=graph-rest-beta"
      }
    }
  },
  "470c4b8ef5db": {
    "path": "/identity/identityProviders/{identityProviderBase-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityProvider.Read.All",
            "IsAdmin": false,
            "Description": "Read identity providers",
            "FullDescription": "Allows the app to read your organizations identity (authentication) providers properties without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityProvider.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write identity providers",
            "FullDescription": "Allows the app to read and write your organizations identity (authentication) providers properties without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityProvider",
        "apiReference": "https://learn.microsoft.com/graph/api/identityproviderbase-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityProvider",
        "apiReference": "https://learn.microsoft.com/graph/api/identityproviderbase-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityProvider",
        "apiReference": "https://learn.microsoft.com/graph/api/identityproviderbase-delete?view=graph-rest-beta"
      }
    }
  },
  "bd724308367a": {
    "path": "/identity/identityProviders/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityProvider.Read.All",
            "IsAdmin": false,
            "Description": "Read identity providers",
            "FullDescription": "Allows the app to read your organizations identity (authentication) providers properties without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityProvider.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write identity providers",
            "FullDescription": "Allows the app to read and write your organizations identity (authentication) providers properties without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityProviderCount",
        "apiReference": ""
      }
    }
  },
  "8e90d0addcb5": {
    "path": "/identity/identityProviders/microsoft.graph.availableProviderTypes()",
    "methods": {}
  },
  "0f5fc4d8ba84": {
    "path": "/identity/userFlowAttributes",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityUserFlowAttribute",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflowattribute-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityUserFlowAttribute",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflowattribute-post?view=graph-rest-beta"
      }
    }
  },
  "2844f8c6943f": {
    "path": "/identity/userFlowAttributes/{identityUserFlowAttribute-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityUserFlowAttribute",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflowattribute-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityUserFlowAttribute",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflowattribute-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityUserFlowAttribute",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflowattribute-delete?view=graph-rest-beta"
      }
    }
  },
  "23edab93715b": {
    "path": "/identity/userFlowAttributes/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityUserFlowAttributeCount",
        "apiReference": ""
      }
    }
  },
  "8891436495f8": {
    "path": "/identity/userFlows",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflow-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflow-post-userflows?view=graph-rest-beta"
      }
    }
  },
  "2b0e889c7dab": {
    "path": "/identity/userFlows/{identityUserFlow-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflow-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityUserFlow",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityUserFlow",
        "apiReference": "https://learn.microsoft.com/graph/api/identityuserflow-delete?view=graph-rest-beta"
      }
    }
  },
  "56d49172021e": {
    "path": "/identity/userFlows/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityUserFlow.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity user flows",
            "FullDescription": "Allows the app to read your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityUserFlow.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity user flows",
            "FullDescription": "Allows the app to read or write your organization's user flows, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityUserFlowCount",
        "apiReference": ""
      }
    }
  },
  "28d8aa1b2d72": {
    "path": "/identityProtection",
    "methods": {}
  },
  "2e05ff2c2350": {
    "path": "/identityProtection/riskDetections",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRiskDetection",
        "apiReference": "https://learn.microsoft.com/graph/api/riskdetection-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRiskDetection",
        "apiReference": ""
      }
    }
  },
  "f5b4ec4a33ca": {
    "path": "/identityProtection/riskDetections/{riskDetection-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRiskDetection",
        "apiReference": "https://learn.microsoft.com/graph/api/riskdetection-list?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRiskDetection",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRiskDetection",
        "apiReference": ""
      }
    }
  },
  "d75858c95b3f": {
    "path": "/identityProtection/riskDetections/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRiskDetectionCount",
        "apiReference": ""
      }
    }
  },
  "afa07ae5900b": {
    "path": "/identityProtection/riskyServicePrincipals",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityRiskyServicePrincipal.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity risky service principal information",
            "FullDescription": "Allows the app to read all risky service principal information for your organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityRiskyServicePrincipal.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity risky service principal information",
            "FullDescription": "Allows the app to read and update identity risky service principal for your organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRiskyServicePrincipal",
        "apiReference": "https://learn.microsoft.com/graph/api/identityprotectionroot-list-riskyserviceprincipals?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRiskyServicePrincipal",
        "apiReference": ""
      }
    }
  },
  "45eada1dcefe": {
    "path": "/identityProtection/riskyServicePrincipals/{riskyServicePrincipal-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityRiskyServicePrincipal.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity risky service principal information",
            "FullDescription": "Allows the app to read all risky service principal information for your organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityRiskyServicePrincipal.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity risky service principal information",
            "FullDescription": "Allows the app to read and update identity risky service principal for your organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRiskyServicePrincipal",
        "apiReference": "https://learn.microsoft.com/graph/api/riskyserviceprincipal-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRiskyServicePrincipal",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRiskyServicePrincipal",
        "apiReference": ""
      }
    }
  },
  "1f3f648e2709": {
    "path": "/identityProtection/riskyServicePrincipals/{riskyServicePrincipal-id}/history",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityRiskyServicePrincipal.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity risky service principal information",
            "FullDescription": "Allows the app to read all risky service principal information for your organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityRiskyServicePrincipal.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity risky service principal information",
            "FullDescription": "Allows the app to read and update identity risky service principal for your organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRiskyServicePrincipalHistory",
        "apiReference": "https://learn.microsoft.com/graph/api/riskyserviceprincipal-list-history?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRiskyServicePrincipalHistory",
        "apiReference": ""
      }
    }
  },
  "4f12725be62b": {
    "path": "/identityProtection/riskyServicePrincipals/{riskyServicePrincipal-id}/history/{riskyServicePrincipalHistoryItem-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRiskyServicePrincipalHistory",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRiskyServicePrincipalHistory",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRiskyServicePrincipalHistory",
        "apiReference": ""
      }
    }
  },
  "27b7fab18f3d": {
    "path": "/identityProtection/riskyServicePrincipals/{riskyServicePrincipal-id}/history/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityRiskyServicePrincipal.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity risky service principal information",
            "FullDescription": "Allows the app to read all risky service principal information for your organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityRiskyServicePrincipal.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity risky service principal information",
            "FullDescription": "Allows the app to read and update identity risky service principal for your organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRiskyServicePrincipalHistoryCount",
        "apiReference": ""
      }
    }
  },
  "9260597e14d8": {
    "path": "/identityProtection/riskyServicePrincipals/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityRiskyServicePrincipal.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity risky service principal information",
            "FullDescription": "Allows the app to read all risky service principal information for your organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityRiskyServicePrincipal.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all identity risky service principal information",
            "FullDescription": "Allows the app to read and update identity risky service principal for your organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRiskyServicePrincipalCount",
        "apiReference": ""
      }
    }
  },
  "63b0ab277a29": {
    "path": "/identityProtection/riskyServicePrincipals/microsoft.graph.confirmCompromised",
    "methods": {}
  },
  "9c00d2ea93ab": {
    "path": "/identityProtection/riskyServicePrincipals/microsoft.graph.dismiss",
    "methods": {}
  },
  "4c4d83bd38ed": {
    "path": "/identityProtection/riskyUsers",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRiskyUser",
        "apiReference": "https://learn.microsoft.com/graph/api/riskyusers-get?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRiskyUser",
        "apiReference": ""
      }
    }
  },
  "c4e44a846597": {
    "path": "/identityProtection/riskyUsers/{riskyUser-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRiskyUser",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRiskyUser",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRiskyUser",
        "apiReference": ""
      }
    }
  },
  "fc220f3c5e91": {
    "path": "/identityProtection/riskyUsers/{riskyUser-id}/history",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityRiskyUser.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity risky user information",
            "FullDescription": "Allows the app to read the identity risky user information for your organization without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityRiskyUser.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all risky user information",
            "FullDescription": "Allows the app to read and update identity risky user information for your organization without a signed-in user. Update operations include dismissing risky users.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRiskyUserHistory",
        "apiReference": "https://learn.microsoft.com/graph/api/riskyuser-list-history?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRiskyUserHistory",
        "apiReference": ""
      }
    }
  },
  "611594c77b6c": {
    "path": "/identityProtection/riskyUsers/{riskyUser-id}/history/{riskyUserHistoryItem-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityRiskyUser.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity risky user information",
            "FullDescription": "Allows the app to read the identity risky user information for your organization without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityRiskyUser.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all risky user information",
            "FullDescription": "Allows the app to read and update identity risky user information for your organization without a signed-in user. Update operations include dismissing risky users.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRiskyUserHistory",
        "apiReference": "https://learn.microsoft.com/graph/api/riskyuserhistoryitem-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRiskyUserHistory",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRiskyUserHistory",
        "apiReference": ""
      }
    }
  },
  "35447345fe8b": {
    "path": "/identityProtection/riskyUsers/{riskyUser-id}/history/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "IdentityRiskyUser.Read.All",
            "IsAdmin": false,
            "Description": "Read all identity risky user information",
            "FullDescription": "Allows the app to read the identity risky user information for your organization without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "IdentityRiskyUser.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all risky user information",
            "FullDescription": "Allows the app to read and update identity risky user information for your organization without a signed-in user. Update operations include dismissing risky users.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRiskyUserHistoryCount",
        "apiReference": ""
      }
    }
  },
  "da57e8a9d80c": {
    "path": "/identityProtection/riskyUsers/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRiskyUserCount",
        "apiReference": ""
      }
    }
  },
  "f6a95cda94a6": {
    "path": "/identityProtection/riskyUsers/microsoft.graph.confirmCompromised",
    "methods": {}
  },
  "71739ac2936a": {
    "path": "/identityProtection/riskyUsers/microsoft.graph.dismiss",
    "methods": {}
  },
  "70ef8ce108a3": {
    "path": "/identityProtection/servicePrincipalRiskDetections",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaServicePrincipalRiskDetection",
        "apiReference": "https://learn.microsoft.com/graph/api/identityprotectionroot-list-serviceprincipalriskdetections?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaServicePrincipalRiskDetection",
        "apiReference": ""
      }
    }
  },
  "f2e16d32e716": {
    "path": "/identityProtection/servicePrincipalRiskDetections/{servicePrincipalRiskDetection-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaServicePrincipalRiskDetection",
        "apiReference": "https://learn.microsoft.com/graph/api/serviceprincipalriskdetection-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaServicePrincipalRiskDetection",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaServicePrincipalRiskDetection",
        "apiReference": ""
      }
    }
  },
  "e006c942abd9": {
    "path": "/identityProtection/servicePrincipalRiskDetections/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaServicePrincipalRiskDetectionCount",
        "apiReference": ""
      }
    }
  },
  "b73240c9edf9": {
    "path": "/identityProviders",
    "methods": {}
  },
  "0c0bdfcd05ae": {
    "path": "/identityProviders/{identityProvider-id}",
    "methods": {}
  },
  "1e0906e9b43b": {
    "path": "/identityProviders/$count",
    "methods": {}
  },
  "184581949169": {
    "path": "/identityProviders/microsoft.graph.availableProviderTypes()",
    "methods": {}
  },
  "a175d7e71361": {
    "path": "/informationProtection",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtection",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaInformationProtection",
        "apiReference": ""
      }
    }
  },
  "e29397c4b8f9": {
    "path": "/informationProtection/bitlocker",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionBitlocker",
        "apiReference": ""
      }
    }
  },
  "ea56749ae5b5": {
    "path": "/informationProtection/bitlocker/recoveryKeys",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "BitlockerKey.ReadBasic.All",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "BitlockerKey.Read.All",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionBitlockerRecoveryKey",
        "apiReference": "https://learn.microsoft.com/graph/api/bitlocker-list-recoverykeys?view=graph-rest-beta"
      }
    }
  },
  "acde6ab89358": {
    "path": "/informationProtection/bitlocker/recoveryKeys/{bitlockerRecoveryKey-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "BitlockerKey.ReadBasic.All",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "BitlockerKey.Read.All",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionBitlockerRecoveryKey",
        "apiReference": "https://learn.microsoft.com/graph/api/bitlockerrecoverykey-get?view=graph-rest-beta"
      }
    }
  },
  "5c76f6ef042d": {
    "path": "/informationProtection/bitlocker/recoveryKeys/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "BitlockerKey.ReadBasic.All",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "BitlockerKey.Read.All",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionBitlockerRecoveryKeyCount",
        "apiReference": ""
      }
    }
  },
  "ffa1c40524df": {
    "path": "/informationProtection/dataLossPreventionPolicies",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      }
    }
  },
  "ca4a23c71d57": {
    "path": "/informationProtection/dataLossPreventionPolicies/{dataLossPreventionPolicy-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      }
    }
  },
  "7044db21652a": {
    "path": "/informationProtection/dataLossPreventionPolicies/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionDataLossPreventionPolicyCount",
        "apiReference": ""
      }
    }
  },
  "9eaa802d3f1c": {
    "path": "/informationProtection/dataLossPreventionPolicies/microsoft.graph.evaluate",
    "methods": {}
  },
  "a398d7c25253": {
    "path": "/informationProtection/microsoft.graph.decryptBuffer",
    "methods": {}
  },
  "e008227aada6": {
    "path": "/informationProtection/microsoft.graph.encryptBuffer",
    "methods": {}
  },
  "e546fe54be6d": {
    "path": "/informationProtection/microsoft.graph.signDigest",
    "methods": {}
  },
  "995ffe46ee86": {
    "path": "/informationProtection/microsoft.graph.verifySignature",
    "methods": {}
  },
  "c7ba73f20211": {
    "path": "/informationProtection/policy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaInformationProtectionPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaInformationProtectionPolicy",
        "apiReference": ""
      }
    }
  },
  "15897bfbf895": {
    "path": "/informationProtection/policy/labels",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "InformationProtectionPolicy.Read",
            "IsAdmin": false,
            "Description": "Read user sensitivity labels and label policies.",
            "FullDescription": "Allows an app to read information protection sensitivity labels and label policy settings, on behalf of the signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "InformationProtectionPolicy.Read.All",
            "IsAdmin": false,
            "Description": "Read all published labels and label policies for an organization.",
            "FullDescription": "Allows an app to read published sensitivity labels and label policy settings for the entire organization or a specific user, without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionPolicyLabel",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaInformationProtectionPolicyLabel",
        "apiReference": ""
      }
    }
  },
  "ccef1bc9db96": {
    "path": "/informationProtection/policy/labels/{informationProtectionLabel-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "InformationProtectionPolicy.Read",
            "IsAdmin": false,
            "Description": "Read user sensitivity labels and label policies.",
            "FullDescription": "Allows an app to read information protection sensitivity labels and label policy settings, on behalf of the signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "InformationProtectionPolicy.Read.All",
            "IsAdmin": false,
            "Description": "Read all published labels and label policies for an organization.",
            "FullDescription": "Allows an app to read published sensitivity labels and label policy settings for the entire organization or a specific user, without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionPolicyLabel",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaInformationProtectionPolicyLabel",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaInformationProtectionPolicyLabel",
        "apiReference": ""
      }
    }
  },
  "57f4ddc75dc0": {
    "path": "/informationProtection/policy/labels/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "InformationProtectionPolicy.Read",
            "IsAdmin": false,
            "Description": "Read user sensitivity labels and label policies.",
            "FullDescription": "Allows an app to read information protection sensitivity labels and label policy settings, on behalf of the signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "InformationProtectionPolicy.Read.All",
            "IsAdmin": false,
            "Description": "Read all published labels and label policies for an organization.",
            "FullDescription": "Allows an app to read published sensitivity labels and label policy settings for the entire organization or a specific user, without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionPolicyLabelCount",
        "apiReference": ""
      }
    }
  },
  "e25747eb248f": {
    "path": "/informationProtection/policy/labels/microsoft.graph.evaluateApplication",
    "methods": {}
  },
  "49a11ed490f4": {
    "path": "/informationProtection/policy/labels/microsoft.graph.evaluateClassificationResults",
    "methods": {}
  },
  "7ba183846962": {
    "path": "/informationProtection/policy/labels/microsoft.graph.evaluateRemoval",
    "methods": {}
  },
  "b2579a1361fd": {
    "path": "/informationProtection/policy/labels/microsoft.graph.extractLabel",
    "methods": {}
  },
  "f1728c76c90c": {
    "path": "/informationProtection/sensitivityLabels",
    "methods": {}
  },
  "6ea6589613ad": {
    "path": "/informationProtection/sensitivityLabels/{sensitivityLabel-id}",
    "methods": {}
  },
  "cd873716d878": {
    "path": "/informationProtection/sensitivityLabels/{sensitivityLabel-id}/sublabels",
    "methods": {}
  },
  "cade9a9eba7e": {
    "path": "/informationProtection/sensitivityLabels/{sensitivityLabel-id}/sublabels/{sensitivityLabel-id1}",
    "methods": {}
  },
  "fbe96b85fe06": {
    "path": "/informationProtection/sensitivityLabels/{sensitivityLabel-id}/sublabels/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionSensitivityLabelSublabelCount",
        "apiReference": ""
      }
    }
  },
  "cc4ca2e0fb38": {
    "path": "/informationProtection/sensitivityLabels/{sensitivityLabel-id}/sublabels/microsoft.graph.evaluate",
    "methods": {}
  },
  "f323c383e7d0": {
    "path": "/informationProtection/sensitivityLabels/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionSensitivityLabelCount",
        "apiReference": ""
      }
    }
  },
  "d4544c0aeb99": {
    "path": "/informationProtection/sensitivityLabels/microsoft.graph.evaluate",
    "methods": {}
  },
  "546afa071834": {
    "path": "/informationProtection/sensitivityPolicySettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionSensitivityPolicySetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaInformationProtectionSensitivityPolicySetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaInformationProtectionSensitivityPolicySetting",
        "apiReference": ""
      }
    }
  },
  "d2b9c6adedd6": {
    "path": "/informationProtection/threatAssessmentRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ThreatAssessment.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write threat assessment requests",
            "FullDescription": "Allows an app to read your organization's threat assessment requests on your behalf. Also allows the app to create new requests to assess threats received by your organization on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "ThreatAssessment.Read.All",
            "IsAdmin": false,
            "Description": "Read threat assessment requests",
            "FullDescription": "Allows an app to read your organization's threat assessment requests, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionThreatAssessmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/informationprotection-list-threatassessmentrequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaInformationProtectionThreatAssessmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/informationprotection-post-threatassessmentrequests?view=graph-rest-beta"
      }
    }
  },
  "09e89496549b": {
    "path": "/informationProtection/threatAssessmentRequests/{threatAssessmentRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ThreatAssessment.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write threat assessment requests",
            "FullDescription": "Allows an app to read your organization's threat assessment requests on your behalf. Also allows the app to create new requests to assess threats received by your organization on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "ThreatAssessment.Read.All",
            "IsAdmin": false,
            "Description": "Read threat assessment requests",
            "FullDescription": "Allows an app to read your organization's threat assessment requests, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionThreatAssessmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/threatassessmentrequest-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaInformationProtectionThreatAssessmentRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaInformationProtectionThreatAssessmentRequest",
        "apiReference": ""
      }
    }
  },
  "57a688a1dd31": {
    "path": "/informationProtection/threatAssessmentRequests/{threatAssessmentRequest-id}/results",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      }
    }
  },
  "581ac0035437": {
    "path": "/informationProtection/threatAssessmentRequests/{threatAssessmentRequest-id}/results/{threatAssessmentResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      }
    }
  },
  "f6b11c4cc8fb": {
    "path": "/informationProtection/threatAssessmentRequests/{threatAssessmentRequest-id}/results/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInformationProtectionThreatAssessmentRequestResultCount",
        "apiReference": ""
      }
    }
  },
  "591dd7fef678": {
    "path": "/informationProtection/threatAssessmentRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ThreatAssessment.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write threat assessment requests",
            "FullDescription": "Allows an app to read your organization's threat assessment requests on your behalf. Also allows the app to create new requests to assess threats received by your organization on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "ThreatAssessment.Read.All",
            "IsAdmin": false,
            "Description": "Read threat assessment requests",
            "FullDescription": "Allows an app to read your organization's threat assessment requests, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaInformationProtectionThreatAssessmentRequestCount",
        "apiReference": ""
      }
    }
  },
  "be534d6eae9e": {
    "path": "/invitations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInvitation",
        "apiReference": ""
      },
      "post": {
        "permissions": [
          {
            "Name": "User.Invite.All",
            "IsAdmin": false,
            "Description": "Invite guest users to the organization",
            "FullDescription": "Allows the app to invite guest users to the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "User.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all users' full profiles",
            "FullDescription": "Allows the app to read and update user profiles without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaInvitation",
        "apiReference": "https://learn.microsoft.com/graph/api/invitation-post?view=graph-rest-beta"
      }
    }
  },
  "bec8923e2c46": {
    "path": "/invitations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInvitationCount",
        "apiReference": ""
      }
    }
  },
  "d211ba043c9f": {
    "path": "/invitations/invitedUser",
    "methods": {}
  },
  "a6cfe036d1e7": {
    "path": "/invitations/invitedUser/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInvitationInvitedUserMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaInvitationInvitedUserMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "746f49184ef6": {
    "path": "/invitations/invitedUser/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInvitationInvitedUserServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "dd88030209c9": {
    "path": "/invitations/invitedUser/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInvitationInvitedUserServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "7ac75d5085f9": {
    "path": "/invitations/invitedUserSponsors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInvitationInvitedUserSponsor",
        "apiReference": ""
      }
    }
  },
  "32930126d69f": {
    "path": "/invitations/invitedUserSponsors/{directoryObject-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInvitationInvitedUserSponsor",
        "apiReference": ""
      }
    }
  },
  "6c16d905f5e7": {
    "path": "/invitations/invitedUserSponsors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaInvitationInvitedUserSponsorCount",
        "apiReference": ""
      }
    }
  },
  "aad386f24b63": {
    "path": "/oauth2PermissionGrants",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "DelegatedPermissionGrant.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all delegated permission grants",
            "FullDescription": "Allows the app to manage permission grants for delegated permissions exposed by any API (including Microsoft Graph), without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaOauth2PermissionGrant",
        "apiReference": "https://learn.microsoft.com/graph/api/oauth2permissiongrant-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "DelegatedPermissionGrant.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all delegated permission grants",
            "FullDescription": "Allows the app to manage permission grants for delegated permissions exposed by any API (including Microsoft Graph), without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaOauth2PermissionGrant",
        "apiReference": "https://learn.microsoft.com/graph/api/oauth2permissiongrant-post?view=graph-rest-beta"
      }
    }
  },
  "0be96fb603a9": {
    "path": "/oauth2PermissionGrants/{oAuth2PermissionGrant-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "DelegatedPermissionGrant.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all delegated permission grants",
            "FullDescription": "Allows the app to manage permission grants for delegated permissions exposed by any API (including Microsoft Graph), without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaOauth2PermissionGrant",
        "apiReference": "https://learn.microsoft.com/graph/api/oauth2permissiongrant-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "DelegatedPermissionGrant.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all delegated permission grants",
            "FullDescription": "Allows the app to manage permission grants for delegated permissions exposed by any API (including Microsoft Graph), without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaOauth2PermissionGrant",
        "apiReference": "https://learn.microsoft.com/graph/api/oauth2permissiongrant-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "DelegatedPermissionGrant.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all delegated permission grants",
            "FullDescription": "Allows the app to manage permission grants for delegated permissions exposed by any API (including Microsoft Graph), without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaOauth2PermissionGrant",
        "apiReference": "https://learn.microsoft.com/graph/api/oauth2permissiongrant-delete?view=graph-rest-beta"
      }
    }
  },
  "3dd2b83c988e": {
    "path": "/oauth2PermissionGrants/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "DelegatedPermissionGrant.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all delegated permission grants",
            "FullDescription": "Allows the app to manage permission grants for delegated permissions exposed by any API (including Microsoft Graph), without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaOauth2PermissionGrantCount",
        "apiReference": ""
      }
    }
  },
  "ebe49daf670b": {
    "path": "/oauth2PermissionGrants/microsoft.graph.delta()",
    "methods": {}
  },
  "42f2a055ec7d": {
    "path": "/organization/{organization-id}/certificateBasedAuthConfiguration",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Organization.Read.All",
            "IsAdmin": false,
            "Description": "Read organization information",
            "FullDescription": "Allows the app to read the organization and related resources, without a signed-in user.Related resources include things like subscribed skus and tenant branding information.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Organization.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write organization information",
            "FullDescription": "Allows the app to read and write the organization and related resources, without a signed-in user.Related resources include things like subscribed skus and tenant branding information.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaOrganizationCertificateBasedAuthConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/certificatebasedauthconfiguration-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaOrganizationCertificateBasedAuthConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/certificatebasedauthconfiguration-post-certificatebasedauthconfiguration?view=graph-rest-beta"
      }
    }
  },
  "eaa8c42616b3": {
    "path": "/organization/{organization-id}/certificateBasedAuthConfiguration/{certificateBasedAuthConfiguration-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Organization.Read.All",
            "IsAdmin": false,
            "Description": "Read organization information",
            "FullDescription": "Allows the app to read the organization and related resources, without a signed-in user.Related resources include things like subscribed skus and tenant branding information.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Organization.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write organization information",
            "FullDescription": "Allows the app to read and write the organization and related resources, without a signed-in user.Related resources include things like subscribed skus and tenant branding information.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaOrganizationCertificateBasedAuthConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/certificatebasedauthconfiguration-get?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaOrganizationCertificateBasedAuthConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/certificatebasedauthconfiguration-delete?view=graph-rest-beta"
      }
    }
  },
  "708dabfc6b47": {
    "path": "/organization/{organization-id}/certificateBasedAuthConfiguration/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Organization.Read.All",
            "IsAdmin": false,
            "Description": "Read organization information",
            "FullDescription": "Allows the app to read the organization and related resources, without a signed-in user.Related resources include things like subscribed skus and tenant branding information.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Organization.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write organization information",
            "FullDescription": "Allows the app to read and write the organization and related resources, without a signed-in user.Related resources include things like subscribed skus and tenant branding information.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaOrganizationCertificateBasedAuthConfigurationCount",
        "apiReference": ""
      }
    }
  },
  "54b8a71e3884": {
    "path": "/policies",
    "methods": {}
  },
  "104bdf3c3baa": {
    "path": "/policies/accessReviewPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AccessReview",
            "IsAdmin": false,
            "Description": "Read and write your organization's directory access review default policy",
            "FullDescription": "Allows the app to read and write your organization's directory access review default policy without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAccessReviewPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyAccessReviewPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyAccessReviewPolicy",
        "apiReference": ""
      }
    }
  },
  "03d2c6ce4add": {
    "path": "/policies/activityBasedTimeoutPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyActivityBasedTimeoutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/activitybasedtimeoutpolicy-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaPolicyActivityBasedTimeoutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/activitybasedtimeoutpolicy-post-activitybasedtimeoutpolicies?view=graph-rest-beta"
      }
    }
  },
  "1ba11daf71b4": {
    "path": "/policies/activityBasedTimeoutPolicies/{activityBasedTimeoutPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyActivityBasedTimeoutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/activitybasedtimeoutpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyActivityBasedTimeoutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/activitybasedtimeoutpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaPolicyActivityBasedTimeoutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/activitybasedtimeoutpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "2057f8aa0d2b": {
    "path": "/policies/activityBasedTimeoutPolicies/{activityBasedTimeoutPolicy-id}/appliesTo",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyActivityBasedTimeoutPolicyApplyTo",
        "apiReference": ""
      }
    }
  },
  "2955d00f6143": {
    "path": "/policies/activityBasedTimeoutPolicies/{activityBasedTimeoutPolicy-id}/appliesTo/{directoryObject-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyActivityBasedTimeoutPolicyApplyTo",
        "apiReference": ""
      }
    }
  },
  "684e364ee0ed": {
    "path": "/policies/activityBasedTimeoutPolicies/{activityBasedTimeoutPolicy-id}/appliesTo/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyActivityBasedTimeoutPolicyApplyToCount",
        "apiReference": ""
      }
    }
  },
  "8d11e29f9e2f": {
    "path": "/policies/activityBasedTimeoutPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyActivityBasedTimeoutPolicyCount",
        "apiReference": ""
      }
    }
  },
  "6050e310d0ee": {
    "path": "/policies/adminConsentRequestPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConsentRequest",
            "IsAdmin": false,
            "Description": "Read and write your organization's consent request policy",
            "FullDescription": "Allows the app to read and write your organization's consent requests policy without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAdminConsentRequestPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/adminconsentrequestpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyAdminConsentRequestPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/adminconsentrequestpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyAdminConsentRequestPolicy",
        "apiReference": ""
      }
    }
  },
  "608d298818ca": {
    "path": "/policies/appManagementPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/appmanagementpolicy-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaPolicyAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/appmanagementpolicy-post?view=graph-rest-beta"
      }
    }
  },
  "be83f77bdade": {
    "path": "/policies/appManagementPolicies/{appManagementPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/appmanagementpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/appmanagementpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaPolicyAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/appmanagementpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "cde338a76362": {
    "path": "/policies/appManagementPolicies/{appManagementPolicy-id}/appliesTo",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAppManagementPolicyApplyTo",
        "apiReference": "https://learn.microsoft.com/graph/api/appmanagementpolicy-list-appliesto?view=graph-rest-beta"
      }
    }
  },
  "3a24f699d190": {
    "path": "/policies/appManagementPolicies/{appManagementPolicy-id}/appliesTo/{directoryObject-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAppManagementPolicyApplyTo",
        "apiReference": ""
      }
    }
  },
  "f25a301e274b": {
    "path": "/policies/appManagementPolicies/{appManagementPolicy-id}/appliesTo/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAppManagementPolicyApplyToCount",
        "apiReference": ""
      }
    }
  },
  "5a4af5622429": {
    "path": "/policies/appManagementPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAppManagementPolicyCount",
        "apiReference": ""
      }
    }
  },
  "2ef21358b0e8": {
    "path": "/policies/authenticationFlowsPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AuthenticationFlows",
            "IsAdmin": false,
            "Description": "Read and write authentication flow policies",
            "FullDescription": "Allows the app to read and write all authentication flow policies for the tenant, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAuthenticationFlowPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationflowspolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyAuthenticationFlowPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationflowspolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyAuthenticationFlowPolicy",
        "apiReference": ""
      }
    }
  },
  "ccf4c7698063": {
    "path": "/policies/authenticationMethodsPolicy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthenticationMethodPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationmethodspolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyAuthenticationMethodPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationmethodspolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyAuthenticationMethodPolicy",
        "apiReference": ""
      }
    }
  },
  "3b947afc6b61": {
    "path": "/policies/authenticationMethodsPolicy/authenticationMethodConfigurations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthenticationMethodPolicyAuthenticationMethodConfiguration",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyAuthenticationMethodPolicyAuthenticationMethodConfiguration",
        "apiReference": ""
      }
    }
  },
  "6c9630720b68": {
    "path": "/policies/authenticationMethodsPolicy/authenticationMethodConfigurations/{authenticationMethodConfiguration-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AuthenticationMethod",
            "IsAdmin": false,
            "Description": "Read and write all authentication method policies",
            "FullDescription": "Allows the app to read and write all authentication method policies for the tenant, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAuthenticationMethodPolicyAuthenticationMethodConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/externalauthenticationmethodconfiguration-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyAuthenticationMethodPolicyAuthenticationMethodConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/externalauthenticationmethodconfiguration-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyAuthenticationMethodPolicyAuthenticationMethodConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/externalauthenticationmethodconfiguration-delete?view=graph-rest-beta"
      }
    }
  },
  "d2263d2a8b6c": {
    "path": "/policies/authenticationMethodsPolicy/authenticationMethodConfigurations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthenticationMethodPolicyAuthenticationMethodConfigurationCount",
        "apiReference": ""
      }
    }
  },
  "9f2ec28ca05a": {
    "path": "/policies/authenticationStrengthPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AuthenticationMethod",
            "IsAdmin": false,
            "Description": "Read and write all authentication method policies",
            "FullDescription": "Allows the app to read and write all authentication method policies for the tenant, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAuthenticationStrengthPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationstrengthroot-list-policies?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AuthenticationMethod",
            "IsAdmin": false,
            "Description": "Read and write all authentication method policies",
            "FullDescription": "Allows the app to read and write all authentication method policies for the tenant, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaPolicyAuthenticationStrengthPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationstrengthroot-post-policies?view=graph-rest-beta"
      }
    }
  },
  "cbb322927a1e": {
    "path": "/policies/authenticationStrengthPolicies/{authenticationStrengthPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AuthenticationMethod",
            "IsAdmin": false,
            "Description": "Read and write all authentication method policies",
            "FullDescription": "Allows the app to read and write all authentication method policies for the tenant, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAuthenticationStrengthPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationstrengthpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AuthenticationMethod",
            "IsAdmin": false,
            "Description": "Read and write all authentication method policies",
            "FullDescription": "Allows the app to read and write all authentication method policies for the tenant, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyAuthenticationStrengthPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationstrengthpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AuthenticationMethod",
            "IsAdmin": false,
            "Description": "Read and write all authentication method policies",
            "FullDescription": "Allows the app to read and write all authentication method policies for the tenant, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaPolicyAuthenticationStrengthPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authenticationstrengthroot-delete-policies?view=graph-rest-beta"
      }
    }
  },
  "7f7b77bb2f19": {
    "path": "/policies/authenticationStrengthPolicies/{authenticationStrengthPolicy-id}/combinationConfigurations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      }
    }
  },
  "cc9763fb732c": {
    "path": "/policies/authenticationStrengthPolicies/{authenticationStrengthPolicy-id}/combinationConfigurations/{authenticationCombinationConfiguration-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyAuthenticationStrengthPolicyCombinationConfiguration",
        "apiReference": ""
      }
    }
  },
  "8e1ba6167bbe": {
    "path": "/policies/authenticationStrengthPolicies/{authenticationStrengthPolicy-id}/combinationConfigurations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthenticationStrengthPolicyCombinationConfigurationCount",
        "apiReference": ""
      }
    }
  },
  "fe01de0cda33": {
    "path": "/policies/authenticationStrengthPolicies/{authenticationStrengthPolicy-id}/microsoft.graph.updateAllowedCombinations",
    "methods": {}
  },
  "f6380ea15a46": {
    "path": "/policies/authenticationStrengthPolicies/{authenticationStrengthPolicy-id}/microsoft.graph.usage()",
    "methods": {}
  },
  "7355a25c1513": {
    "path": "/policies/authenticationStrengthPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AuthenticationMethod",
            "IsAdmin": false,
            "Description": "Read and write all authentication method policies",
            "FullDescription": "Allows the app to read and write all authentication method policies for the tenant, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAuthenticationStrengthPolicyCount",
        "apiReference": ""
      }
    }
  },
  "d2010d6020aa": {
    "path": "/policies/authenticationStrengthPolicies/microsoft.graph.findByMethodMode(authenticationMethodModes={authenticationMethodModes})",
    "methods": {}
  },
  "d01c3b07c76f": {
    "path": "/policies/authorizationPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.Authorization",
            "IsAdmin": false,
            "Description": "Read and write your organization's authorization policy",
            "FullDescription": "Allows the app to read and write your organization's authorization policy without a signed in user. For example, authorization policies can control some of the permissions that the out-of-the-box user role has by default.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAuthorizationPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/authorizationpolicy-get?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyAuthorizationPolicy",
        "apiReference": ""
      }
    }
  },
  "396ae55230a3": {
    "path": "/policies/authorizationPolicy/{authorizationPolicy-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthorizationPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyAuthorizationPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyAuthorizationPolicy",
        "apiReference": ""
      }
    }
  },
  "1bdbec447c44": {
    "path": "/policies/authorizationPolicy/{authorizationPolicy-id}/defaultUserRoleOverrides",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthorizationPolicyDefaultUserRoleOverride",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyAuthorizationPolicyDefaultUserRoleOverride",
        "apiReference": ""
      }
    }
  },
  "638f4641f66a": {
    "path": "/policies/authorizationPolicy/{authorizationPolicy-id}/defaultUserRoleOverrides/{defaultUserRoleOverride-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthorizationPolicyDefaultUserRoleOverride",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyAuthorizationPolicyDefaultUserRoleOverride",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyAuthorizationPolicyDefaultUserRoleOverride",
        "apiReference": ""
      }
    }
  },
  "e9305914c0a1": {
    "path": "/policies/authorizationPolicy/{authorizationPolicy-id}/defaultUserRoleOverrides/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyAuthorizationPolicyDefaultUserRoleOverrideCount",
        "apiReference": ""
      }
    }
  },
  "8998ad2e1938": {
    "path": "/policies/authorizationPolicy/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.Authorization",
            "IsAdmin": false,
            "Description": "Read and write your organization's authorization policy",
            "FullDescription": "Allows the app to read and write your organization's authorization policy without a signed in user. For example, authorization policies can control some of the permissions that the out-of-the-box user role has by default.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyAuthorizationPolicyCount",
        "apiReference": ""
      }
    }
  },
  "87e18b39d20a": {
    "path": "/policies/b2cAuthenticationMethodsPolicy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyB2CAuthenticationMethodPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cauthenticationmethodspolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyB2CAuthenticationMethodPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/b2cauthenticationmethodspolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyB2CAuthenticationMethodPolicy",
        "apiReference": ""
      }
    }
  },
  "cacb606d3700": {
    "path": "/policies/claimsMappingPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyClaimMappingPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/claimsmappingpolicy-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaPolicyClaimMappingPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/claimsmappingpolicy-post-claimsmappingpolicies?view=graph-rest-beta"
      }
    }
  },
  "8e9c81256d7b": {
    "path": "/policies/claimsMappingPolicies/{claimsMappingPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyClaimMappingPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/claimsmappingpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyClaimMappingPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/claimsmappingpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaPolicyClaimMappingPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/claimsmappingpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "a1f912e2f032": {
    "path": "/policies/claimsMappingPolicies/{claimsMappingPolicy-id}/appliesTo",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyClaimMappingPolicyApplyTo",
        "apiReference": "https://learn.microsoft.com/graph/api/claimsmappingpolicy-list-appliesto?view=graph-rest-beta"
      }
    }
  },
  "a61e71bbbe14": {
    "path": "/policies/claimsMappingPolicies/{claimsMappingPolicy-id}/appliesTo/{directoryObject-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyClaimMappingPolicyApplyTo",
        "apiReference": ""
      }
    }
  },
  "3f53acf71c94": {
    "path": "/policies/claimsMappingPolicies/{claimsMappingPolicy-id}/appliesTo/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyClaimMappingPolicyApplyToCount",
        "apiReference": ""
      }
    }
  },
  "0628b14031e0": {
    "path": "/policies/claimsMappingPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyClaimMappingPolicyCount",
        "apiReference": ""
      }
    }
  },
  "177cb31e4a9b": {
    "path": "/policies/conditionalAccessPolicies",
    "methods": {}
  },
  "335186e4771e": {
    "path": "/policies/conditionalAccessPolicies/{conditionalAccessPolicy-id}",
    "methods": {}
  },
  "4c611abdd12d": {
    "path": "/policies/conditionalAccessPolicies/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyConditionalAccessPolicyCount",
        "apiReference": ""
      }
    }
  },
  "d544e548a817": {
    "path": "/policies/crossTenantAccessPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.CrossTenantAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's cross tenant access policies",
            "FullDescription": "Allows the app to read and write your organization's cross tenant access policies without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyCrossTenantAccessPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyCrossTenantAccessPolicy",
        "apiReference": ""
      }
    }
  },
  "c2f12b264144": {
    "path": "/policies/crossTenantAccessPolicy/default",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.CrossTenantAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's cross tenant access policies",
            "FullDescription": "Allows the app to read and write your organization's cross tenant access policies without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicyDefault",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicyconfigurationdefault-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyCrossTenantAccessPolicyDefault",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicyconfigurationdefault-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyCrossTenantAccessPolicyDefault",
        "apiReference": ""
      }
    }
  },
  "83a4e9d6ffb2": {
    "path": "/policies/crossTenantAccessPolicy/default/microsoft.graph.resetToSystemDefault",
    "methods": {}
  },
  "6bd2ca244f5c": {
    "path": "/policies/crossTenantAccessPolicy/partners",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.CrossTenantAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's cross tenant access policies",
            "FullDescription": "Allows the app to read and write your organization's cross tenant access policies without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicyPartner",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicy-list-partners?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyCrossTenantAccessPolicyPartner",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicy-post-partners?view=graph-rest-beta"
      }
    }
  },
  "0b9a83705564": {
    "path": "/policies/crossTenantAccessPolicy/partners/{crossTenantAccessPolicyConfigurationPartner-tenantId}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.CrossTenantAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's cross tenant access policies",
            "FullDescription": "Allows the app to read and write your organization's cross tenant access policies without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicyPartner",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicyconfigurationpartner-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyCrossTenantAccessPolicyPartner",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicyconfigurationpartner-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyCrossTenantAccessPolicyPartner",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantaccesspolicyconfigurationpartner-delete?view=graph-rest-beta"
      }
    }
  },
  "d499785a11a8": {
    "path": "/policies/crossTenantAccessPolicy/partners/{crossTenantAccessPolicyConfigurationPartner-tenantId}/identitySynchronization",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.CrossTenantAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's cross tenant access policies",
            "FullDescription": "Allows the app to read and write your organization's cross tenant access policies without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicyPartnerIdentitySynchronization",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantidentitysyncpolicypartner-get?view=graph-rest-beta"
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaPolicyCrossTenantAccessPolicyPartnerIdentitySynchronization",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantidentitysyncpolicypartner-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyCrossTenantAccessPolicyPartnerIdentitySynchronization",
        "apiReference": "https://learn.microsoft.com/graph/api/crosstenantidentitysyncpolicypartner-delete?view=graph-rest-beta"
      }
    }
  },
  "b1fed4220706": {
    "path": "/policies/crossTenantAccessPolicy/partners/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.CrossTenantAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's cross tenant access policies",
            "FullDescription": "Allows the app to read and write your organization's cross tenant access policies without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicyPartnerCount",
        "apiReference": ""
      }
    }
  },
  "41d18df987d9": {
    "path": "/policies/crossTenantAccessPolicy/templates",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "MultiTenantOrganization.Read.All",
            "IsAdmin": false,
            "Description": "Read all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "MultiTenantOrganization.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read and write all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicyTemplate",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyCrossTenantAccessPolicyTemplate",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyCrossTenantAccessPolicyTemplate",
        "apiReference": ""
      }
    }
  },
  "32592fe0102d": {
    "path": "/policies/crossTenantAccessPolicy/templates/multiTenantOrganizationIdentitySynchronization",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicyTemplateMultiTenantOrganizationIdentitySynchronization",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganizationidentitysyncpolicytemplate-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyCrossTenantAccessPolicyTemplateMultiTenantOrganizationIdentitySynchronization",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganizationidentitysyncpolicytemplate-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyCrossTenantAccessPolicyTemplateMultiTenantOrganizationIdentitySynchronization",
        "apiReference": ""
      }
    }
  },
  "1c7af1ab5baf": {
    "path": "/policies/crossTenantAccessPolicy/templates/multiTenantOrganizationIdentitySynchronization/microsoft.graph.resetToDefaultSettings",
    "methods": {}
  },
  "79baa5a10065": {
    "path": "/policies/crossTenantAccessPolicy/templates/multiTenantOrganizationPartnerConfiguration",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyCrossTenantAccessPolicyTemplateMultiTenantOrganizationPartnerConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganizationpartnerconfigurationtemplate-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyCrossTenantAccessPolicyTemplateMultiTenantOrganizationPartnerConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganizationpartnerconfigurationtemplate-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyCrossTenantAccessPolicyTemplateMultiTenantOrganizationPartnerConfiguration",
        "apiReference": ""
      }
    }
  },
  "9798fbc75747": {
    "path": "/policies/crossTenantAccessPolicy/templates/multiTenantOrganizationPartnerConfiguration/microsoft.graph.resetToDefaultSettings",
    "methods": {}
  },
  "290628845b3a": {
    "path": "/policies/defaultAppManagementPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyDefaultAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tenantappmanagementpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyDefaultAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tenantappmanagementpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyDefaultAppManagementPolicy",
        "apiReference": ""
      }
    }
  },
  "2a7aa5dee20c": {
    "path": "/policies/deviceRegistrationPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.DeviceConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.DeviceConfiguration",
            "IsAdmin": true,
            "Description": "Read and write your organization's device configuration policies",
            "FullDescription": "Allows the app to read and write your organization's device configuration policies on your behalf.  For example, device registration policy can limit initial provisioning controls using quota restrictions, additional authentication and authorization checks.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyDeviceRegistrationPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/deviceregistrationpolicy-get?view=graph-rest-beta"
      }
    }
  },
  "00fffcf99ea3": {
    "path": "/policies/directoryRoleAccessReviewPolicy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyDirectoryRoleAccessReviewPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyDirectoryRoleAccessReviewPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyDirectoryRoleAccessReviewPolicy",
        "apiReference": ""
      }
    }
  },
  "10fb0a1a7c59": {
    "path": "/policies/externalIdentitiesPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ExternalIdentities",
            "IsAdmin": false,
            "Description": "Read and write your organization's external identities policy",
            "FullDescription": "Allows the application to read and update the organization's external identities policy without a signed-in user.  For example, external identities policy controls if users invited to access resources in your organization via B2B collaboration or B2B direct connect are allowed to self-service leave.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyExternalIdentityPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/externalidentitiespolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyExternalIdentityPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/externalidentitiespolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyExternalIdentityPolicy",
        "apiReference": ""
      }
    }
  },
  "fa103576f638": {
    "path": "/policies/featureRolloutPolicies",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyFeatureRolloutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/list-featurerolloutpolicies?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyFeatureRolloutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/post-featurerolloutpolicies?view=graph-rest-beta"
      }
    }
  },
  "ad5e7af949bf": {
    "path": "/policies/featureRolloutPolicies/{featureRolloutPolicy-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyFeatureRolloutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/featurerolloutpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyFeatureRolloutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/featurerolloutpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyFeatureRolloutPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/featurerolloutpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "bfa39d0cbe78": {
    "path": "/policies/featureRolloutPolicies/{featureRolloutPolicy-id}/appliesTo",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyFeatureRolloutPolicyApplyTo",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyFeatureRolloutPolicyApplyTo",
        "apiReference": "https://learn.microsoft.com/graph/api/featurerolloutpolicy-post-appliesto?view=graph-rest-beta"
      }
    }
  },
  "5f0edae76eb7": {
    "path": "/policies/featureRolloutPolicies/{featureRolloutPolicy-id}/appliesTo/{directoryObject-id}/$ref",
    "methods": {
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyFeatureRolloutPolicyApplyToDirectoryObjectByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/featurerolloutpolicy-delete-appliesto?view=graph-rest-beta"
      }
    }
  },
  "1593e258344c": {
    "path": "/policies/featureRolloutPolicies/{featureRolloutPolicy-id}/appliesTo/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyFeatureRolloutPolicyApplyToCount",
        "apiReference": ""
      }
    }
  },
  "b61d7b09a43d": {
    "path": "/policies/featureRolloutPolicies/{featureRolloutPolicy-id}/appliesTo/$ref",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyFeatureRolloutPolicyApplyToByRef",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyFeatureRolloutPolicyApplyToByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/featurerolloutpolicy-post-appliesto?view=graph-rest-beta"
      }
    }
  },
  "805c58c6c6ac": {
    "path": "/policies/featureRolloutPolicies/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyFeatureRolloutPolicyCount",
        "apiReference": ""
      }
    }
  },
  "a1300139da1e": {
    "path": "/policies/federatedTokenValidationPolicy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyFederatedTokenValidationPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/federatedtokenvalidationpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyFederatedTokenValidationPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/federatedtokenvalidationpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyFederatedTokenValidationPolicy",
        "apiReference": ""
      }
    }
  },
  "532209fea55d": {
    "path": "/policies/homeRealmDiscoveryPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyHomeRealmDiscoveryPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/homerealmdiscoverypolicy-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaPolicyHomeRealmDiscoveryPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/homerealmdiscoverypolicy-post-homerealmdiscoverypolicies?view=graph-rest-beta"
      }
    }
  },
  "2ba36abc4f01": {
    "path": "/policies/homeRealmDiscoveryPolicies/{homeRealmDiscoveryPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyHomeRealmDiscoveryPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/homerealmdiscoverypolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyHomeRealmDiscoveryPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/homerealmdiscoverypolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaPolicyHomeRealmDiscoveryPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/homerealmdiscoverypolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "eb871c2652b0": {
    "path": "/policies/homeRealmDiscoveryPolicies/{homeRealmDiscoveryPolicy-id}/appliesTo",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyHomeRealmDiscoveryPolicyApplyTo",
        "apiReference": "https://learn.microsoft.com/graph/api/homerealmdiscoverypolicy-list-appliesto?view=graph-rest-beta"
      }
    }
  },
  "ce6935162e92": {
    "path": "/policies/homeRealmDiscoveryPolicies/{homeRealmDiscoveryPolicy-id}/appliesTo/{directoryObject-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyHomeRealmDiscoveryPolicyApplyTo",
        "apiReference": ""
      }
    }
  },
  "bb7fc56e1931": {
    "path": "/policies/homeRealmDiscoveryPolicies/{homeRealmDiscoveryPolicy-id}/appliesTo/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyHomeRealmDiscoveryPolicyApplyToCount",
        "apiReference": ""
      }
    }
  },
  "94063696751f": {
    "path": "/policies/homeRealmDiscoveryPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyHomeRealmDiscoveryPolicyCount",
        "apiReference": ""
      }
    }
  },
  "1a537de5113f": {
    "path": "/policies/identitySecurityDefaultsEnforcementPolicy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.SecurityDefaults",
            "IsAdmin": false,
            "Description": "Read and write your organization's security defaults policy",
            "FullDescription": "Allows the app to read and write your organization's security defaults policy, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyIdentitySecurityDefaultEnforcementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/identitysecuritydefaultsenforcementpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.SecurityDefaults",
            "IsAdmin": false,
            "Description": "Read and write your organization's security defaults policy",
            "FullDescription": "Allows the app to read and write your organization's security defaults policy, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ConditionalAccess",
            "IsAdmin": false,
            "Description": "Read and write your organization's conditional access policies",
            "FullDescription": "Allows the app to read and write your organization's conditional access policies, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyIdentitySecurityDefaultEnforcementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/identitysecuritydefaultsenforcementpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyIdentitySecurityDefaultEnforcementPolicy",
        "apiReference": ""
      }
    }
  },
  "ecd5d44c8486": {
    "path": "/policies/mobileAppManagementPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/mobileappmanagementpolicies-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyMobileAppManagementPolicy",
        "apiReference": ""
      }
    }
  },
  "7fea249ae256": {
    "path": "/policies/mobileAppManagementPolicies/{mobilityManagementPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/mobileappmanagementpolicies-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyMobileAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/mobileappmanagementpolicies-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyMobileAppManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/mobileappmanagementpolicies-delete?view=graph-rest-beta"
      }
    }
  },
  "3883a2f9ba0b": {
    "path": "/policies/mobileAppManagementPolicies/{mobilityManagementPolicy-id}/includedGroups",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileAppManagementPolicyIncludedGroup",
        "apiReference": "https://learn.microsoft.com/graph/api/mobileappmanagementpolicies-list-includedgroups?view=graph-rest-beta"
      }
    }
  },
  "faaab00b9cdd": {
    "path": "/policies/mobileAppManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/{group-id}/$ref",
    "methods": {}
  },
  "d27d4dfcfc8e": {
    "path": "/policies/mobileAppManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/{group-id}/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyMobileAppManagementPolicyIncludedGroupServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "280a7289b4e3": {
    "path": "/policies/mobileAppManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/{group-id}/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyMobileAppManagementPolicyIncludedGroupServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "da971fc4f2fd": {
    "path": "/policies/mobileAppManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileAppManagementPolicyIncludedGroupCount",
        "apiReference": ""
      }
    }
  },
  "3ffda9760589": {
    "path": "/policies/mobileAppManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/$ref",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileAppManagementPolicyIncludedGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/mobileappmanagementpolicies-list-includedgroups?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyMobileAppManagementPolicyIncludedGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/mobileappmanagementpolicies-post-includedgroups?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyMobileAppManagementPolicyIncludedGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/mobileappmanagementpolicies-delete-includedgroups?view=graph-rest-beta"
      }
    }
  },
  "39bacb402f34": {
    "path": "/policies/mobileAppManagementPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileAppManagementPolicyCount",
        "apiReference": ""
      }
    }
  },
  "67368716e6b1": {
    "path": "/policies/mobileDeviceManagementPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileDeviceManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/mobiledevicemanagementpolicies-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyMobileDeviceManagementPolicy",
        "apiReference": ""
      }
    }
  },
  "ea5805a1ede4": {
    "path": "/policies/mobileDeviceManagementPolicies/{mobilityManagementPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileDeviceManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/mobiledevicemanagementpolicies-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyMobileDeviceManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/mobiledevicemanagementpolicies-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyMobileDeviceManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/mobiledevicemanagementpolicies-delete?view=graph-rest-beta"
      }
    }
  },
  "e02ebd8de7aa": {
    "path": "/policies/mobileDeviceManagementPolicies/{mobilityManagementPolicy-id}/includedGroups",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileDeviceManagementPolicyIncludedGroup",
        "apiReference": "https://learn.microsoft.com/graph/api/mobiledevicemanagementpolicies-list-includedgroups?view=graph-rest-beta"
      }
    }
  },
  "c253dd656b80": {
    "path": "/policies/mobileDeviceManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/{group-id}/$ref",
    "methods": {}
  },
  "dee2bd55f145": {
    "path": "/policies/mobileDeviceManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/{group-id}/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyMobileDeviceManagementPolicyIncludedGroupServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "4dd8db8d1a35": {
    "path": "/policies/mobileDeviceManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/{group-id}/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyMobileDeviceManagementPolicyIncludedGroupServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "fcb4905b3851": {
    "path": "/policies/mobileDeviceManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileDeviceManagementPolicyIncludedGroupCount",
        "apiReference": ""
      }
    }
  },
  "879ad504b117": {
    "path": "/policies/mobileDeviceManagementPolicies/{mobilityManagementPolicy-id}/includedGroups/$ref",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileDeviceManagementPolicyIncludedGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/mobiledevicemanagementpolicies-list-includedgroups?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyMobileDeviceManagementPolicyIncludedGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/mobiledevicemanagementpolicies-post-includedgroups?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyMobileDeviceManagementPolicyIncludedGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/mobiledevicemanagementpolicies-delete-includedgroups?view=graph-rest-beta"
      }
    }
  },
  "28e5ad234a8c": {
    "path": "/policies/mobileDeviceManagementPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": true,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read your organization's policies on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Policy.ReadWrite.MobilityManagement",
            "IsAdmin": true,
            "Description": "Read and write your organization's mobility management policies",
            "FullDescription": "Allows the app to read and write your organization's mobility management policies on your behalf.  For example, a mobility management policy can set the enrollment scope for a given mobility management application.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPolicyMobileDeviceManagementPolicyCount",
        "apiReference": ""
      }
    }
  },
  "56aac59dd4f7": {
    "path": "/policies/permissionGrantPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.PermissionGrant",
            "IsAdmin": false,
            "Description": "Read consent and permission grant policies",
            "FullDescription": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.PermissionGrant",
            "IsAdmin": false,
            "Description": "Manage consent and permission grant policies",
            "FullDescription": "Allows the app to manage policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyPermissionGrantPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyPermissionGrantPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-post-permissiongrantpolicies?view=graph-rest-beta"
      }
    }
  },
  "d8b072391709": {
    "path": "/policies/permissionGrantPolicies/{permissionGrantPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.PermissionGrant",
            "IsAdmin": false,
            "Description": "Read consent and permission grant policies",
            "FullDescription": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.PermissionGrant",
            "IsAdmin": false,
            "Description": "Manage consent and permission grant policies",
            "FullDescription": "Allows the app to manage policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyPermissionGrantPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyPermissionGrantPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyPermissionGrantPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "f54466efdbc6": {
    "path": "/policies/permissionGrantPolicies/{permissionGrantPolicy-id}/excludes",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.PermissionGrant",
            "IsAdmin": false,
            "Description": "Read consent and permission grant policies",
            "FullDescription": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyPermissionGrantPolicyExclude",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-list-excludes?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyPermissionGrantPolicyExclude",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-post-excludes?view=graph-rest-beta"
      }
    }
  },
  "3d5bdff0e446": {
    "path": "/policies/permissionGrantPolicies/{permissionGrantPolicy-id}/excludes/{permissionGrantConditionSet-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyPermissionGrantPolicyExclude",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyPermissionGrantPolicyExclude",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyPermissionGrantPolicyExclude",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-delete-excludes?view=graph-rest-beta"
      }
    }
  },
  "8ec084907286": {
    "path": "/policies/permissionGrantPolicies/{permissionGrantPolicy-id}/excludes/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.PermissionGrant",
            "IsAdmin": false,
            "Description": "Read consent and permission grant policies",
            "FullDescription": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyPermissionGrantPolicyExcludeCount",
        "apiReference": ""
      }
    }
  },
  "dcaba95eb739": {
    "path": "/policies/permissionGrantPolicies/{permissionGrantPolicy-id}/includes",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.PermissionGrant",
            "IsAdmin": false,
            "Description": "Read consent and permission grant policies",
            "FullDescription": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyPermissionGrantPolicyInclude",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-list-includes?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyPermissionGrantPolicyInclude",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-post-includes?view=graph-rest-beta"
      }
    }
  },
  "4892cc62a512": {
    "path": "/policies/permissionGrantPolicies/{permissionGrantPolicy-id}/includes/{permissionGrantConditionSet-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyPermissionGrantPolicyInclude",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyPermissionGrantPolicyInclude",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyPermissionGrantPolicyInclude",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpolicy-delete-includes?view=graph-rest-beta"
      }
    }
  },
  "b8226f7fc199": {
    "path": "/policies/permissionGrantPolicies/{permissionGrantPolicy-id}/includes/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.PermissionGrant",
            "IsAdmin": false,
            "Description": "Read consent and permission grant policies",
            "FullDescription": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyPermissionGrantPolicyIncludeCount",
        "apiReference": ""
      }
    }
  },
  "edb82062babc": {
    "path": "/policies/permissionGrantPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.PermissionGrant",
            "IsAdmin": false,
            "Description": "Read consent and permission grant policies",
            "FullDescription": "Allows the app to read policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.PermissionGrant",
            "IsAdmin": false,
            "Description": "Manage consent and permission grant policies",
            "FullDescription": "Allows the app to manage policies related to consent and permission grants for applications, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyPermissionGrantPolicyCount",
        "apiReference": ""
      }
    }
  },
  "ed828eb5fd2a": {
    "path": "/policies/permissionGrantPreApprovalPolicies",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyPermissionGrantPreApprovalPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/policyroot-list-permissiongrantpreapprovalpolicies?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyPermissionGrantPreApprovalPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/policyroot-post-permissiongrantpreapprovalpolicies?view=graph-rest-beta"
      }
    }
  },
  "801ea658762a": {
    "path": "/policies/permissionGrantPreApprovalPolicies/{permissionGrantPreApprovalPolicy-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyPermissionGrantPreApprovalPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpreapprovalpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyPermissionGrantPreApprovalPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpreapprovalpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyPermissionGrantPreApprovalPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/permissiongrantpreapprovalpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "42e8a39317b4": {
    "path": "/policies/permissionGrantPreApprovalPolicies/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyPermissionGrantPreApprovalPolicyCount",
        "apiReference": ""
      }
    }
  },
  "a698d0f803c0": {
    "path": "/policies/roleManagementPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/policyroot-list-rolemanagementpolicies?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyRoleManagementPolicy",
        "apiReference": ""
      }
    }
  },
  "b086d4cccc0a": {
    "path": "/policies/roleManagementPolicies/{unifiedRoleManagementPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyRoleManagementPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyRoleManagementPolicy",
        "apiReference": ""
      }
    }
  },
  "3651f64df9db": {
    "path": "/policies/roleManagementPolicies/{unifiedRoleManagementPolicy-id}/effectiveRules",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyEffectiveRule",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedrolemanagementpolicy-list-effectiverules?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyRoleManagementPolicyEffectiveRule",
        "apiReference": ""
      }
    }
  },
  "bd89502a38d3": {
    "path": "/policies/roleManagementPolicies/{unifiedRoleManagementPolicy-id}/effectiveRules/{unifiedRoleManagementPolicyRule-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyRoleManagementPolicyEffectiveRule",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyRoleManagementPolicyEffectiveRule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyRoleManagementPolicyEffectiveRule",
        "apiReference": ""
      }
    }
  },
  "bc63fa4ecd76": {
    "path": "/policies/roleManagementPolicies/{unifiedRoleManagementPolicy-id}/effectiveRules/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyEffectiveRuleCount",
        "apiReference": ""
      }
    }
  },
  "083dc5851924": {
    "path": "/policies/roleManagementPolicies/{unifiedRoleManagementPolicy-id}/rules",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyRule",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedrolemanagementpolicy-list-rules?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyRoleManagementPolicyRule",
        "apiReference": ""
      }
    }
  },
  "dfadf903158e": {
    "path": "/policies/roleManagementPolicies/{unifiedRoleManagementPolicy-id}/rules/{unifiedRoleManagementPolicyRule-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyRule",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedrolemanagementpolicyrule-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read and write directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, on your behalf. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Update-MgBetaPolicyRoleManagementPolicyRule",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedrolemanagementpolicyrule-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyRoleManagementPolicyRule",
        "apiReference": ""
      }
    }
  },
  "31d1a50d7a80": {
    "path": "/policies/roleManagementPolicies/{unifiedRoleManagementPolicy-id}/rules/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyRuleCount",
        "apiReference": ""
      }
    }
  },
  "298ab8836a74": {
    "path": "/policies/roleManagementPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyCount",
        "apiReference": ""
      }
    }
  },
  "e0840589344d": {
    "path": "/policies/roleManagementPolicyAssignments",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/policyroot-list-rolemanagementpolicyassignments?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyRoleManagementPolicyAssignment",
        "apiReference": ""
      }
    }
  },
  "429a714c27b7": {
    "path": "/policies/roleManagementPolicyAssignments/{unifiedRoleManagementPolicyAssignment-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyRoleManagementPolicyAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyRoleManagementPolicyAssignment",
        "apiReference": ""
      }
    }
  },
  "832bea58f959": {
    "path": "/policies/roleManagementPolicyAssignments/{unifiedRoleManagementPolicyAssignment-id}/policy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyRoleManagementPolicyAssignmentPolicy",
        "apiReference": ""
      }
    }
  },
  "b956c1ed056c": {
    "path": "/policies/roleManagementPolicyAssignments/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementPolicy.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementPolicy.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyRoleManagementPolicyAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "fdd1f105178a": {
    "path": "/policies/servicePrincipalCreationPolicies",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicy",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyServicePrincipalCreationPolicy",
        "apiReference": ""
      }
    }
  },
  "0aad0ad09667": {
    "path": "/policies/servicePrincipalCreationPolicies/{servicePrincipalCreationPolicy-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyServicePrincipalCreationPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyServicePrincipalCreationPolicy",
        "apiReference": ""
      }
    }
  },
  "d2cd500605fc": {
    "path": "/policies/servicePrincipalCreationPolicies/{servicePrincipalCreationPolicy-id}/excludes",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicyExclude",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyServicePrincipalCreationPolicyExclude",
        "apiReference": ""
      }
    }
  },
  "099ffb228aab": {
    "path": "/policies/servicePrincipalCreationPolicies/{servicePrincipalCreationPolicy-id}/excludes/{servicePrincipalCreationConditionSet-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicyExclude",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyServicePrincipalCreationPolicyExclude",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyServicePrincipalCreationPolicyExclude",
        "apiReference": ""
      }
    }
  },
  "5a7880749b8a": {
    "path": "/policies/servicePrincipalCreationPolicies/{servicePrincipalCreationPolicy-id}/excludes/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicyExcludeCount",
        "apiReference": ""
      }
    }
  },
  "adf64238a035": {
    "path": "/policies/servicePrincipalCreationPolicies/{servicePrincipalCreationPolicy-id}/includes",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicyInclude",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPolicyServicePrincipalCreationPolicyInclude",
        "apiReference": ""
      }
    }
  },
  "41502d2db303": {
    "path": "/policies/servicePrincipalCreationPolicies/{servicePrincipalCreationPolicy-id}/includes/{servicePrincipalCreationConditionSet-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicyInclude",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPolicyServicePrincipalCreationPolicyInclude",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPolicyServicePrincipalCreationPolicyInclude",
        "apiReference": ""
      }
    }
  },
  "98205a842d0b": {
    "path": "/policies/servicePrincipalCreationPolicies/{servicePrincipalCreationPolicy-id}/includes/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicyIncludeCount",
        "apiReference": ""
      }
    }
  },
  "ec330d3817ee": {
    "path": "/policies/servicePrincipalCreationPolicies/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyServicePrincipalCreationPolicyCount",
        "apiReference": ""
      }
    }
  },
  "981300f6dacb": {
    "path": "/policies/tokenIssuancePolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenIssuancePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenissuancepolicy-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaPolicyTokenIssuancePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenissuancepolicy-post-tokenissuancepolicy?view=graph-rest-beta"
      }
    }
  },
  "15b48c0f0d15": {
    "path": "/policies/tokenIssuancePolicies/{tokenIssuancePolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenIssuancePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenissuancepolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyTokenIssuancePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenissuancepolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaPolicyTokenIssuancePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenissuancepolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "d698f4bedf24": {
    "path": "/policies/tokenIssuancePolicies/{tokenIssuancePolicy-id}/appliesTo",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenIssuancePolicyApplyTo",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenissuancepolicy-list-appliesto?view=graph-rest-beta"
      }
    }
  },
  "79a5387b8bb2": {
    "path": "/policies/tokenIssuancePolicies/{tokenIssuancePolicy-id}/appliesTo/{directoryObject-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyTokenIssuancePolicyApplyTo",
        "apiReference": ""
      }
    }
  },
  "3daf2c133bbd": {
    "path": "/policies/tokenIssuancePolicies/{tokenIssuancePolicy-id}/appliesTo/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenIssuancePolicyApplyToCount",
        "apiReference": ""
      }
    }
  },
  "7d5c9e9e6cd2": {
    "path": "/policies/tokenIssuancePolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenIssuancePolicyCount",
        "apiReference": ""
      }
    }
  },
  "24f9811ec18c": {
    "path": "/policies/tokenLifetimePolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenLifetimePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenlifetimepolicy-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaPolicyTokenLifetimePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenlifetimepolicy-post-tokenlifetimepolicies?view=graph-rest-beta"
      }
    }
  },
  "9102032c9ab7": {
    "path": "/policies/tokenLifetimePolicies/{tokenLifetimePolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenLifetimePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenlifetimepolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaPolicyTokenLifetimePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenlifetimepolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaPolicyTokenLifetimePolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenlifetimepolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "c045e3f29d5e": {
    "path": "/policies/tokenLifetimePolicies/{tokenLifetimePolicy-id}/appliesTo",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenLifetimePolicyApplyTo",
        "apiReference": "https://learn.microsoft.com/graph/api/tokenlifetimepolicy-list-appliesto?view=graph-rest-beta"
      }
    }
  },
  "b15d5bece879": {
    "path": "/policies/tokenLifetimePolicies/{tokenLifetimePolicy-id}/appliesTo/{directoryObject-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPolicyTokenLifetimePolicyApplyTo",
        "apiReference": ""
      }
    }
  },
  "ae014bcdb663": {
    "path": "/policies/tokenLifetimePolicies/{tokenLifetimePolicy-id}/appliesTo/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Application.Read.All",
            "IsAdmin": false,
            "Description": "Read all applications",
            "FullDescription": "Allows the app to read all applications and service principals without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenLifetimePolicyApplyToCount",
        "apiReference": ""
      }
    }
  },
  "efeee49ba8c6": {
    "path": "/policies/tokenLifetimePolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Read and write your organization's application configuration policies",
            "FullDescription": "Allows the app to read and write your organization's application configuration policies, without a signed-in user.  This includes policies such as activityBasedTimeoutPolicy, claimsMappingPolicy, homeRealmDiscoveryPolicy, tokenIssuancePolicy  and tokenLifetimePolicy.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.Read.ApplicationConfiguration",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaPolicyTokenLifetimePolicyCount",
        "apiReference": ""
      }
    }
  },
  "efd88cc1473b": {
    "path": "/tenantRelationships/multiTenantOrganization",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "MultiTenantOrganization.ReadBasic.All",
            "IsAdmin": false,
            "Description": "Read multi-tenant organization basic details and active tenants",
            "FullDescription": "Allows the app to read multi-tenant organization basic details and active tenants on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "MultiTenantOrganization.Read.All",
            "IsAdmin": false,
            "Description": "Read all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "MultiTenantOrganization.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read and write all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTenantRelationshipMultiTenantOrganization",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganization-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaTenantRelationshipMultiTenantOrganization",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganization-update?view=graph-rest-beta"
      }
    }
  },
  "97ae42b3e9f6": {
    "path": "/tenantRelationships/multiTenantOrganization/joinRequest",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "MultiTenantOrganization.Read.All",
            "IsAdmin": false,
            "Description": "Read all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "MultiTenantOrganization.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read and write all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTenantRelationshipMultiTenantOrganizationJoinRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganizationjoinrequestrecord-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaTenantRelationshipMultiTenantOrganizationJoinRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganizationjoinrequestrecord-update?view=graph-rest-beta"
      }
    }
  },
  "63a2b9af4f05": {
    "path": "/tenantRelationships/multiTenantOrganization/tenants",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "MultiTenantOrganization.ReadBasic.All",
            "IsAdmin": false,
            "Description": "Read multi-tenant organization basic details and active tenants",
            "FullDescription": "Allows the app to read multi-tenant organization basic details and active tenants on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "MultiTenantOrganization.Read.All",
            "IsAdmin": false,
            "Description": "Read all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "MultiTenantOrganization.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read and write all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTenantRelationshipMultiTenantOrganizationTenant",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganization-list-tenants?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaTenantRelationshipMultiTenantOrganizationTenant",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganization-post-tenants?view=graph-rest-beta"
      }
    }
  },
  "dd2c10f74b11": {
    "path": "/tenantRelationships/multiTenantOrganization/tenants/{multiTenantOrganizationMember-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaTenantRelationshipMultiTenantOrganizationTenant",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganizationmember-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaTenantRelationshipMultiTenantOrganizationTenant",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaTenantRelationshipMultiTenantOrganizationTenant",
        "apiReference": "https://learn.microsoft.com/graph/api/multitenantorganization-delete-tenants?view=graph-rest-beta"
      }
    }
  },
  "271e269b0308": {
    "path": "/tenantRelationships/multiTenantOrganization/tenants/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "MultiTenantOrganization.ReadBasic.All",
            "IsAdmin": false,
            "Description": "Read multi-tenant organization basic details and active tenants",
            "FullDescription": "Allows the app to read multi-tenant organization basic details and active tenants on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "MultiTenantOrganization.Read.All",
            "IsAdmin": false,
            "Description": "Read all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "MultiTenantOrganization.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all multi-tenant organization details and tenants",
            "FullDescription": "Allows the app to read and write all multi-tenant organization details and tenants, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTenantRelationshipMultiTenantOrganizationTenantCount",
        "apiReference": ""
      }
    }
  },
  "890cb7ed4a57": {
    "path": "/trustFramework",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaTrustFramework",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaTrustFramework",
        "apiReference": ""
      }
    }
  },
  "e06d10b878de": {
    "path": "/trustFramework/keySets",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "TrustFrameworkKeySet.Read.All",
            "IsAdmin": false,
            "Description": "Read trust framework key sets",
            "FullDescription": "Allows the app to read trust framework key set properties without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "TrustFrameworkKeySet.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write trust framework key sets",
            "FullDescription": "Allows the app to read and write trust framework key set properties without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTrustFrameworkKeySet",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframework-list-keysets?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaTrustFrameworkKeySet",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframework-post-keysets?view=graph-rest-beta"
      }
    }
  },
  "990e0f8c33f5": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "TrustFrameworkKeySet.Read.All",
            "IsAdmin": false,
            "Description": "Read trust framework key sets",
            "FullDescription": "Allows the app to read trust framework key set properties without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "TrustFrameworkKeySet.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write trust framework key sets",
            "FullDescription": "Allows the app to read and write trust framework key set properties without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTrustFrameworkKeySet",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframeworkkeyset-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaTrustFrameworkKeySet",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframeworkkeyset-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaTrustFrameworkKeySet",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframeworkkeyset-delete?view=graph-rest-beta"
      }
    }
  },
  "5af143b3d18e": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}/keys_v2",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaTrustFrameworkKeySetKeyV2",
        "apiReference": ""
      }
    }
  },
  "d5900088df57": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}/keys_v2/{trustFrameworkKey_v2-kid}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaTrustFrameworkKeySetKeyV2",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframeworkkey_v2-get?view=graph-rest-beta"
      }
    }
  },
  "09e1e11ab5be": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}/keys_v2/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaTrustFrameworkKeySetKey",
        "apiReference": ""
      }
    }
  },
  "02a85d01acb2": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}/microsoft.graph.generateKey",
    "methods": {}
  },
  "1a59457fb44e": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}/microsoft.graph.getActiveKey()",
    "methods": {}
  },
  "ac0ff01e7a35": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}/microsoft.graph.uploadCertificate",
    "methods": {}
  },
  "6406d0055619": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}/microsoft.graph.uploadPkcs12",
    "methods": {}
  },
  "06d2690a80e1": {
    "path": "/trustFramework/keySets/{trustFrameworkKeySet-id}/microsoft.graph.uploadSecret",
    "methods": {}
  },
  "7ae57ec14ba8": {
    "path": "/trustFramework/keySets/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "TrustFrameworkKeySet.Read.All",
            "IsAdmin": false,
            "Description": "Read trust framework key sets",
            "FullDescription": "Allows the app to read trust framework key set properties without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "TrustFrameworkKeySet.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write trust framework key sets",
            "FullDescription": "Allows the app to read and write trust framework key set properties without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTrustFrameworkKeySetCount",
        "apiReference": ""
      }
    }
  },
  "131eecd686a6": {
    "path": "/trustFramework/policies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.TrustFramework",
            "IsAdmin": false,
            "Description": "Read and write your organization's trust framework policies",
            "FullDescription": "Allows the app to read and write your organization's trust framework policies without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTrustFrameworkPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframework-list-trustframeworkpolicies?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaTrustFrameworkPolicy",
        "apiReference": ""
      }
    }
  },
  "ad076f43dc69": {
    "path": "/trustFramework/policies/{trustFrameworkPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.TrustFramework",
            "IsAdmin": false,
            "Description": "Read and write your organization's trust framework policies",
            "FullDescription": "Allows the app to read and write your organization's trust framework policies without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTrustFrameworkPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaTrustFrameworkPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaTrustFrameworkPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframeworkpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "e6ab4fbb53e9": {
    "path": "/trustFramework/policies/{trustFrameworkPolicy-id}/$value",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.TrustFramework",
            "IsAdmin": false,
            "Description": "Read and write your organization's trust framework policies",
            "FullDescription": "Allows the app to read and write your organization's trust framework policies without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTrustFrameworkPolicyContent",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframework-list-trustframeworkpolicies?view=graph-rest-beta"
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaTrustFrameworkPolicyContent",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaTrustFrameworkPolicyContent",
        "apiReference": "https://learn.microsoft.com/graph/api/trustframeworkpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "3d92f98f76b9": {
    "path": "/trustFramework/policies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.TrustFramework",
            "IsAdmin": false,
            "Description": "Read and write your organization's trust framework policies",
            "FullDescription": "Allows the app to read and write your organization's trust framework policies without a signed in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaTrustFrameworkPolicyCount",
        "apiReference": ""
      }
    }
  },
  "439aa746c27a": {
    "path": "/users/{user-id}/authentication",
    "methods": {}
  },
  "135e4e44bc4c": {
    "path": "/users/{user-id}/authentication/emailMethods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationEmailMethod",
        "apiReference": ""
      },
      "post": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "New-MgBetaUserAuthenticationEmailMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/authentication-post-emailmethods?view=graph-rest-beta"
      }
    }
  },
  "05e9723d9a10": {
    "path": "/users/{user-id}/authentication/emailMethods/{emailAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationEmailMethod",
        "apiReference": ""
      },
      "patch": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Update-MgBetaUserAuthenticationEmailMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/emailauthenticationmethod-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaUserAuthenticationEmailMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/emailauthenticationmethod-delete?view=graph-rest-beta"
      }
    }
  },
  "844dfb057b56": {
    "path": "/users/{user-id}/authentication/emailMethods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationEmailMethodCount",
        "apiReference": ""
      }
    }
  },
  "544802f2f0cb": {
    "path": "/users/{user-id}/authentication/fido2Methods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationFido2Method",
        "apiReference": ""
      }
    }
  },
  "8642fa30780f": {
    "path": "/users/{user-id}/authentication/fido2Methods/{fido2AuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationFido2Method",
        "apiReference": ""
      },
      "delete": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaUserAuthenticationFido2Method",
        "apiReference": "https://learn.microsoft.com/graph/api/fido2authenticationmethod-delete?view=graph-rest-beta"
      }
    }
  },
  "9d46eeab6c39": {
    "path": "/users/{user-id}/authentication/fido2Methods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationFido2MethodCount",
        "apiReference": ""
      }
    }
  },
  "8749470ce3e8": {
    "path": "/users/{user-id}/authentication/methods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationMethod",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserAuthenticationMethod",
        "apiReference": ""
      }
    }
  },
  "bdebc0f4dab9": {
    "path": "/users/{user-id}/authentication/methods/{authenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationMethod",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserAuthenticationMethod",
        "apiReference": ""
      }
    }
  },
  "fb859690045f": {
    "path": "/users/{user-id}/authentication/methods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationMethodCount",
        "apiReference": ""
      }
    }
  },
  "6d7d34f7e0ed": {
    "path": "/users/{user-id}/authentication/microsoftAuthenticatorMethods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationMicrosoftAuthenticatorMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/microsoftauthenticatorauthenticationmethod-list?view=graph-rest-beta"
      }
    }
  },
  "f48a617762a2": {
    "path": "/users/{user-id}/authentication/microsoftAuthenticatorMethods/{microsoftAuthenticatorAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationMicrosoftAuthenticatorMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/microsoftauthenticatorauthenticationmethod-get?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaUserAuthenticationMicrosoftAuthenticatorMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/microsoftauthenticatorauthenticationmethod-delete?view=graph-rest-beta"
      }
    }
  },
  "32d07b7eb416": {
    "path": "/users/{user-id}/authentication/microsoftAuthenticatorMethods/{microsoftAuthenticatorAuthenticationMethod-id}/device",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationMicrosoftAuthenticatorMethodDevice",
        "apiReference": ""
      }
    }
  },
  "547022ea10ce": {
    "path": "/users/{user-id}/authentication/microsoftAuthenticatorMethods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationMicrosoftAuthenticatorMethodCount",
        "apiReference": ""
      }
    }
  },
  "45439d49b968": {
    "path": "/users/{user-id}/authentication/operations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationOperation",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserAuthenticationOperation",
        "apiReference": ""
      }
    }
  },
  "09ac0ca4fca6": {
    "path": "/users/{user-id}/authentication/operations/{longRunningOperation-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationOperation",
        "apiReference": "https://learn.microsoft.com/graph/api/longrunningoperation-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserAuthenticationOperation",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserAuthenticationOperation",
        "apiReference": ""
      }
    }
  },
  "40fba65262f2": {
    "path": "/users/{user-id}/authentication/operations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationOperationCount",
        "apiReference": ""
      }
    }
  },
  "7fe50a34c9b8": {
    "path": "/users/{user-id}/authentication/passwordlessMicrosoftAuthenticatorMethods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPasswordlessMicrosoftAuthenticatorMethod",
        "apiReference": ""
      }
    }
  },
  "fdcbc2a2ffba": {
    "path": "/users/{user-id}/authentication/passwordlessMicrosoftAuthenticatorMethods/{passwordlessMicrosoftAuthenticatorAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPasswordlessMicrosoftAuthenticatorMethod",
        "apiReference": ""
      },
      "delete": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaUserAuthenticationPasswordlessMicrosoftAuthenticatorMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/passwordlessmicrosoftauthenticatorauthenticationmethod-delete?view=graph-rest-beta"
      }
    }
  },
  "a059fea17d7c": {
    "path": "/users/{user-id}/authentication/passwordlessMicrosoftAuthenticatorMethods/{passwordlessMicrosoftAuthenticatorAuthenticationMethod-id}/device",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationPasswordlessMicrosoftAuthenticatorMethodDevice",
        "apiReference": ""
      }
    }
  },
  "9e1d4ff75f3b": {
    "path": "/users/{user-id}/authentication/passwordlessMicrosoftAuthenticatorMethods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPasswordlessMicrosoftAuthenticatorMethodCount",
        "apiReference": ""
      }
    }
  },
  "d79662323392": {
    "path": "/users/{user-id}/authentication/passwordMethods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPasswordMethod",
        "apiReference": ""
      }
    }
  },
  "6b63495bb995": {
    "path": "/users/{user-id}/authentication/passwordMethods/{passwordAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPasswordMethod",
        "apiReference": ""
      }
    }
  },
  "24911c9da538": {
    "path": "/users/{user-id}/authentication/passwordMethods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPasswordMethodCount",
        "apiReference": ""
      }
    }
  },
  "e32217268b1c": {
    "path": "/users/{user-id}/authentication/phoneMethods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPhoneMethod",
        "apiReference": ""
      },
      "post": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "New-MgBetaUserAuthenticationPhoneMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/authentication-post-phonemethods?view=graph-rest-beta"
      }
    }
  },
  "5ba50eef5a53": {
    "path": "/users/{user-id}/authentication/phoneMethods/{phoneAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPhoneMethod",
        "apiReference": ""
      },
      "patch": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Update-MgBetaUserAuthenticationPhoneMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/phoneauthenticationmethod-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaUserAuthenticationPhoneMethod",
        "apiReference": ""
      }
    }
  },
  "832a2c9e5fde": {
    "path": "/users/{user-id}/authentication/phoneMethods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationPhoneMethodCount",
        "apiReference": ""
      }
    }
  },
  "a4b509112b30": {
    "path": "/users/{user-id}/authentication/platformCredentialMethods",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationPlatformCredentialMethod",
        "apiReference": ""
      }
    }
  },
  "77cca3214f3b": {
    "path": "/users/{user-id}/authentication/platformCredentialMethods/{platformCredentialAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationPlatformCredentialMethod",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserAuthenticationPlatformCredentialMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/platformcredentialauthenticationmethod-delete?view=graph-rest-beta"
      }
    }
  },
  "d9597e6ad0bd": {
    "path": "/users/{user-id}/authentication/platformCredentialMethods/{platformCredentialAuthenticationMethod-id}/device",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationPlatformCredentialMethodDevice",
        "apiReference": ""
      }
    }
  },
  "c2d63cf390f4": {
    "path": "/users/{user-id}/authentication/platformCredentialMethods/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationPlatformCredentialMethodCount",
        "apiReference": ""
      }
    }
  },
  "0486cfb4621d": {
    "path": "/users/{user-id}/authentication/signInPreferences",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationSignInPreference",
        "apiReference": "https://learn.microsoft.com/graph/api/authentication-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserAuthenticationSignInPreference",
        "apiReference": "https://learn.microsoft.com/graph/api/authentication-update?view=graph-rest-beta"
      }
    }
  },
  "397f0f0733d2": {
    "path": "/users/{user-id}/authentication/softwareOathMethods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationSoftwareOathMethod",
        "apiReference": ""
      }
    }
  },
  "f1751699da48": {
    "path": "/users/{user-id}/authentication/softwareOathMethods/{softwareOathAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationSoftwareOathMethod",
        "apiReference": ""
      },
      "delete": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaUserAuthenticationSoftwareOathMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/softwareoathauthenticationmethod-delete?view=graph-rest-beta"
      }
    }
  },
  "cc556994a4b6": {
    "path": "/users/{user-id}/authentication/softwareOathMethods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationSoftwareOathMethodCount",
        "apiReference": ""
      }
    }
  },
  "9de7758d77c1": {
    "path": "/users/{user-id}/authentication/temporaryAccessPassMethods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationTemporaryAccessPassMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/authentication-list-temporaryaccesspassmethods?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserAuthenticationTemporaryAccessPassMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/authentication-post-temporaryaccesspassmethods?view=graph-rest-beta"
      }
    }
  },
  "6d2a7a0b65d5": {
    "path": "/users/{user-id}/authentication/temporaryAccessPassMethods/{temporaryAccessPassAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationTemporaryAccessPassMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/temporaryaccesspassauthenticationmethod-get?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaUserAuthenticationTemporaryAccessPassMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/temporaryaccesspassauthenticationmethod-delete?view=graph-rest-beta"
      }
    }
  },
  "0db5ba3b70ae": {
    "path": "/users/{user-id}/authentication/temporaryAccessPassMethods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationTemporaryAccessPassMethodCount",
        "apiReference": ""
      }
    }
  },
  "27b5e8f9d725": {
    "path": "/users/{user-id}/authentication/windowsHelloForBusinessMethods",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationWindowsHelloForBusinessMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/windowshelloforbusinessauthenticationmethod-list?view=graph-rest-beta"
      }
    }
  },
  "9048c6c50a97": {
    "path": "/users/{user-id}/authentication/windowsHelloForBusinessMethods/{windowsHelloForBusinessAuthenticationMethod-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationWindowsHelloForBusinessMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/windowshelloforbusinessauthenticationmethod-get?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaUserAuthenticationWindowsHelloForBusinessMethod",
        "apiReference": "https://learn.microsoft.com/graph/api/windowshelloforbusinessauthenticationmethod-delete?view=graph-rest-beta"
      }
    }
  },
  "910612e0eb3d": {
    "path": "/users/{user-id}/authentication/windowsHelloForBusinessMethods/{windowsHelloForBusinessAuthenticationMethod-id}/device",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAuthenticationWindowsHelloForBusinessMethodDevice",
        "apiReference": ""
      }
    }
  },
  "e6f94ec552d4": {
    "path": "/users/{user-id}/authentication/windowsHelloForBusinessMethods/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "UserAuthenticationMethod.Read",
            "IsAdmin": true,
            "Description": "Read your authentication methods.",
            "FullDescription": "Allows the app to read your authentication methods, including phone numbers and Authenticator app settings. This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all users' authentication methods",
            "FullDescription": "Allows the app to read and write authentication methods of all users you have access to in your organization.                       Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow                      the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.ReadWrite",
            "IsAdmin": true,
            "Description": "Read and write your authentication methods",
            "FullDescription": "Allows the app to read and write your authentication methods, including phone numbers and Authenticator app settings.This does not allow the app to see secret information like your passwords, or to sign-in or otherwise use your authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "UserAuthenticationMethod.Read.All",
            "IsAdmin": true,
            "Description": "Read all users' authentication methods",
            "FullDescription": "Allows the app to read authentication methods of all users you have access to in your organization. Authentication methods include things like a users phone numbers and Authenticator app settings. This does not allow the app to see secret information like passwords, or to sign-in or otherwise use the authentication methods.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAuthenticationWindowsHelloForBusinessMethodCount",
        "apiReference": ""
      }
    }
  },
  "9672ad654855": {
    "path": "/users/{user-id}/informationProtection",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtection",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtection",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtection",
        "apiReference": ""
      }
    }
  },
  "85ad87b0d968": {
    "path": "/users/{user-id}/informationProtection/bitlocker",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionBitlocker",
        "apiReference": ""
      }
    }
  },
  "a41dfc9425dc": {
    "path": "/users/{user-id}/informationProtection/bitlocker/recoveryKeys",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionBitlockerRecoveryKey",
        "apiReference": ""
      }
    }
  },
  "f496de8412d9": {
    "path": "/users/{user-id}/informationProtection/bitlocker/recoveryKeys/{bitlockerRecoveryKey-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionBitlockerRecoveryKey",
        "apiReference": ""
      }
    }
  },
  "83a4091e3391": {
    "path": "/users/{user-id}/informationProtection/bitlocker/recoveryKeys/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionBitlockerRecoveryKeyCount",
        "apiReference": ""
      }
    }
  },
  "3140d6bf3146": {
    "path": "/users/{user-id}/informationProtection/dataLossPreventionPolicies",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      }
    }
  },
  "d5b8f2716d74": {
    "path": "/users/{user-id}/informationProtection/dataLossPreventionPolicies/{dataLossPreventionPolicy-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtectionDataLossPreventionPolicy",
        "apiReference": ""
      }
    }
  },
  "3a76836e1372": {
    "path": "/users/{user-id}/informationProtection/dataLossPreventionPolicies/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionDataLossPreventionPolicyCount",
        "apiReference": ""
      }
    }
  },
  "72483382fc68": {
    "path": "/users/{user-id}/informationProtection/policy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionPolicy",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtectionPolicy",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtectionPolicy",
        "apiReference": ""
      }
    }
  },
  "8049c0a2e420": {
    "path": "/users/{user-id}/informationProtection/policy/labels",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "InformationProtectionPolicy.Read",
            "IsAdmin": false,
            "Description": "Read user sensitivity labels and label policies.",
            "FullDescription": "Allows an app to read information protection sensitivity labels and label policy settings, on behalf of the signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "InformationProtectionPolicy.Read.All",
            "IsAdmin": false,
            "Description": "Read all published labels and label policies for an organization.",
            "FullDescription": "Allows an app to read published sensitivity labels and label policy settings for the entire organization or a specific user, without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaUserInformationProtectionPolicyLabel",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserInformationProtectionPolicyLabel",
        "apiReference": ""
      }
    }
  },
  "af0ed62da4ba": {
    "path": "/users/{user-id}/informationProtection/policy/labels/{informationProtectionLabel-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "InformationProtectionPolicy.Read",
            "IsAdmin": false,
            "Description": "Read user sensitivity labels and label policies.",
            "FullDescription": "Allows an app to read information protection sensitivity labels and label policy settings, on behalf of the signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "InformationProtectionPolicy.Read.All",
            "IsAdmin": false,
            "Description": "Read all published labels and label policies for an organization.",
            "FullDescription": "Allows an app to read published sensitivity labels and label policy settings for the entire organization or a specific user, without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaUserInformationProtectionPolicyLabel",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtectionPolicyLabel",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtectionPolicyLabel",
        "apiReference": ""
      }
    }
  },
  "d36e70ea320a": {
    "path": "/users/{user-id}/informationProtection/policy/labels/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "InformationProtectionPolicy.Read",
            "IsAdmin": false,
            "Description": "Read user sensitivity labels and label policies.",
            "FullDescription": "Allows an app to read information protection sensitivity labels and label policy settings, on behalf of the signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "InformationProtectionPolicy.Read.All",
            "IsAdmin": false,
            "Description": "Read all published labels and label policies for an organization.",
            "FullDescription": "Allows an app to read published sensitivity labels and label policy settings for the entire organization or a specific user, without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaUserInformationProtectionPolicyLabelCount",
        "apiReference": ""
      }
    }
  },
  "850d89cbeff5": {
    "path": "/users/{user-id}/informationProtection/sensitivityLabels",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionSensitivityLabel",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserInformationProtectionSensitivityLabel",
        "apiReference": ""
      }
    }
  },
  "7ef97095e68a": {
    "path": "/users/{user-id}/informationProtection/sensitivityLabels/{sensitivityLabel-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionSensitivityLabel",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtectionSensitivityLabel",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtectionSensitivityLabel",
        "apiReference": ""
      }
    }
  },
  "940fb2b1373e": {
    "path": "/users/{user-id}/informationProtection/sensitivityLabels/{sensitivityLabel-id}/sublabels",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionSensitivityLabelSublabel",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserInformationProtectionSensitivityLabelSublabel",
        "apiReference": ""
      }
    }
  },
  "de708b93f436": {
    "path": "/users/{user-id}/informationProtection/sensitivityLabels/{sensitivityLabel-id}/sublabels/{sensitivityLabel-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionSensitivityLabelSublabel",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtectionSensitivityLabelSublabel",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtectionSensitivityLabelSublabel",
        "apiReference": ""
      }
    }
  },
  "58d16a8921d8": {
    "path": "/users/{user-id}/informationProtection/sensitivityLabels/{sensitivityLabel-id}/sublabels/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionSensitivityLabelSublabelCount",
        "apiReference": ""
      }
    }
  },
  "1e85720bf1f1": {
    "path": "/users/{user-id}/informationProtection/sensitivityLabels/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionSensitivityLabelCount",
        "apiReference": ""
      }
    }
  },
  "10d42ffa19b4": {
    "path": "/users/{user-id}/informationProtection/sensitivityPolicySettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionSensitivityPolicySetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtectionSensitivityPolicySetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtectionSensitivityPolicySetting",
        "apiReference": ""
      }
    }
  },
  "e4c9bed28f8a": {
    "path": "/users/{user-id}/informationProtection/threatAssessmentRequests",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionThreatAssessmentRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserInformationProtectionThreatAssessmentRequest",
        "apiReference": ""
      }
    }
  },
  "5021bc743ede": {
    "path": "/users/{user-id}/informationProtection/threatAssessmentRequests/{threatAssessmentRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionThreatAssessmentRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtectionThreatAssessmentRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtectionThreatAssessmentRequest",
        "apiReference": ""
      }
    }
  },
  "59497d059560": {
    "path": "/users/{user-id}/informationProtection/threatAssessmentRequests/{threatAssessmentRequest-id}/results",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaUserInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      }
    }
  },
  "f11d0e7fd38d": {
    "path": "/users/{user-id}/informationProtection/threatAssessmentRequests/{threatAssessmentRequest-id}/results/{threatAssessmentResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaUserInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaUserInformationProtectionThreatAssessmentRequestResult",
        "apiReference": ""
      }
    }
  },
  "6b379aa4600f": {
    "path": "/users/{user-id}/informationProtection/threatAssessmentRequests/{threatAssessmentRequest-id}/results/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionThreatAssessmentRequestResultCount",
        "apiReference": ""
      }
    }
  },
  "1592c3beda24": {
    "path": "/users/{user-id}/informationProtection/threatAssessmentRequests/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserInformationProtectionThreatAssessmentRequestCount",
        "apiReference": ""
      }
    }
  }
}