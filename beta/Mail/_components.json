{
  "schemas": {
    "microsoft.graph.inferenceClassification": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "inferenceClassification",
          "type": "object",
          "properties": {
            "overrides": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationOverride"
              },
              "description": "A set of overrides for a user to always classify messages from specific senders in certain ways: focused, or other. Read-only. Nullable.",
              "x-ms-navigationProperty": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.inferenceClassificationOverride": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "inferenceClassificationOverride",
          "type": "object",
          "properties": {
            "classifyAs": {
              "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationType"
            },
            "senderEmailAddress": {
              "$ref": "#/components/schemas/microsoft.graph.emailAddress"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.mailFolder": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "mailFolder",
          "type": "object",
          "properties": {
            "childFolderCount": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "description": "The number of immediate child mailFolders in the current mailFolder.",
              "format": "int32",
              "nullable": true
            },
            "displayName": {
              "type": "string",
              "description": "The mailFolder's display name.",
              "nullable": true
            },
            "isHidden": {
              "type": "boolean",
              "description": "Indicates whether the mailFolder is hidden. This property can be set only when creating the folder. Find more information in Hidden mail folders.",
              "nullable": true
            },
            "parentFolderId": {
              "type": "string",
              "description": "The unique identifier for the mailFolder's parent mailFolder.",
              "nullable": true
            },
            "totalItemCount": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "description": "The number of items in the mailFolder.",
              "format": "int32",
              "nullable": true
            },
            "unreadItemCount": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "description": "The number of items in the mailFolder marked as unread.",
              "format": "int32",
              "nullable": true
            },
            "wellKnownName": {
              "type": "string",
              "description": "The well-known folder name for the folder. The possible values are listed above. This property is only set for default folders created by Outlook. For other folders, this property is null.",
              "nullable": true
            },
            "childFolders": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.mailFolder"
              },
              "description": "The collection of child folders in the mailFolder.",
              "x-ms-navigationProperty": true
            },
            "messageRules": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.messageRule"
              },
              "description": "The collection of rules that apply to the user's Inbox folder.",
              "x-ms-navigationProperty": true
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.message"
              },
              "description": "The collection of messages in the mailFolder.",
              "x-ms-navigationProperty": true
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
              },
              "description": "The collection of multi-value extended properties defined for the mailFolder. Read-only. Nullable.",
              "x-ms-navigationProperty": true
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
              },
              "description": "The collection of single-value extended properties defined for the mailFolder. Read-only. Nullable.",
              "x-ms-navigationProperty": true
            },
            "userConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.userConfiguration"
              },
              "x-ms-navigationProperty": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.messageRule": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "messageRule",
          "type": "object",
          "properties": {
            "actions": {
              "$ref": "#/components/schemas/microsoft.graph.messageRuleActions"
            },
            "conditions": {
              "$ref": "#/components/schemas/microsoft.graph.messageRulePredicates"
            },
            "displayName": {
              "type": "string",
              "description": "The display name of the rule.",
              "nullable": true
            },
            "exceptions": {
              "$ref": "#/components/schemas/microsoft.graph.messageRulePredicates"
            },
            "hasError": {
              "type": "boolean",
              "description": "Indicates whether the rule is in an error condition. Read-only.",
              "nullable": true
            },
            "isEnabled": {
              "type": "boolean",
              "description": "Indicates whether the rule is enabled to be applied to messages.",
              "nullable": true
            },
            "isReadOnly": {
              "type": "boolean",
              "description": "Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.",
              "nullable": true
            },
            "sequence": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "description": "Indicates the order in which the rule is executed, among other rules.",
              "format": "int32",
              "nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.message": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.outlookItem"
        },
        {
          "title": "message",
          "type": "object",
          "properties": {
            "bccRecipients": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.recipient"
              },
              "description": "The Bcc: recipients for the message."
            },
            "body": {
              "$ref": "#/components/schemas/microsoft.graph.itemBody"
            },
            "bodyPreview": {
              "type": "string",
              "description": "The first 255 characters of the message body. It is in text format. If the message contains instances of mention, this property would contain a concatenation of these mentions as well.",
              "nullable": true
            },
            "ccRecipients": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.recipient"
              },
              "description": "The Cc: recipients for the message."
            },
            "conversationId": {
              "type": "string",
              "description": "The ID of the conversation the email belongs to.",
              "nullable": true
            },
            "conversationIndex": {
              "type": "string",
              "description": "Indicates the position of the message within the conversation.",
              "format": "base64url",
              "nullable": true
            },
            "flag": {
              "$ref": "#/components/schemas/microsoft.graph.followupFlag"
            },
            "from": {
              "$ref": "#/components/schemas/microsoft.graph.recipient"
            },
            "hasAttachments": {
              "type": "boolean",
              "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.",
              "nullable": true
            },
            "importance": {
              "$ref": "#/components/schemas/microsoft.graph.importance"
            },
            "inferenceClassification": {
              "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationType"
            },
            "internetMessageHeaders": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.internetMessageHeader"
              },
              "description": "A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message.  Returned only on applying a $select query option. Read-only."
            },
            "internetMessageId": {
              "type": "string",
              "description": "The message ID in the format specified by RFC5322. Updatable only if isDraft is true.",
              "nullable": true
            },
            "isDeliveryReceiptRequested": {
              "type": "boolean",
              "description": "Indicates whether a read receipt is requested for the message.",
              "nullable": true
            },
            "isDraft": {
              "type": "boolean",
              "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet.",
              "nullable": true
            },
            "isRead": {
              "type": "boolean",
              "description": "Indicates whether the message has been read.",
              "nullable": true
            },
            "isReadReceiptRequested": {
              "type": "boolean",
              "description": "Indicates whether a read receipt is requested for the message.",
              "nullable": true
            },
            "mentionsPreview": {
              "$ref": "#/components/schemas/microsoft.graph.mentionsPreview"
            },
            "parentFolderId": {
              "type": "string",
              "description": "The unique identifier for the message's parent mailFolder.",
              "nullable": true
            },
            "receivedDateTime": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string",
              "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.",
              "format": "date-time",
              "nullable": true
            },
            "replyTo": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.recipient"
              },
              "description": "The email addresses to use when replying."
            },
            "sender": {
              "$ref": "#/components/schemas/microsoft.graph.recipient"
            },
            "sentDateTime": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string",
              "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.",
              "format": "date-time",
              "nullable": true
            },
            "subject": {
              "type": "string",
              "description": "The subject of the message.",
              "nullable": true
            },
            "toRecipients": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.recipient"
              },
              "description": "The To: recipients for the message."
            },
            "uniqueBody": {
              "$ref": "#/components/schemas/microsoft.graph.itemBody"
            },
            "unsubscribeData": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              },
              "description": "The valid entries parsed from the List-Unsubscribe header.  This is the data for the mail command in the List-Unsubscribe header if UnsubscribeEnabled property is true."
            },
            "unsubscribeEnabled": {
              "type": "boolean",
              "description": "Indicates whether the message is enabled for unsubscribe.  Its valueTrue if the list-Unsubscribe header conforms to rfc-2369.",
              "nullable": true
            },
            "webLink": {
              "type": "string",
              "description": "The URL to open the message in Outlook on the web.You can append an ispopout argument to the end of the URL to change how the message is displayed. If ispopout is not present or if it is set to 1, then the message is shown in a popout window. If ispopout is set to 0, the browser shows the message in the Outlook on the web review pane.The message opens in the browser if you are signed in to your mailbox via Outlook on the web. You are prompted to sign in if you are not already signed in with the browser.This URL cannot be accessed from within an iFrame.",
              "nullable": true
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.attachment"
              },
              "description": "The fileAttachment and itemAttachment attachments for the message.",
              "x-ms-navigationProperty": true
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.extension"
              },
              "description": "The collection of open extensions defined for the message. Nullable.",
              "x-ms-navigationProperty": true
            },
            "mentions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.mention"
              },
              "description": "A collection of mentions in the message, ordered by the createdDateTime from the newest to the oldest. By default, a GET /messages does not return this property unless you apply $expand on the property.",
              "x-ms-navigationProperty": true
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
              },
              "description": "The collection of multi-value extended properties defined for the message. Nullable.",
              "x-ms-navigationProperty": true
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
              },
              "description": "The collection of single-value extended properties defined for the message. Nullable.",
              "x-ms-navigationProperty": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.attachment": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "attachment",
          "type": "object",
          "properties": {
            "contentType": {
              "type": "string",
              "description": "The MIME type.",
              "nullable": true
            },
            "isInline": {
              "type": "boolean",
              "description": "true if the attachment is an inline attachment; otherwise, false."
            },
            "lastModifiedDateTime": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
              "format": "date-time",
              "nullable": true
            },
            "name": {
              "type": "string",
              "description": "The display name of the attachment. This does not need to be the actual file name.",
              "nullable": true
            },
            "size": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "description": "The length of the attachment in bytes.",
              "format": "int32"
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.extension": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "extension",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.mention": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "mention",
          "type": "object",
          "properties": {
            "application": {
              "type": "string",
              "description": "The name of the application where the mention is created. Optional. Not used and defaulted as null for message.",
              "nullable": true
            },
            "clientReference": {
              "type": "string",
              "description": "A unique identifier that represents a parent of the resource instance. Optional. Not used and defaulted as null for message.",
              "nullable": true
            },
            "createdBy": {
              "$ref": "#/components/schemas/microsoft.graph.emailAddress"
            },
            "createdDateTime": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string",
              "description": "The date and time that the mention is created on the client.",
              "format": "date-time",
              "nullable": true
            },
            "deepLink": {
              "type": "string",
              "description": "A deep web link to the context of the mention in the resource instance. Optional. Not used and defaulted as null for message.",
              "nullable": true
            },
            "mentioned": {
              "$ref": "#/components/schemas/microsoft.graph.emailAddress"
            },
            "mentionText": {
              "type": "string",
              "description": "Optional. Not used and defaulted as null for message. To get the mentions in a message, see the bodyPreview property of the message instead.",
              "nullable": true
            },
            "serverCreatedDateTime": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string",
              "description": "The date and time that the mention is created on the server. Optional. Not used and defaulted as null for message.",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.userConfiguration": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "userConfiguration",
          "type": "object",
          "properties": {
            "binaryData": {
              "type": "string",
              "format": "base64url",
              "nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.entity": {
      "title": "entity",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for an entity. Read-only."
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.inferenceClassificationType": {
      "title": "inferenceClassificationType",
      "enum": [
        "focused",
        "other"
      ],
      "type": "string"
    },
    "microsoft.graph.emailAddress": {
      "title": "emailAddress",
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The email address of an entity instance.",
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "The display name of an entity instance.",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.multiValueLegacyExtendedProperty": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "multiValueLegacyExtendedProperty",
          "type": "object",
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              },
              "description": "A collection of property values."
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.singleValueLegacyExtendedProperty": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "singleValueLegacyExtendedProperty",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "A property value.",
              "nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.messageRuleActions": {
      "title": "messageRuleActions",
      "type": "object",
      "properties": {
        "assignCategories": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "description": "A list of categories to be assigned to a message."
        },
        "copyToFolder": {
          "type": "string",
          "description": "The ID of a folder that a message is to be copied to.",
          "nullable": true
        },
        "delete": {
          "type": "boolean",
          "description": "Indicates whether a message should be moved to the Deleted Items folder.",
          "nullable": true
        },
        "forwardAsAttachmentTo": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.recipient"
          },
          "description": "The email addresses of the recipients to which a message should be forwarded as an attachment."
        },
        "forwardTo": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.recipient"
          },
          "description": "The email addresses of the recipients to which a message should be forwarded."
        },
        "markAsRead": {
          "type": "boolean",
          "description": "Indicates whether a message should be marked as read.",
          "nullable": true
        },
        "markImportance": {
          "$ref": "#/components/schemas/microsoft.graph.importance"
        },
        "moveToFolder": {
          "type": "string",
          "description": "The ID of the folder that a message will be moved to.",
          "nullable": true
        },
        "permanentDelete": {
          "type": "boolean",
          "description": "Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.",
          "nullable": true
        },
        "redirectTo": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.recipient"
          },
          "description": "The email address to which a message should be redirected."
        },
        "stopProcessingRules": {
          "type": "boolean",
          "description": "Indicates whether subsequent rules should be evaluated.",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.messageRulePredicates": {
      "title": "messageRulePredicates",
      "type": "object",
      "properties": {
        "bodyContains": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "description": "Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply."
        },
        "bodyOrSubjectContains": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "description": "Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply."
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "description": "Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply."
        },
        "fromAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.recipient"
          },
          "description": "Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply."
        },
        "hasAttachments": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must have attachments in order for the condition or exception to apply.",
          "nullable": true
        },
        "headerContains": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "description": "Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply."
        },
        "importance": {
          "$ref": "#/components/schemas/microsoft.graph.importance"
        },
        "isApprovalRequest": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.",
          "nullable": true
        },
        "isAutomaticForward": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.",
          "nullable": true
        },
        "isAutomaticReply": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.",
          "nullable": true
        },
        "isEncrypted": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.",
          "nullable": true
        },
        "isMeetingRequest": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.",
          "nullable": true
        },
        "isMeetingResponse": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.",
          "nullable": true
        },
        "isNonDeliveryReport": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.",
          "nullable": true
        },
        "isPermissionControlled": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.",
          "nullable": true
        },
        "isReadReceipt": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.",
          "nullable": true
        },
        "isSigned": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.",
          "nullable": true
        },
        "isVoicemail": {
          "type": "boolean",
          "description": "Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.",
          "nullable": true
        },
        "messageActionFlag": {
          "$ref": "#/components/schemas/microsoft.graph.messageActionFlag"
        },
        "notSentToMe": {
          "type": "boolean",
          "description": "Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.",
          "nullable": true
        },
        "recipientContains": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "description": "Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply."
        },
        "senderContains": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "description": "Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply."
        },
        "sensitivity": {
          "$ref": "#/components/schemas/microsoft.graph.sensitivity"
        },
        "sentCcMe": {
          "type": "boolean",
          "description": "Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.",
          "nullable": true
        },
        "sentOnlyToMe": {
          "type": "boolean",
          "description": "Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.",
          "nullable": true
        },
        "sentToAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.recipient"
          },
          "description": "Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply."
        },
        "sentToMe": {
          "type": "boolean",
          "description": "Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.",
          "nullable": true
        },
        "sentToOrCcMe": {
          "type": "boolean",
          "description": "Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.",
          "nullable": true
        },
        "subjectContains": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "description": "Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply."
        },
        "withinSizeRange": {
          "$ref": "#/components/schemas/microsoft.graph.sizeRange"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.outlookItem": {
      "allOf": [
        {
          "$ref": "#/components/schemas/microsoft.graph.entity"
        },
        {
          "title": "outlookItem",
          "type": "object",
          "properties": {
            "categories": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              },
              "description": "The categories associated with the item."
            },
            "changeKey": {
              "type": "string",
              "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
              "nullable": true
            },
            "createdDateTime": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
              "format": "date-time",
              "nullable": true
            },
            "lastModifiedDateTime": {
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
              "format": "date-time",
              "nullable": true
            }
          },
          "additionalProperties": {
            "type": "object"
          }
        }
      ]
    },
    "microsoft.graph.recipient": {
      "title": "recipient",
      "type": "object",
      "properties": {
        "emailAddress": {
          "$ref": "#/components/schemas/microsoft.graph.emailAddress"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.itemBody": {
      "title": "itemBody",
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "The content of the item.",
          "nullable": true
        },
        "contentType": {
          "$ref": "#/components/schemas/microsoft.graph.bodyType"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.followupFlag": {
      "title": "followupFlag",
      "type": "object",
      "properties": {
        "completedDateTime": {
          "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
        },
        "dueDateTime": {
          "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
        },
        "flagStatus": {
          "$ref": "#/components/schemas/microsoft.graph.followupFlagStatus"
        },
        "startDateTime": {
          "$ref": "#/components/schemas/microsoft.graph.dateTimeTimeZone"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.importance": {
      "title": "importance",
      "enum": [
        "low",
        "normal",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.internetMessageHeader": {
      "title": "internetMessageHeader",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Represents the key in a key-value pair.",
          "nullable": true
        },
        "value": {
          "type": "string",
          "description": "The value in a key-value pair.",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.mentionsPreview": {
      "title": "mentionsPreview",
      "type": "object",
      "properties": {
        "isMentioned": {
          "type": "boolean",
          "description": "True if the signed-in user is mentioned in the parent resource instance. Read-only. Supports filter.",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.ODataErrors.ODataError": {
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/components/schemas/microsoft.graph.ODataErrors.MainError"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.inferenceClassificationOverrideCollectionResponse": {
      "title": "Collection of inferenceClassificationOverride",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationOverride"
          }
        },
        "@odata.nextLink": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "ODataCountResponse": {
      "type": "integer",
      "format": "int32"
    },
    "microsoft.graph.mailFolderCollectionResponse": {
      "title": "Collection of mailFolder",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.mailFolder"
          }
        },
        "@odata.nextLink": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.messageRuleCollectionResponse": {
      "title": "Collection of messageRule",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.messageRule"
          }
        },
        "@odata.nextLink": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.messageCollectionResponse": {
      "title": "Collection of message",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.message"
          }
        },
        "@odata.nextLink": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.attachmentCollectionResponse": {
      "title": "Collection of attachment",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.attachment"
          }
        },
        "@odata.nextLink": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.extensionCollectionResponse": {
      "title": "Collection of extension",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.extension"
          }
        },
        "@odata.nextLink": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.mentionCollectionResponse": {
      "title": "Collection of mention",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.mention"
          }
        },
        "@odata.nextLink": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.userConfigurationCollectionResponse": {
      "title": "Collection of userConfiguration",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.userConfiguration"
          }
        },
        "@odata.nextLink": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.messageActionFlag": {
      "title": "messageActionFlag",
      "enum": [
        "any",
        "call",
        "doNotForward",
        "followUp",
        "fyi",
        "forward",
        "noResponseNecessary",
        "read",
        "reply",
        "replyToAll",
        "review"
      ],
      "type": "string"
    },
    "microsoft.graph.sensitivity": {
      "title": "sensitivity",
      "enum": [
        "normal",
        "personal",
        "private",
        "confidential"
      ],
      "type": "string"
    },
    "microsoft.graph.sizeRange": {
      "title": "sizeRange",
      "type": "object",
      "properties": {
        "maximumSize": {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer",
          "description": "The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.",
          "format": "int32",
          "nullable": true
        },
        "minimumSize": {
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer",
          "description": "The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.",
          "format": "int32",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.bodyType": {
      "title": "bodyType",
      "enum": [
        "text",
        "html"
      ],
      "type": "string"
    },
    "microsoft.graph.dateTimeTimeZone": {
      "title": "dateTimeTimeZone",
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string",
          "description": "A single point of time in a combined date and time representation ({date}T{time}). For example, '2019-04-16T09:00:00'."
        },
        "timeZone": {
          "type": "string",
          "description": "Represents a time zone, for example, 'Pacific Standard Time'. See below for possible values.",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.followupFlagStatus": {
      "title": "followupFlagStatus",
      "enum": [
        "notFlagged",
        "complete",
        "flagged"
      ],
      "type": "string"
    },
    "microsoft.graph.ODataErrors.MainError": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "x-ms-primary-error-message": true
        },
        "target": {
          "type": "string",
          "nullable": true
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ErrorDetails"
          }
        },
        "innerError": {
          "$ref": "#/components/schemas/microsoft.graph.ODataErrors.InnerError"
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.ODataErrors.ErrorDetails": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string",
          "nullable": true
        }
      },
      "additionalProperties": {
        "type": "object"
      }
    },
    "microsoft.graph.ODataErrors.InnerError": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      },
      "description": "The structure of this object is service-specific"
    }
  },
  "responses": {
    "error": {
      "description": "error",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
          }
        }
      }
    },
    "microsoft.graph.inferenceClassificationOverrideCollectionResponse": {
      "description": "Retrieved collection",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.inferenceClassificationOverrideCollectionResponse"
          }
        }
      }
    },
    "ODataCountResponse": {
      "description": "The count of the resource",
      "content": {
        "text/plain": {
          "schema": {
            "$ref": "#/components/schemas/ODataCountResponse"
          }
        }
      }
    },
    "microsoft.graph.mailFolderCollectionResponse": {
      "description": "Retrieved collection",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.mailFolderCollectionResponse"
          }
        }
      }
    },
    "microsoft.graph.messageRuleCollectionResponse": {
      "description": "Retrieved collection",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.messageRuleCollectionResponse"
          }
        }
      }
    },
    "microsoft.graph.messageCollectionResponse": {
      "description": "Retrieved collection",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.messageCollectionResponse"
          }
        }
      }
    },
    "microsoft.graph.attachmentCollectionResponse": {
      "description": "Retrieved collection",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.attachmentCollectionResponse"
          }
        }
      }
    },
    "microsoft.graph.extensionCollectionResponse": {
      "description": "Retrieved collection",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.extensionCollectionResponse"
          }
        }
      }
    },
    "microsoft.graph.mentionCollectionResponse": {
      "description": "Retrieved collection",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.mentionCollectionResponse"
          }
        }
      }
    },
    "microsoft.graph.userConfigurationCollectionResponse": {
      "description": "Retrieved collection",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/microsoft.graph.userConfigurationCollectionResponse"
          }
        }
      }
    }
  },
  "parameters": {
    "top": {
      "name": "$top",
      "in": "query",
      "description": "Show only the first n items",
      "style": "form",
      "explode": false,
      "schema": {
        "minimum": 0,
        "type": "integer"
      },
      "example": 50
    },
    "skip": {
      "name": "$skip",
      "in": "query",
      "description": "Skip the first n items",
      "style": "form",
      "explode": false,
      "schema": {
        "minimum": 0,
        "type": "integer"
      }
    },
    "search": {
      "name": "$search",
      "in": "query",
      "description": "Search items by search phrases",
      "style": "form",
      "explode": false,
      "schema": {
        "type": "string"
      }
    },
    "filter": {
      "name": "$filter",
      "in": "query",
      "description": "Filter items by property values",
      "style": "form",
      "explode": false,
      "schema": {
        "type": "string"
      }
    },
    "count": {
      "name": "$count",
      "in": "query",
      "description": "Include count of items",
      "style": "form",
      "explode": false,
      "schema": {
        "type": "boolean"
      }
    }
  },
  "securitySchemes": {
    "azureaadv2": {
      "type": "oauth2",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
          "tokenUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
          "scopes": {}
        }
      }
    }
  }
}