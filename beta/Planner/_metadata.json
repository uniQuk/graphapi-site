{
  "openapi": "3.0.1",
  "info": {
    "title": "Planner",
    "version": "v1.0-beta"
  },
  "servers": [
    {
      "url": "https://graph.microsoft.com/beta/",
      "description": "Core"
    }
  ],
  "components": {
    "schemas": {
      "microsoft.graph.plannerGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerGroup",
            "type": "object",
            "properties": {
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                },
                "description": "Read-only. Nullable. Returns the plannerPlans owned by the group.",
                "x-ms-navigationProperty": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerPlan": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerPlan",
            "type": "object",
            "properties": {
              "archivalInfo": {
                "$ref": "#/components/schemas/microsoft.graph.plannerArchivalInfo"
              },
              "container": {
                "$ref": "#/components/schemas/microsoft.graph.plannerPlanContainer"
              },
              "contexts": {
                "$ref": "#/components/schemas/microsoft.graph.plannerPlanContextCollection"
              },
              "createdBy": {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                "format": "date-time",
                "nullable": true
              },
              "creationSource": {
                "$ref": "#/components/schemas/microsoft.graph.plannerPlanCreation"
              },
              "isArchived": {
                "type": "boolean",
                "description": "Read-only. If set to true, the plan is archived. An archived plan is read-only.",
                "nullable": true
              },
              "owner": {
                "type": "string",
                "description": "Use the container property instead. ID of the group that owns the plan. After it's set, this property can\u2019t be updated. This property doesn't return a valid group ID if the container of the plan isn't a group.",
                "nullable": true
              },
              "sharedWithContainers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerSharedWithContainer"
                },
                "description": "List of containers the plan is shared with."
              },
              "title": {
                "type": "string",
                "description": "Required. Title of the plan."
              },
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                },
                "description": "Collection of buckets in the plan. Read-only. Nullable.",
                "x-ms-navigationProperty": true
              },
              "details": {
                "$ref": "#/components/schemas/microsoft.graph.plannerPlanDetails"
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                },
                "description": "Collection of tasks in the plan. Read-only. Nullable.",
                "x-ms-navigationProperty": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerBucket": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerBucket",
            "type": "object",
            "properties": {
              "archivalInfo": {
                "$ref": "#/components/schemas/microsoft.graph.plannerArchivalInfo"
              },
              "creationSource": {
                "$ref": "#/components/schemas/microsoft.graph.plannerBucketCreation"
              },
              "isArchived": {
                "type": "boolean",
                "description": "Read-only. If set totrue, the bucket is archived. An archived bucket is read-only.",
                "nullable": true
              },
              "name": {
                "type": "string",
                "description": "Name of the bucket."
              },
              "orderHint": {
                "type": "string",
                "description": "Hint used to order items of this type in a list view. For details about the supported format, see Using order hints in Planner.",
                "nullable": true
              },
              "planId": {
                "type": "string",
                "description": "Plan ID to which the bucket belongs.",
                "nullable": true
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                },
                "description": "Read-only. Nullable. The collection of tasks in the bucket.",
                "x-ms-navigationProperty": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerTask",
            "type": "object",
            "properties": {
              "activeChecklistItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of checklist items with value set to false, representing incomplete items.",
                "format": "int32",
                "nullable": true
              },
              "appliedCategories": {
                "$ref": "#/components/schemas/microsoft.graph.plannerAppliedCategories"
              },
              "archivalInfo": {
                "$ref": "#/components/schemas/microsoft.graph.plannerArchivalInfo"
              },
              "assigneePriority": {
                "type": "string",
                "description": "A hint that is used to order items of this type in a list view. For more information, see Using order hints in planner.",
                "nullable": true
              },
              "assignments": {
                "$ref": "#/components/schemas/microsoft.graph.plannerAssignments"
              },
              "bucketId": {
                "type": "string",
                "description": "Bucket ID to which the task belongs. The bucket needs to be in the same plan as the task. The value of the bucketId property is 28 characters long and case-sensitive. Format validation is done on the service.",
                "nullable": true
              },
              "checklistItemCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The number of checklist items that are present on the task.",
                "format": "int32",
                "nullable": true
              },
              "completedBy": {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              },
              "completedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. The date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                "format": "date-time",
                "nullable": true
              },
              "conversationThreadId": {
                "type": "string",
                "description": "The thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.",
                "nullable": true
              },
              "createdBy": {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              },
              "createdDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Read-only. The date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                "format": "date-time",
                "nullable": true
              },
              "creationSource": {
                "$ref": "#/components/schemas/microsoft.graph.plannerTaskCreation"
              },
              "dueDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time at which the task is due. The timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                "format": "date-time",
                "nullable": true
              },
              "hasDescription": {
                "type": "boolean",
                "description": "Read-only. This value is true if the details object of the task has a nonempty description. Otherwise,false.",
                "nullable": true
              },
              "isArchived": {
                "type": "boolean",
                "description": "Read-only. If set to true, the task is archived. An archived task is read-only.",
                "nullable": true
              },
              "isOnMyDay": {
                "type": "boolean",
                "description": "Indicates whether to show this task in the MyDay view. If true, it shows the task.",
                "nullable": true
              },
              "isOnMyDayLastModifiedDate": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
                "type": "string",
                "description": "Read-only. The date on which task is added to or removed from MyDay.",
                "format": "date",
                "nullable": true
              },
              "lastModifiedBy": {
                "$ref": "#/components/schemas/microsoft.graph.identitySet"
              },
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "orderHint": {
                "type": "string",
                "description": "The hint used to order items of this type in a list view. For more information, see Using order hints in plannern.",
                "nullable": true
              },
              "percentComplete": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The percentage of task completion. When set to 100, the task is completed.",
                "format": "int32",
                "nullable": true
              },
              "planId": {
                "type": "string",
                "description": "Plan ID to which the task belongs.",
                "nullable": true
              },
              "previewType": {
                "$ref": "#/components/schemas/microsoft.graph.plannerPreviewType"
              },
              "priority": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "The priority of the task. Valid values are between 0 and 10, inclusive. Larger values indicate lower priority. For example, 0 has the highest priority and 10 has the lowest priority. Currently, planner interprets values 0 and 1 as 'urgent', 2 and 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'. Currently, planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'.",
                "format": "int32",
                "nullable": true
              },
              "recurrence": {
                "$ref": "#/components/schemas/microsoft.graph.plannerTaskRecurrence"
              },
              "referenceCount": {
                "maximum": 2147483647,
                "minimum": -2147483648,
                "type": "integer",
                "description": "Number of external references that exist on the task.",
                "format": "int32",
                "nullable": true
              },
              "specifiedCompletionRequirements": {
                "$ref": "#/components/schemas/microsoft.graph.plannerTaskCompletionRequirements"
              },
              "startDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                "format": "date-time",
                "nullable": true
              },
              "title": {
                "type": "string",
                "description": "Title of the task."
              },
              "assignedToTaskBoardFormat": {
                "$ref": "#/components/schemas/microsoft.graph.plannerAssignedToTaskBoardTaskFormat"
              },
              "bucketTaskBoardFormat": {
                "$ref": "#/components/schemas/microsoft.graph.plannerBucketTaskBoardTaskFormat"
              },
              "details": {
                "$ref": "#/components/schemas/microsoft.graph.plannerTaskDetails"
              },
              "progressTaskBoardFormat": {
                "$ref": "#/components/schemas/microsoft.graph.plannerProgressTaskBoardTaskFormat"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerAssignedToTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerAssignedToTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHintsByAssignee": {
                "$ref": "#/components/schemas/microsoft.graph.plannerOrderHintsByAssignee"
              },
              "unassignedOrderHint": {
                "type": "string",
                "description": "Hint value used to order the task on the AssignedTo view of the Task Board when the task isn't assigned to anyone, or if the orderHintsByAssignee dictionary doesn't provide an order hint for the user the task is assigned to. The format is defined as outlined here.",
                "nullable": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerBucketTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerBucketTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHint": {
                "type": "string",
                "description": "Hint used to order tasks in the bucket view of the task board. For details about the supported format, see Using order hints in Planner.",
                "nullable": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerTaskDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerTaskDetails",
            "type": "object",
            "properties": {
              "approvalAttachment": {
                "$ref": "#/components/schemas/microsoft.graph.plannerBaseApprovalAttachment"
              },
              "checklist": {
                "$ref": "#/components/schemas/microsoft.graph.plannerChecklistItems"
              },
              "completionRequirements": {
                "$ref": "#/components/schemas/microsoft.graph.plannerTaskCompletionRequirementDetails"
              },
              "description": {
                "type": "string",
                "description": "Description of the task.",
                "nullable": true
              },
              "forms": {
                "$ref": "#/components/schemas/microsoft.graph.plannerFormsDictionary"
              },
              "notes": {
                "$ref": "#/components/schemas/microsoft.graph.itemBody"
              },
              "previewType": {
                "$ref": "#/components/schemas/microsoft.graph.plannerPreviewType"
              },
              "references": {
                "$ref": "#/components/schemas/microsoft.graph.plannerExternalReferences"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerProgressTaskBoardTaskFormat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerProgressTaskBoardTaskFormat",
            "type": "object",
            "properties": {
              "orderHint": {
                "type": "string",
                "description": "Hint value used to order the task on the progress view of the task board. For details about the supported format, see Using order hints in Planner.",
                "nullable": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerPlanDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerPlanDetails",
            "type": "object",
            "properties": {
              "categoryDescriptions": {
                "$ref": "#/components/schemas/microsoft.graph.plannerCategoryDescriptions"
              },
              "contextDetails": {
                "$ref": "#/components/schemas/microsoft.graph.plannerPlanContextDetailsCollection"
              },
              "sharedWith": {
                "$ref": "#/components/schemas/microsoft.graph.plannerUserIds"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.planner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "planner",
            "type": "object",
            "properties": {
              "buckets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
                },
                "description": "Read-only. Nullable. Returns a collection of the specified buckets",
                "x-ms-navigationProperty": true
              },
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                },
                "description": "Read-only. Nullable. Returns a collection of the specified plans",
                "x-ms-navigationProperty": true
              },
              "rosters": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerRoster"
                },
                "description": "Read-only. Nullable. Returns a collection of the specified rosters",
                "x-ms-navigationProperty": true
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                },
                "description": "Read-only. Nullable. Returns a collection of the specified tasks",
                "x-ms-navigationProperty": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerPlanContainer": {
        "title": "plannerPlanContainer",
        "type": "object",
        "properties": {
          "containerId": {
            "type": "string",
            "description": "The identifier of the resource that contains the plan. Optional.",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/microsoft.graph.plannerContainerType"
          },
          "url": {
            "type": "string",
            "description": "The full canonical URL of the container. Optional.",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerRoster": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerRoster",
            "type": "object",
            "properties": {
              "assignedSensitivityLabel": {
                "$ref": "#/components/schemas/microsoft.graph.sensitivityLabelAssignment"
              },
              "members": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerRosterMember"
                },
                "description": "Retrieves the members of the plannerRoster.",
                "x-ms-navigationProperty": true
              },
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                },
                "description": "Retrieves the plans contained by the plannerRoster.",
                "x-ms-navigationProperty": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerRosterMember": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerRosterMember",
            "type": "object",
            "properties": {
              "roles": {
                "type": "array",
                "items": {
                  "type": "string",
                  "nullable": true
                },
                "description": "Additional roles associated with the PlannerRosterMember, which determines permissions of the member in the plannerRoster. Currently there are no available roles to assign, and every member has full control over the contents of the plannerRoster."
              },
              "tenantId": {
                "type": "string",
                "description": "Identifier of the tenant the user belongs to. Currently only the users from the same tenant can be added to a plannerRoster.",
                "nullable": true
              },
              "userId": {
                "type": "string",
                "description": "Identifier of the user.",
                "nullable": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.sensitivityLabelAssignmentMethod": {
        "title": "sensitivityLabelAssignmentMethod",
        "enum": [
          "standard",
          "privileged",
          "auto",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.plannerUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
          },
          {
            "title": "plannerUser",
            "type": "object",
            "properties": {
              "favoritePlanReferences": {
                "$ref": "#/components/schemas/microsoft.graph.plannerFavoritePlanReferenceCollection"
              },
              "recentPlanReferences": {
                "$ref": "#/components/schemas/microsoft.graph.plannerRecentPlanReferenceCollection"
              },
              "all": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
                },
                "x-ms-navigationProperty": true
              },
              "favoritePlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                },
                "description": "Read-only. Nullable. Returns the plannerPlans that the user marked as favorites.",
                "x-ms-navigationProperty": true
              },
              "myDayTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                },
                "description": "Read-only. Nullable. Returns the plannerTasks to be shown in the My Day view of the user.",
                "x-ms-navigationProperty": true
              },
              "plans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                },
                "x-ms-navigationProperty": true
              },
              "recentPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                },
                "description": "Read-only. Nullable. Returns the plannerPlans that the user recently viewed in apps that support recent plans.",
                "x-ms-navigationProperty": true
              },
              "rosterPlans": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
                },
                "description": "Read-only. Nullable. Returns the plannerPlans contained by the plannerRosters the user is a member.",
                "x-ms-navigationProperty": true
              },
              "tasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/microsoft.graph.plannerTask"
                },
                "description": "Read-only. Nullable. Returns the plannerTasks assigned to the user.",
                "x-ms-navigationProperty": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerDelta": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.entity"
          },
          {
            "title": "plannerDelta",
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.entity": {
        "title": "entity",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for an entity. Read-only."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerArchivalInfo": {
        "title": "plannerArchivalInfo",
        "type": "object",
        "properties": {
          "justification": {
            "type": "string",
            "description": "Read-only. Reason why the entity was archived or unarchived.",
            "nullable": true
          },
          "statusChangedBy": {
            "$ref": "#/components/schemas/microsoft.graph.identitySet"
          },
          "statusChangedDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "Read-only. Date and time at which the entity's archive status changed.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerPlanContextCollection": {
        "title": "plannerPlanContextCollection",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.identitySet": {
        "title": "identitySet",
        "type": "object",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/microsoft.graph.identity"
          },
          "device": {
            "$ref": "#/components/schemas/microsoft.graph.identity"
          },
          "user": {
            "$ref": "#/components/schemas/microsoft.graph.identity"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerPlanCreation": {
        "title": "plannerPlanCreation",
        "type": "object",
        "properties": {
          "creationSourceKind": {
            "$ref": "#/components/schemas/microsoft.graph.plannerCreationSourceKind"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerSharedWithContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerPlanContainer"
          },
          {
            "title": "plannerSharedWithContainer",
            "type": "object",
            "properties": {
              "accessLevel": {
                "$ref": "#/components/schemas/microsoft.graph.plannerPlanAccessLevel"
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerBucketCreation": {
        "title": "plannerBucketCreation",
        "type": "object",
        "properties": {
          "creationSourceKind": {
            "$ref": "#/components/schemas/microsoft.graph.plannerCreationSourceKind"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerAppliedCategories": {
        "title": "plannerAppliedCategories",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerAssignments": {
        "title": "plannerAssignments",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerTaskCreation": {
        "title": "plannerTaskCreation",
        "type": "object",
        "properties": {
          "creationSourceKind": {
            "$ref": "#/components/schemas/microsoft.graph.plannerCreationSourceKind"
          },
          "teamsPublicationInfo": {
            "$ref": "#/components/schemas/microsoft.graph.plannerTeamsPublicationInfo"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerPreviewType": {
        "title": "plannerPreviewType",
        "enum": [
          "automatic",
          "noPreview",
          "checklist",
          "description",
          "reference"
        ],
        "type": "string"
      },
      "microsoft.graph.plannerTaskRecurrence": {
        "title": "plannerTaskRecurrence",
        "type": "object",
        "properties": {
          "nextInSeriesTaskId": {
            "type": "string",
            "description": "The taskId of the next task in this series. This value is assigned at the time the next task in the series is created, and is null prior to that time.",
            "nullable": true
          },
          "occurrenceId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The 1-based index of this task within the recurrence series. The first task in a series has the value 1, the next task in the series has the value 2, and so on.",
            "format": "int32"
          },
          "previousInSeriesTaskId": {
            "type": "string",
            "description": "The taskId of the previous task in this series. null for the first task in a series since it has no predecessor. All subsequent tasks in the series have a value that corresponds to their predecessors.",
            "nullable": true
          },
          "recurrenceStartDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The date and time when this recurrence series begin. For the first task in a series (occurrenceId = 1) this value is copied from schedule.patternStartDateTime. For subsequent tasks in the series (occurrenceId >= 2) this value is copied from the previous task and never changes; it preserves the start date of the recurring series. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.",
            "format": "date-time"
          },
          "schedule": {
            "$ref": "#/components/schemas/microsoft.graph.plannerRecurrenceSchedule"
          },
          "seriesId": {
            "type": "string",
            "description": "The recurrence series this task belongs to. A GUID-based value that serves as the unique identifier for a series."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerTaskCompletionRequirements": {
        "title": "plannerTaskCompletionRequirements",
        "enum": [
          "none",
          "checklistCompletion",
          "unknownFutureValue",
          "formCompletion",
          "approvalCompletion",
          "completionInHostedApp"
        ],
        "type": "string",
        "x-ms-enum-flags": {
          "isFlags": true
        }
      },
      "microsoft.graph.plannerOrderHintsByAssignee": {
        "title": "plannerOrderHintsByAssignee",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerBaseApprovalAttachment": {
        "title": "plannerBaseApprovalAttachment",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/microsoft.graph.plannerApprovalStatus"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerChecklistItems": {
        "title": "plannerChecklistItems",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerTaskCompletionRequirementDetails": {
        "title": "plannerTaskCompletionRequirementDetails",
        "type": "object",
        "properties": {
          "approvalRequirement": {
            "$ref": "#/components/schemas/microsoft.graph.plannerApprovalRequirement"
          },
          "checklistRequirement": {
            "$ref": "#/components/schemas/microsoft.graph.plannerChecklistRequirement"
          },
          "formsRequirement": {
            "$ref": "#/components/schemas/microsoft.graph.plannerFormsRequirement"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerFormsDictionary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.Dictionary"
          },
          {
            "title": "plannerFormsDictionary",
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.itemBody": {
        "title": "itemBody",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The content of the item.",
            "nullable": true
          },
          "contentType": {
            "$ref": "#/components/schemas/microsoft.graph.bodyType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerExternalReferences": {
        "title": "plannerExternalReferences",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerCategoryDescriptions": {
        "title": "plannerCategoryDescriptions",
        "type": "object",
        "properties": {
          "category1": {
            "type": "string",
            "description": "The label associated with Category 1",
            "nullable": true
          },
          "category10": {
            "type": "string",
            "description": "The label associated with Category 10",
            "nullable": true
          },
          "category11": {
            "type": "string",
            "description": "The label associated with Category 11",
            "nullable": true
          },
          "category12": {
            "type": "string",
            "description": "The label associated with Category 12",
            "nullable": true
          },
          "category13": {
            "type": "string",
            "description": "The label associated with Category 13",
            "nullable": true
          },
          "category14": {
            "type": "string",
            "description": "The label associated with Category 14",
            "nullable": true
          },
          "category15": {
            "type": "string",
            "description": "The label associated with Category 15",
            "nullable": true
          },
          "category16": {
            "type": "string",
            "description": "The label associated with Category 16",
            "nullable": true
          },
          "category17": {
            "type": "string",
            "description": "The label associated with Category 17",
            "nullable": true
          },
          "category18": {
            "type": "string",
            "description": "The label associated with Category 18",
            "nullable": true
          },
          "category19": {
            "type": "string",
            "description": "The label associated with Category 19",
            "nullable": true
          },
          "category2": {
            "type": "string",
            "description": "The label associated with Category 2",
            "nullable": true
          },
          "category20": {
            "type": "string",
            "description": "The label associated with Category 20",
            "nullable": true
          },
          "category21": {
            "type": "string",
            "description": "The label associated with Category 21",
            "nullable": true
          },
          "category22": {
            "type": "string",
            "description": "The label associated with Category 22",
            "nullable": true
          },
          "category23": {
            "type": "string",
            "description": "The label associated with Category 23",
            "nullable": true
          },
          "category24": {
            "type": "string",
            "description": "The label associated with Category 24",
            "nullable": true
          },
          "category25": {
            "type": "string",
            "description": "The label associated with Category 25",
            "nullable": true
          },
          "category3": {
            "type": "string",
            "description": "The label associated with Category 3",
            "nullable": true
          },
          "category4": {
            "type": "string",
            "description": "The label associated with Category 4",
            "nullable": true
          },
          "category5": {
            "type": "string",
            "description": "The label associated with Category 5",
            "nullable": true
          },
          "category6": {
            "type": "string",
            "description": "The label associated with Category 6",
            "nullable": true
          },
          "category7": {
            "type": "string",
            "description": "The label associated with Category 7",
            "nullable": true
          },
          "category8": {
            "type": "string",
            "description": "The label associated with Category 8",
            "nullable": true
          },
          "category9": {
            "type": "string",
            "description": "The label associated with Category 9",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerPlanContextDetailsCollection": {
        "title": "plannerPlanContextDetailsCollection",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerUserIds": {
        "title": "plannerUserIds",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerContainerType": {
        "title": "plannerContainerType",
        "enum": [
          "group",
          "unknownFutureValue",
          "roster",
          "project",
          "driveItem",
          "user"
        ],
        "type": "string"
      },
      "microsoft.graph.sensitivityLabelAssignment": {
        "title": "sensitivityLabelAssignment",
        "type": "object",
        "properties": {
          "assignmentMethod": {
            "$ref": "#/components/schemas/microsoft.graph.sensitivityLabelAssignmentMethod"
          },
          "sensitivityLabelId": {
            "type": "string",
            "description": "The unique identifier for the sensitivity label assigned to the file."
          },
          "tenantId": {
            "type": "string",
            "description": "The unique identifier for the tenant that hosts the file when this label is applied."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerFavoritePlanReferenceCollection": {
        "title": "plannerFavoritePlanReferenceCollection",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerRecentPlanReferenceCollection": {
        "title": "plannerRecentPlanReferenceCollection",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.ODataErrors.ODataError": {
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/microsoft.graph.ODataErrors.MainError"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerPlanCollectionResponse": {
        "title": "Collection of plannerPlan",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.plannerPlan"
            }
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerBucketCollectionResponse": {
        "title": "Collection of plannerBucket",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.plannerBucket"
            }
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerTaskCollectionResponse": {
        "title": "Collection of plannerTask",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.plannerTask"
            }
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "ODataCountResponse": {
        "type": "integer",
        "format": "int32"
      },
      "microsoft.graph.plannerRosterCollectionResponse": {
        "title": "Collection of plannerRoster",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.plannerRoster"
            }
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerRosterMemberCollectionResponse": {
        "title": "Collection of plannerRosterMember",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.plannerRosterMember"
            }
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerDeltaCollectionResponse": {
        "title": "Collection of plannerDelta",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.plannerDelta"
            }
          },
          "@odata.nextLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.identity": {
        "title": "identity",
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The display name of the identity. For drive items, the display name might not always be available or up to date. For example, if a user changes their display name the API might show the new value in a future response, but the items associated with the user don't show up as changed when using delta.",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the identity or actor. For example, in the access reviews decisions API, this property might record the id of the principal, that is, the group, user, or application that's subject to review.",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerCreationSourceKind": {
        "title": "plannerCreationSourceKind",
        "enum": [
          "none",
          "external",
          "publication",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.plannerPlanAccessLevel": {
        "title": "plannerPlanAccessLevel",
        "enum": [
          "readAccess",
          "readWriteAccess",
          "fullAccess",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.plannerTeamsPublicationInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/microsoft.graph.plannerTaskCreation"
          },
          {
            "title": "plannerTeamsPublicationInfo",
            "type": "object",
            "properties": {
              "lastModifiedDateTime": {
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "type": "string",
                "description": "The date and time when this task was last modified by the publication process. Read-only.",
                "format": "date-time",
                "nullable": true
              },
              "publicationId": {
                "type": "string",
                "description": "The identifier of the publication. Read-only.",
                "nullable": true
              },
              "publishedToPlanId": {
                "type": "string",
                "description": "The identifier of the plannerPlan this task was originally placed in. Read-only.",
                "nullable": true
              },
              "publishingTeamId": {
                "type": "string",
                "description": "The identifier of the team that initiated the publication process. Read-only.",
                "nullable": true
              },
              "publishingTeamName": {
                "type": "string",
                "description": "The display name of the team that initiated the publication process. This display name is for reference only, and might not represent the most up-to-date name of the team. Read-only.",
                "nullable": true
              }
            },
            "additionalProperties": {
              "type": "object"
            }
          }
        ]
      },
      "microsoft.graph.plannerRecurrenceSchedule": {
        "title": "plannerRecurrenceSchedule",
        "type": "object",
        "properties": {
          "nextOccurrenceDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The next date for this schedule. When a new task is instantiated to continue the recurrence series, this date is used for the dueDateTime of the new plannerTask. Auto-generated by the service. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.",
            "format": "date-time",
            "nullable": true
          },
          "pattern": {
            "$ref": "#/components/schemas/microsoft.graph.recurrencePattern"
          },
          "patternStartDateTime": {
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
            "type": "string",
            "description": "The start date for the recurrence pattern. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerApprovalStatus": {
        "title": "plannerApprovalStatus",
        "enum": [
          "requested",
          "approved",
          "rejected",
          "cancelled",
          "unknownFutureValue"
        ],
        "type": "string"
      },
      "microsoft.graph.plannerApprovalRequirement": {
        "title": "plannerApprovalRequirement",
        "type": "object",
        "properties": {
          "isApprovalRequired": {
            "type": "boolean",
            "description": "Specifies whether approval is required to complete the plannerTask. When this property is set to true, the task can only be marked complete if an approval is created for the task and approved.",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerChecklistRequirement": {
        "title": "plannerChecklistRequirement",
        "type": "object",
        "properties": {
          "requiredChecklistItemIds": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "A collection of required plannerChecklistItems identifiers to complete the plannerTask."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.plannerFormsRequirement": {
        "title": "plannerFormsRequirement",
        "type": "object",
        "properties": {
          "requiredForms": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "description": "Read-only. A collection of keys from the plannerFormsDictionary that identify the plannerFormReference objects that specify the requirements to complete the plannerTask."
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.Dictionary": {
        "title": "Dictionary",
        "type": "object",
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.bodyType": {
        "title": "bodyType",
        "enum": [
          "text",
          "html"
        ],
        "type": "string"
      },
      "microsoft.graph.ODataErrors.MainError": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string",
            "x-ms-primary-error-message": true
          },
          "target": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ErrorDetails"
            }
          },
          "innerError": {
            "$ref": "#/components/schemas/microsoft.graph.ODataErrors.InnerError"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.recurrencePattern": {
        "title": "recurrencePattern",
        "type": "object",
        "properties": {
          "dayOfMonth": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.",
            "format": "int32"
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
            },
            "description": "A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly."
          },
          "firstDayOfWeek": {
            "$ref": "#/components/schemas/microsoft.graph.dayOfWeek"
          },
          "index": {
            "$ref": "#/components/schemas/microsoft.graph.weekIndex"
          },
          "interval": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.",
            "format": "int32"
          },
          "month": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "The month in which the event occurs.  This is a number from 1 to 12.",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/microsoft.graph.recurrencePatternType"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.ODataErrors.ErrorDetails": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "microsoft.graph.ODataErrors.InnerError": {
        "type": "object",
        "additionalProperties": {
          "type": "object"
        },
        "description": "The structure of this object is service-specific"
      },
      "microsoft.graph.dayOfWeek": {
        "title": "dayOfWeek",
        "enum": [
          "sunday",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday"
        ],
        "type": "string"
      },
      "microsoft.graph.weekIndex": {
        "title": "weekIndex",
        "enum": [
          "first",
          "second",
          "third",
          "fourth",
          "last"
        ],
        "type": "string"
      },
      "microsoft.graph.recurrencePatternType": {
        "title": "recurrencePatternType",
        "enum": [
          "daily",
          "weekly",
          "absoluteMonthly",
          "relativeMonthly",
          "absoluteYearly",
          "relativeYearly"
        ],
        "type": "string"
      }
    },
    "responses": {
      "error": {
        "description": "error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/microsoft.graph.ODataErrors.ODataError"
            }
          }
        }
      },
      "microsoft.graph.plannerPlanCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/microsoft.graph.plannerPlanCollectionResponse"
            }
          }
        }
      },
      "microsoft.graph.plannerBucketCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/microsoft.graph.plannerBucketCollectionResponse"
            }
          }
        }
      },
      "microsoft.graph.plannerTaskCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/microsoft.graph.plannerTaskCollectionResponse"
            }
          }
        }
      },
      "ODataCountResponse": {
        "description": "The count of the resource",
        "content": {
          "text/plain": {
            "schema": {
              "$ref": "#/components/schemas/ODataCountResponse"
            }
          }
        }
      },
      "microsoft.graph.plannerRosterCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/microsoft.graph.plannerRosterCollectionResponse"
            }
          }
        }
      },
      "microsoft.graph.plannerRosterMemberCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/microsoft.graph.plannerRosterMemberCollectionResponse"
            }
          }
        }
      },
      "microsoft.graph.plannerDeltaCollectionResponse": {
        "description": "Retrieved collection",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/microsoft.graph.plannerDeltaCollectionResponse"
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items",
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 0,
          "type": "integer"
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items",
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 0,
          "type": "integer"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "filter": {
        "name": "$filter",
        "in": "query",
        "description": "Filter items by property values",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items",
        "style": "form",
        "explode": false,
        "schema": {
          "type": "boolean"
        }
      }
    },
    "securitySchemes": {
      "azureaadv2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/authorize",
            "tokenUrl": "https://login.microsoftonline.com/common/oauth2/v2.0/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {
      "azureaadv2": []
    }
  ]
}