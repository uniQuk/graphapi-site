{
  "f3de0c70d83f": {
    "path": "/accessReviews",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": false,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization for group and app memberships, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaAccessReview",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": true,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "New-MgBetaAccessReview",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-create?view=graph-rest-beta"
      }
    }
  },
  "f20e74912d6a": {
    "path": "/accessReviews/{accessReview-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": false,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization for group and app memberships, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaAccessReview",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": true,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Update-MgBetaAccessReview",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": true,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaAccessReview",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-delete?view=graph-rest-beta"
      }
    }
  },
  "2c023a5e4b29": {
    "path": "/accessReviews/{accessReview-id}/decisions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": false,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization for group and app memberships, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaAccessReviewDecision",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-listdecisions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAccessReviewDecision",
        "apiReference": ""
      }
    }
  },
  "0215b95c2d74": {
    "path": "/accessReviews/{accessReview-id}/decisions/{accessReviewDecision-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewDecision",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAccessReviewDecision",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAccessReviewDecision",
        "apiReference": ""
      }
    }
  },
  "250d8676b137": {
    "path": "/accessReviews/{accessReview-id}/decisions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": false,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization for group and app memberships, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaAccessReviewDecisionCount",
        "apiReference": ""
      }
    }
  },
  "47699907bf76": {
    "path": "/accessReviews/{accessReview-id}/instances",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstance",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAccessReviewInstance",
        "apiReference": ""
      }
    }
  },
  "5680fe3dc112": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAccessReviewInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAccessReviewInstance",
        "apiReference": ""
      }
    }
  },
  "0e76d88ee62e": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/decisions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceDecision",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAccessReviewInstanceDecision",
        "apiReference": ""
      }
    }
  },
  "2186f1e1ff3d": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/decisions/{accessReviewDecision-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceDecision",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAccessReviewInstanceDecision",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAccessReviewInstanceDecision",
        "apiReference": ""
      }
    }
  },
  "2909cd64277c": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/decisions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceDecisionCount",
        "apiReference": ""
      }
    }
  },
  "f00b590137a5": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/microsoft.graph.applyDecisions",
    "methods": {}
  },
  "1689e2b488fa": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/microsoft.graph.resetDecisions",
    "methods": {}
  },
  "4cea5959592f": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/microsoft.graph.sendReminder",
    "methods": {}
  },
  "9db00eabde14": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/microsoft.graph.stop",
    "methods": {}
  },
  "33db8588844a": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/myDecisions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceMyDecision",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAccessReviewInstanceMyDecision",
        "apiReference": ""
      }
    }
  },
  "169fda651cfb": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/myDecisions/{accessReviewDecision-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceMyDecision",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAccessReviewInstanceMyDecision",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAccessReviewInstanceMyDecision",
        "apiReference": ""
      }
    }
  },
  "7a761632941e": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/myDecisions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceMyDecisionCount",
        "apiReference": ""
      }
    }
  },
  "697a4ed303f5": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/reviewers",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceReviewer",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAccessReviewInstanceReviewer",
        "apiReference": ""
      }
    }
  },
  "5e6da43d99c2": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/reviewers/{accessReviewReviewer-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceReviewer",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAccessReviewInstanceReviewer",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAccessReviewInstanceReviewer",
        "apiReference": ""
      }
    }
  },
  "84bde50306c0": {
    "path": "/accessReviews/{accessReview-id}/instances/{accessReview-id1}/reviewers/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceReviewerCount",
        "apiReference": ""
      }
    }
  },
  "6e2294ae4699": {
    "path": "/accessReviews/{accessReview-id}/instances/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewInstanceCount",
        "apiReference": ""
      }
    }
  },
  "f3819d6eb24d": {
    "path": "/accessReviews/{accessReview-id}/microsoft.graph.applyDecisions",
    "methods": {}
  },
  "7baa30920ce1": {
    "path": "/accessReviews/{accessReview-id}/microsoft.graph.resetDecisions",
    "methods": {}
  },
  "2731a2917495": {
    "path": "/accessReviews/{accessReview-id}/microsoft.graph.sendReminder",
    "methods": {}
  },
  "9e7a279a838e": {
    "path": "/accessReviews/{accessReview-id}/microsoft.graph.stop",
    "methods": {}
  },
  "c562c05c027f": {
    "path": "/accessReviews/{accessReview-id}/myDecisions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": true,
            "Description": "Read access reviews that you can access",
            "FullDescription": "Allows the app to read information on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": true,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaAccessReviewMyDecision",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-listmydecisions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAccessReviewMyDecision",
        "apiReference": ""
      }
    }
  },
  "bd425c3755c4": {
    "path": "/accessReviews/{accessReview-id}/myDecisions/{accessReviewDecision-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewMyDecision",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAccessReviewMyDecision",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAccessReviewMyDecision",
        "apiReference": ""
      }
    }
  },
  "c684056b39f9": {
    "path": "/accessReviews/{accessReview-id}/myDecisions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": true,
            "Description": "Read access reviews that you can access",
            "FullDescription": "Allows the app to read information on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": true,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaAccessReviewMyDecisionCount",
        "apiReference": ""
      }
    }
  },
  "adf06020ead4": {
    "path": "/accessReviews/{accessReview-id}/reviewers",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": false,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization for group and app memberships, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaAccessReviewReviewer",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-listreviewers?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": true,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "New-MgBetaAccessReviewReviewer",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-addreviewer?view=graph-rest-beta"
      }
    }
  },
  "36dcdc922ea9": {
    "path": "/accessReviews/{accessReview-id}/reviewers/{accessReviewReviewer-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAccessReviewReviewer",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAccessReviewReviewer",
        "apiReference": ""
      },
      "delete": {
        "permissions": [
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": true,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Remove-MgBetaAccessReviewReviewer",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreview-removereviewer?view=graph-rest-beta"
      }
    }
  },
  "66e89b86f162": {
    "path": "/accessReviews/{accessReview-id}/reviewers/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": false,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization for group and app memberships, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaAccessReviewReviewerCount",
        "apiReference": ""
      }
    }
  },
  "c1208adfc9d3": {
    "path": "/accessReviews/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Manage access reviews that you can access",
            "FullDescription": "Allows the app to read, update and perform action on access reviews, reviewers, decisions and settings that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AccessReview.ReadWrite.Membership",
            "IsAdmin": false,
            "Description": "Manage access reviews for group and app memberships",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization for group and app memberships, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaAccessReviewCount",
        "apiReference": ""
      }
    }
  },
  "fceefc78882d": {
    "path": "/agreements",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreement",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAgreement",
        "apiReference": ""
      }
    }
  },
  "a05c5716a15c": {
    "path": "/agreements/{agreement-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreement",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAgreement",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAgreement",
        "apiReference": ""
      }
    }
  },
  "f99a0003019a": {
    "path": "/agreements/{agreement-id}/acceptances",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementAcceptance",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAgreementAcceptance",
        "apiReference": ""
      }
    }
  },
  "6624e5f03a5c": {
    "path": "/agreements/{agreement-id}/acceptances/{agreementAcceptance-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementAcceptance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAgreementAcceptance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAgreementAcceptance",
        "apiReference": ""
      }
    }
  },
  "6d6a46e26615": {
    "path": "/agreements/{agreement-id}/acceptances/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementAcceptanceCount",
        "apiReference": ""
      }
    }
  },
  "1241e8ebf642": {
    "path": "/agreements/{agreement-id}/file",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Agreement.Read.All",
            "IsAdmin": true,
            "Description": "Read all terms of use agreements",
            "FullDescription": "Allows the app to read terms of use agreements on your behalf.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Agreement.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write all terms of use agreements",
            "FullDescription": "Allows the app to read and write terms of use agreements on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaAgreementFile",
        "apiReference": "https://learn.microsoft.com/graph/api/agreementfile-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAgreementFile",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAgreementFile",
        "apiReference": ""
      }
    }
  },
  "0f51ffea5ac1": {
    "path": "/agreements/{agreement-id}/file/localizations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileLocalization",
        "apiReference": "https://learn.microsoft.com/graph/api/agreementfile-list-localizations?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAgreementFileLocalization",
        "apiReference": ""
      }
    }
  },
  "e3e253d44421": {
    "path": "/agreements/{agreement-id}/file/localizations/{agreementFileLocalization-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileLocalization",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAgreementFileLocalization",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAgreementFileLocalization",
        "apiReference": ""
      }
    }
  },
  "0532e5dbc749": {
    "path": "/agreements/{agreement-id}/file/localizations/{agreementFileLocalization-id}/versions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileLocalizationVersion",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAgreementFileLocalizationVersion",
        "apiReference": ""
      }
    }
  },
  "7736e0f19469": {
    "path": "/agreements/{agreement-id}/file/localizations/{agreementFileLocalization-id}/versions/{agreementFileVersion-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileLocalizationVersion",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAgreementFileLocalizationVersion",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAgreementFileLocalizationVersion",
        "apiReference": ""
      }
    }
  },
  "c354a6b71235": {
    "path": "/agreements/{agreement-id}/file/localizations/{agreementFileLocalization-id}/versions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileLocalizationVersionCount",
        "apiReference": ""
      }
    }
  },
  "5a40a6ccb974": {
    "path": "/agreements/{agreement-id}/file/localizations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileLocalizationCount",
        "apiReference": ""
      }
    }
  },
  "ac334fd00b5f": {
    "path": "/agreements/{agreement-id}/files",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFile",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAgreementFile",
        "apiReference": ""
      }
    }
  },
  "c98da4f94fad": {
    "path": "/agreements/{agreement-id}/files/{agreementFileLocalization-id}",
    "methods": {}
  },
  "84571c448c14": {
    "path": "/agreements/{agreement-id}/files/{agreementFileLocalization-id}/versions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileVersion",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaAgreementFileVersion",
        "apiReference": ""
      }
    }
  },
  "fa224160e0e5": {
    "path": "/agreements/{agreement-id}/files/{agreementFileLocalization-id}/versions/{agreementFileVersion-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileVersion",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaAgreementFileVersion",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaAgreementFileVersion",
        "apiReference": ""
      }
    }
  },
  "f32163d1ff34": {
    "path": "/agreements/{agreement-id}/files/{agreementFileLocalization-id}/versions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileVersionCount",
        "apiReference": ""
      }
    }
  },
  "074fb30ac2d5": {
    "path": "/agreements/{agreement-id}/files/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaAgreementFileCount",
        "apiReference": ""
      }
    }
  },
  "be3ca39d052e": {
    "path": "/businessFlowTemplates",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaBusinessFlowTemplate",
        "apiReference": "https://learn.microsoft.com/graph/api/businessflowtemplate-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaBusinessFlowTemplate",
        "apiReference": ""
      }
    }
  },
  "97a225a91a19": {
    "path": "/businessFlowTemplates/{businessFlowTemplate-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaBusinessFlowTemplate",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaBusinessFlowTemplate",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaBusinessFlowTemplate",
        "apiReference": ""
      }
    }
  },
  "74680aeb4dc5": {
    "path": "/businessFlowTemplates/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaBusinessFlowTemplateCount",
        "apiReference": ""
      }
    }
  },
  "5646bab42d0e": {
    "path": "/identityGovernance",
    "methods": {}
  },
  "272b2d11e829": {
    "path": "/identityGovernance/accessReviews",
    "methods": {}
  },
  "18a8face12eb": {
    "path": "/identityGovernance/accessReviews/decisions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecision",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDecision",
        "apiReference": ""
      }
    }
  },
  "5e5df44c9ee0": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecision",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecision",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecision",
        "apiReference": ""
      }
    }
  },
  "68f6ccd33542": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/insights",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInsight",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "4a88c0e9ca81": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/insights/{governanceInsight-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInsight",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecisionInsight",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "e9bf95e96f8d": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/insights/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInsightCount",
        "apiReference": ""
      }
    }
  },
  "1edf837efdd6": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecisionInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecisionInstance",
        "apiReference": ""
      }
    }
  },
  "9e91b26c1582": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceContactedReviewer",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDecisionInstanceContactedReviewer",
        "apiReference": ""
      }
    }
  },
  "ebcd3e7ac325": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers/{accessReviewReviewer-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceContactedReviewer",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecisionInstanceContactedReviewer",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecisionInstanceContactedReviewer",
        "apiReference": ""
      }
    }
  },
  "9de38acb11a4": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceContactedReviewerCount",
        "apiReference": ""
      }
    }
  },
  "353d57f34731": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecision",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecision",
        "apiReference": ""
      }
    }
  },
  "985321ed63a2": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/{accessReviewInstanceDecisionItem-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecision",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecision",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecision",
        "apiReference": ""
      }
    }
  },
  "6b78dc135879": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/{accessReviewInstanceDecisionItem-id1}/insights",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecisionInsight",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "7cb7976d1d61": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/{accessReviewInstanceDecisionItem-id1}/insights/{governanceInsight-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecisionInsight",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecisionInsight",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "18207841edf9": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/{accessReviewInstanceDecisionItem-id1}/insights/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecisionInsightCount",
        "apiReference": ""
      }
    }
  },
  "3d45d697da26": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDecisionCount",
        "apiReference": ""
      }
    }
  },
  "1eb22c40b6e9": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "e87ca01e57e4": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/microsoft.graph.recordAllDecisions",
    "methods": {}
  },
  "e3c17e6d53a1": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/definition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceDefinition",
        "apiReference": ""
      }
    }
  },
  "3b2aaa858124": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.acceptRecommendations",
    "methods": {}
  },
  "6087f0dc2b40": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.applyDecisions",
    "methods": {}
  },
  "de450feaef29": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.batchRecordDecisions",
    "methods": {}
  },
  "8d00a0c8fed0": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.resetDecisions",
    "methods": {}
  },
  "99d9c316eda4": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.sendReminder",
    "methods": {}
  },
  "f2e9599d2265": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.stop",
    "methods": {}
  },
  "fc4bca3bfa86": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.stopApplyDecisions",
    "methods": {}
  },
  "261c125b30a7": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStage",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStage",
        "apiReference": ""
      }
    }
  },
  "6b52050dab9f": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStage",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStage",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStage",
        "apiReference": ""
      }
    }
  },
  "e7022d18a693": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecision",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecision",
        "apiReference": ""
      }
    }
  },
  "c4c852a0438a": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecision",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecision",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecision",
        "apiReference": ""
      }
    }
  },
  "b0a0c99dc132": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id1}/insights",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecisionInsight",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "518d6aef35ac": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id1}/insights/{governanceInsight-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecisionInsight",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecisionInsight",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "416d49fa4885": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id1}/insights/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecisionInsightCount",
        "apiReference": ""
      }
    }
  },
  "db06c5021584": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageDecisionCount",
        "apiReference": ""
      }
    }
  },
  "d5da21633592": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "9c32722784fb": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/microsoft.graph.recordAllDecisions",
    "methods": {}
  },
  "fe742f52881f": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/microsoft.graph.stop",
    "methods": {}
  },
  "4939b2c67d75": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionInstanceStageCount",
        "apiReference": ""
      }
    }
  },
  "608aad577156": {
    "path": "/identityGovernance/accessReviews/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "a8da32a7e3f9": {
    "path": "/identityGovernance/accessReviews/decisions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDecisionCount",
        "apiReference": ""
      }
    }
  },
  "3568aecba910": {
    "path": "/identityGovernance/accessReviews/decisions/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "88c13671228d": {
    "path": "/identityGovernance/accessReviews/decisions/microsoft.graph.recordAllDecisions",
    "methods": {}
  },
  "c11d3a6abf5e": {
    "path": "/identityGovernance/accessReviews/definitions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewset-list-definitions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewset-post-definitions?view=graph-rest-beta"
      }
    }
  },
  "fc562f1f8a77": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewscheduledefinition-get?view=graph-rest-beta"
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaIdentityGovernanceAccessReviewDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewscheduledefinition-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewscheduledefinition-delete?view=graph-rest-beta"
      }
    }
  },
  "8e286e18faf3": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewscheduledefinition-list-instances?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDefinitionInstance",
        "apiReference": ""
      }
    }
  },
  "36b853ae23e3": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewinstance-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewinstance-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstance",
        "apiReference": ""
      }
    }
  },
  "702ad46f3212": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/contactedReviewers",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceContactedReviewer",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewinstance-list-contactedreviewers?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceContactedReviewer",
        "apiReference": ""
      }
    }
  },
  "1f370847b59e": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/contactedReviewers/{accessReviewReviewer-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceContactedReviewer",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceContactedReviewer",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceContactedReviewer",
        "apiReference": ""
      }
    }
  },
  "59241c4774f9": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/contactedReviewers/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceContactedReviewerCount",
        "apiReference": ""
      }
    }
  },
  "6d6a4fa073d1": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecision",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewinstance-list-decisions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecision",
        "apiReference": ""
      }
    }
  },
  "5da205d64038": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecision",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewinstancedecisionitem-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecision",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecision",
        "apiReference": ""
      }
    }
  },
  "eaf1b600b8f7": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/insights",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInsight",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "8969d9d27787": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/insights/{governanceInsight-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInsight",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInsight",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "6f0a1e2bacdf": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/insights/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInsightCount",
        "apiReference": ""
      }
    }
  },
  "b40ceae1ffd5": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionInstance",
        "apiReference": ""
      }
    }
  },
  "d2983027e29e": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers",
    "methods": {}
  },
  "c255761a18f4": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers/{accessReviewReviewer-id}",
    "methods": {}
  },
  "ab9c230f5954": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers/$count",
    "methods": {}
  },
  "b3e0d8c4c2e3": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/definition",
    "methods": {}
  },
  "45ea70d599f6": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.acceptRecommendations",
    "methods": {}
  },
  "264dbb992078": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.applyDecisions",
    "methods": {}
  },
  "dcc4f4f5bca9": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.batchRecordDecisions",
    "methods": {}
  },
  "e46153369d89": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.resetDecisions",
    "methods": {}
  },
  "81ec8f1018f9": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.sendReminder",
    "methods": {}
  },
  "f5298efe3d43": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.stop",
    "methods": {}
  },
  "42f1b3afd612": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.stopApplyDecisions",
    "methods": {}
  },
  "edb77dcc9075": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages",
    "methods": {}
  },
  "87d354e54523": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}",
    "methods": {}
  },
  "987bfbd82c35": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions",
    "methods": {}
  },
  "3ce3027cb625": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id1}",
    "methods": {}
  },
  "60b67e4ccfff": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id1}/insights",
    "methods": {}
  },
  "eba91359855f": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id1}/insights/{governanceInsight-id}",
    "methods": {}
  },
  "0a05c77f4199": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id1}/insights/$count",
    "methods": {}
  },
  "8f5c5aed0a37": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/$count",
    "methods": {}
  },
  "a834143ca68e": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "f802205ef853": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/decisions/microsoft.graph.recordAllDecisions",
    "methods": {}
  },
  "8bdfa92c8772": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/{accessReviewStage-id}/microsoft.graph.stop",
    "methods": {}
  },
  "73fed56213d5": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/$count",
    "methods": {}
  },
  "d1f7fa247da7": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/stages/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "8b85cdfdaa07": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDecisionCount",
        "apiReference": ""
      }
    }
  },
  "e5feb578e94d": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "694997b5ea51": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/decisions/microsoft.graph.recordAllDecisions",
    "methods": {}
  },
  "a20e5221c6b4": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/definition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceDefinition",
        "apiReference": ""
      }
    }
  },
  "45a3c42c6663": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/microsoft.graph.acceptRecommendations",
    "methods": {}
  },
  "88318955bba6": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/microsoft.graph.applyDecisions",
    "methods": {}
  },
  "732bff3e2c8d": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/microsoft.graph.batchRecordDecisions",
    "methods": {}
  },
  "86c82d3bca11": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/microsoft.graph.resetDecisions",
    "methods": {}
  },
  "8080ca457c61": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/microsoft.graph.sendReminder",
    "methods": {}
  },
  "6ad9f8e83d05": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/microsoft.graph.stop",
    "methods": {}
  },
  "417a3735e34e": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/microsoft.graph.stopApplyDecisions",
    "methods": {}
  },
  "b30be2c619e2": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStage",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewinstance-list-stages?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStage",
        "apiReference": ""
      }
    }
  },
  "8cd7a7e6118e": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStage",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewstage-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStage",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewstage-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStage",
        "apiReference": ""
      }
    }
  },
  "cc4e65f8fd53": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecision",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewstage-list-decisions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecision",
        "apiReference": ""
      }
    }
  },
  "b61771c6c9d9": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecision",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewinstancedecisionitem-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecision",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewinstancedecisionitem-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecision",
        "apiReference": ""
      }
    }
  },
  "e2e017fb715a": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/insights",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionInsight",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "fa578d63f069": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/insights/{governanceInsight-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionInsight",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionInsight",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionInsight",
        "apiReference": ""
      }
    }
  },
  "557e06255de7": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/insights/$count",
    "methods": {}
  },
  "19583b26ed60": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionInstance",
        "apiReference": ""
      }
    }
  },
  "5968b5b165ef": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers",
    "methods": {}
  },
  "0671fe5cd620": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers/{accessReviewReviewer-id}",
    "methods": {}
  },
  "9ec825dff9e2": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/contactedReviewers/$count",
    "methods": {}
  },
  "77a9de6eaa85": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions",
    "methods": {}
  },
  "9d9f2e9640c7": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/{accessReviewInstanceDecisionItem-id1}",
    "methods": {}
  },
  "2295f0b35a07": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/{accessReviewInstanceDecisionItem-id1}/insights",
    "methods": {}
  },
  "a4d661b1b6bc": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/{accessReviewInstanceDecisionItem-id1}/insights/{governanceInsight-id}",
    "methods": {}
  },
  "f673d0afeec9": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/{accessReviewInstanceDecisionItem-id1}/insights/$count",
    "methods": {}
  },
  "97fdd02d3ed1": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/$count",
    "methods": {}
  },
  "60f678ce4650": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "341c2accc6ad": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/decisions/microsoft.graph.recordAllDecisions",
    "methods": {}
  },
  "1c28c5a4118d": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/definition",
    "methods": {}
  },
  "bcbb9ee6a948": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.acceptRecommendations",
    "methods": {}
  },
  "f8fd73693e4e": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.applyDecisions",
    "methods": {}
  },
  "0f1536db343f": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.batchRecordDecisions",
    "methods": {}
  },
  "d3180851b0ff": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.resetDecisions",
    "methods": {}
  },
  "1e699787a9b5": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.sendReminder",
    "methods": {}
  },
  "4fcee2374999": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.stop",
    "methods": {}
  },
  "d4d64407fd56": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/{accessReviewInstanceDecisionItem-id}/instance/microsoft.graph.stopApplyDecisions",
    "methods": {}
  },
  "af05fd338a7c": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageDecisionCount",
        "apiReference": ""
      }
    }
  },
  "9aaf6e82edd6": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "d1dafef24140": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/decisions/microsoft.graph.recordAllDecisions",
    "methods": {}
  },
  "cece4a6489d2": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/{accessReviewStage-id}/microsoft.graph.stop",
    "methods": {}
  },
  "b2e4c35cd43b": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceStageCount",
        "apiReference": ""
      }
    }
  },
  "83a338a0df35": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/{accessReviewInstance-id}/stages/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "133ddbe2bf28": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionInstanceCount",
        "apiReference": ""
      }
    }
  },
  "d3dade1851bf": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/instances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "a6eb370d4ab9": {
    "path": "/identityGovernance/accessReviews/definitions/{accessReviewScheduleDefinition-id}/microsoft.graph.stop",
    "methods": {}
  },
  "f329eb4000a6": {
    "path": "/identityGovernance/accessReviews/definitions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AccessReview.Read.All",
            "IsAdmin": false,
            "Description": "Read all access reviews",
            "FullDescription": "Allows the app to read access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "AccessReview.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all access reviews",
            "FullDescription": "Allows the app to read, update, delete and perform actions on access reviews, reviewers, decisions and settings in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "741b6e8285a7": {
    "path": "/identityGovernance/accessReviews/definitions/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "1eb76fe6c582": {
    "path": "/identityGovernance/accessReviews/historyDefinitions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewHistoryDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewset-list-historydefinitions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewHistoryDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewset-post-historydefinitions?view=graph-rest-beta"
      }
    }
  },
  "134468bc34d9": {
    "path": "/identityGovernance/accessReviews/historyDefinitions/{accessReviewHistoryDefinition-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewHistoryDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewhistorydefinition-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewHistoryDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewHistoryDefinition",
        "apiReference": ""
      }
    }
  },
  "ed22d684f642": {
    "path": "/identityGovernance/accessReviews/historyDefinitions/{accessReviewHistoryDefinition-id}/instances",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewHistoryDefinitionInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewhistorydefinition-list-instances?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAccessReviewHistoryDefinitionInstance",
        "apiReference": ""
      }
    }
  },
  "9fe94dcde847": {
    "path": "/identityGovernance/accessReviews/historyDefinitions/{accessReviewHistoryDefinition-id}/instances/{accessReviewHistoryInstance-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewHistoryDefinitionInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewHistoryDefinitionInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewHistoryDefinitionInstance",
        "apiReference": ""
      }
    }
  },
  "7f7843863470": {
    "path": "/identityGovernance/accessReviews/historyDefinitions/{accessReviewHistoryDefinition-id}/instances/{accessReviewHistoryInstance-id}/microsoft.graph.generateDownloadUri",
    "methods": {}
  },
  "ae8cc7a5d3bf": {
    "path": "/identityGovernance/accessReviews/historyDefinitions/{accessReviewHistoryDefinition-id}/instances/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewHistoryDefinitionInstanceCount",
        "apiReference": ""
      }
    }
  },
  "1d1766e53a21": {
    "path": "/identityGovernance/accessReviews/historyDefinitions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewHistoryDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "3f389747e8fb": {
    "path": "/identityGovernance/accessReviews/policy",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Policy.Read.All",
            "IsAdmin": false,
            "Description": "Read your organization's policies",
            "FullDescription": "Allows the app to read all your organization's policies without a signed in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Policy.ReadWrite.AccessReview",
            "IsAdmin": false,
            "Description": "Read and write your organization's directory access review default policy",
            "FullDescription": "Allows the app to read and write your organization's directory access review default policy without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAccessReviewPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewpolicy-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAccessReviewPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/accessreviewpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAccessReviewPolicy",
        "apiReference": ""
      }
    }
  },
  "6b6a27d462ee": {
    "path": "/identityGovernance/appConsent",
    "methods": {}
  },
  "3ea7c078a7b8": {
    "path": "/identityGovernance/appConsent/appConsentRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ConsentRequest.Read.All",
            "IsAdmin": false,
            "Description": "Read all consent requests",
            "FullDescription": "Allows the app to read consent requests and approvals without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ConsentRequest.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all consent requests",
            "FullDescription": "Allows the app to read app consent requests and approvals, and deny or approve those requests without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/appconsentapprovalroute-list-appconsentrequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAppConsentRequest",
        "apiReference": ""
      }
    }
  },
  "a6bb13fb3aec": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ConsentRequest.Read.All",
            "IsAdmin": false,
            "Description": "Read all consent requests",
            "FullDescription": "Allows the app to read consent requests and approvals without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ConsentRequest.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all consent requests",
            "FullDescription": "Allows the app to read app consent requests and approvals, and deny or approve those requests without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/appconsentrequest-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAppConsentRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAppConsentRequest",
        "apiReference": ""
      }
    }
  },
  "c2573406369c": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}/userConsentRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ConsentRequest.Read.All",
            "IsAdmin": false,
            "Description": "Read all consent requests",
            "FullDescription": "Allows the app to read consent requests and approvals without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ConsentRequest.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all consent requests",
            "FullDescription": "Allows the app to read app consent requests and approvals, and deny or approve those requests without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/appconsentrequest-list-userconsentrequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequest",
        "apiReference": ""
      }
    }
  },
  "d43397286d01": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}/userConsentRequests/{userConsentRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ConsentRequest.Read.All",
            "IsAdmin": false,
            "Description": "Read all consent requests",
            "FullDescription": "Allows the app to read consent requests and approvals without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ConsentRequest.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all consent requests",
            "FullDescription": "Allows the app to read app consent requests and approvals, and deny or approve those requests without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/userconsentrequest-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequest",
        "apiReference": ""
      }
    }
  },
  "ca217ddbd7d6": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}/userConsentRequests/{userConsentRequest-id}/approval",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApproval",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApproval",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApproval",
        "apiReference": ""
      }
    }
  },
  "264e930457a2": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}/userConsentRequests/{userConsentRequest-id}/approval/steps",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApprovalStep",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApprovalStep",
        "apiReference": ""
      }
    }
  },
  "def8d375b0b5": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}/userConsentRequests/{userConsentRequest-id}/approval/steps/{approvalStep-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApprovalStep",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApprovalStep",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApprovalStep",
        "apiReference": ""
      }
    }
  },
  "1b903b9daa6e": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}/userConsentRequests/{userConsentRequest-id}/approval/steps/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestApprovalStepCount",
        "apiReference": ""
      }
    }
  },
  "7387d31de22e": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}/userConsentRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ConsentRequest.Read.All",
            "IsAdmin": false,
            "Description": "Read all consent requests",
            "FullDescription": "Allows the app to read consent requests and approvals without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ConsentRequest.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all consent requests",
            "FullDescription": "Allows the app to read app consent requests and approvals, and deny or approve those requests without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequestUserConsentRequestCount",
        "apiReference": ""
      }
    }
  },
  "19f7de9611bb": {
    "path": "/identityGovernance/appConsent/appConsentRequests/{appConsentRequest-id}/userConsentRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "cf46dfe89cfd": {
    "path": "/identityGovernance/appConsent/appConsentRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ConsentRequest.Read.All",
            "IsAdmin": false,
            "Description": "Read all consent requests",
            "FullDescription": "Allows the app to read consent requests and approvals without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ConsentRequest.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all consent requests",
            "FullDescription": "Allows the app to read app consent requests and approvals, and deny or approve those requests without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceAppConsentRequestCount",
        "apiReference": ""
      }
    }
  },
  "5bc70edad527": {
    "path": "/identityGovernance/appConsent/appConsentRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "98d6beb54536": {
    "path": "/identityGovernance/entitlementManagement",
    "methods": {}
  },
  "57801fbb758a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentApprovals",
    "methods": {}
  },
  "b2bf6134add2": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentApprovals/{approval-id}",
    "methods": {
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageAssignmentApproval",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "3a3381f52cc8": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentApprovals/{approval-id}/steps",
    "methods": {}
  },
  "2ffa8c8f9bbd": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentApprovals/{approval-id}/steps/{approvalStep-id}",
    "methods": {
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageAssignmentApprovalStep",
        "apiReference": "https://learn.microsoft.com/graph/api/approvalstep-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "c08200572e40": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentApprovals/{approval-id}/steps/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write entitlement management resources",
            "FullDescription": "Allows the app to request access to and management of access packages and related entitlement management resources that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentApprovalStepCount",
        "apiReference": ""
      }
    }
  },
  "38afea2dafb6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentApprovals/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentApprovalCount",
        "apiReference": ""
      }
    }
  },
  "4bdf901e3970": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentApprovals/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "1030ee2cb3a9": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-accesspackageassignmentpolicies?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageAssignmentPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-post-accesspackageassignmentpolicies?view=graph-rest-beta"
      }
    }
  },
  "dd7f0d9d96a0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentpolicy-get?view=graph-rest-beta"
      },
      "put": {
        "permissions": [],
        "command": "Set-MgBetaEntitlementManagementAccessPackageAssignmentPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentpolicy-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageAssignmentPolicy",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentpolicy-delete?view=graph-rest-beta"
      }
    }
  },
  "3d02eedf1587": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/accessPackage",
    "methods": {}
  },
  "c1e7296be709": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/accessPackageCatalog",
    "methods": {}
  },
  "0320cf5f22f9": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionHandler",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionHandler",
        "apiReference": ""
      }
    }
  },
  "097152571548": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/{customExtensionHandler-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionHandler",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionHandler",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionHandler",
        "apiReference": ""
      }
    }
  },
  "80a0214da214": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/{customExtensionHandler-id}/customExtension",
    "methods": {}
  },
  "fdc6148b524f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/$count",
    "methods": {}
  },
  "5f047769a849": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionStageSetting",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionStageSetting",
        "apiReference": ""
      }
    }
  },
  "8d3edf89be16": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/{customExtensionStageSetting-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionStageSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionStageSetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCustomExtensionStageSetting",
        "apiReference": ""
      }
    }
  },
  "d5ea18c0f686": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/{customExtensionStageSetting-id}/customExtension",
    "methods": {}
  },
  "4c4db2fc6d11": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/$count",
    "methods": {}
  },
  "ccf24bd19b86": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentPolicies/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentPolicyCount",
        "apiReference": ""
      }
    }
  },
  "581d6c70e691": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-accesspackageassignmentrequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageAssignmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-post-accesspackageassignmentrequests?view=graph-rest-beta"
      }
    }
  },
  "102317f89f96": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentrequest-get?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageAssignmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentrequest-delete?view=graph-rest-beta"
      }
    }
  },
  "5e38b4e267af": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/accessPackage",
    "methods": {}
  },
  "543a0e020b79": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/accessPackageAssignment",
    "methods": {}
  },
  "a9a35e752619": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "a9baf079e352": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.reprocess",
    "methods": {}
  },
  "72348f969d32": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.resume",
    "methods": {}
  },
  "8e5eeb406a16": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/requestor",
    "methods": {}
  },
  "0449b74702b8": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/requestor/connectedOrganization",
    "methods": {}
  },
  "837ab4f19588": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentRequestCount",
        "apiReference": ""
      }
    }
  },
  "e1db945891b8": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "c620818826f4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentResourceRole",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-accesspackageassignmentresourceroles?view=graph-rest-beta"
      }
    }
  },
  "d99d1938c586": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentResourceRole",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentresourcerole-get?view=graph-rest-beta"
      }
    }
  },
  "3f352d7a2be0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageAssignments",
    "methods": {}
  },
  "9e4a55cf026f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageAssignments/{accessPackageAssignment-id}",
    "methods": {}
  },
  "478d759252ca": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageAssignments/$count",
    "methods": {}
  },
  "43b3591c0866": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole",
    "methods": {}
  },
  "49063ecc5f9b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource",
    "methods": {}
  },
  "6bda3030312c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "3e211e560200": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "7ae5e56cdbfd": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "5b6ac763de43": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "071bc2a1c05b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "05e5dd0bdea3": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "48904366fd58": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "93dafe13f94f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "09c160627baf": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "e850d461aa2f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "7438dc5fe9dc": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "eeed3bb48eb5": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "bdcd92ae06f4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "5f2c631c6937": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "ed832ec06bea": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope",
    "methods": {}
  },
  "68455b355777": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource",
    "methods": {}
  },
  "236e29ebb170": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "8f67f6daf43c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "2753e560c259": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "6ef9f2cddcfe": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "eb832bd61b7c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "1f0694ec65a4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "a5f8ca64a254": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "8a3a85b7b146": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "00aac8e606a8": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "98086f5e32f0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "e6208f5cdcf5": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "cf84847c9ec6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "fe0d035f2d9f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "e0dce6ec624e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "9593bcc24f01": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageSubject",
    "methods": {}
  },
  "885edd8a6285": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageSubject/connectedOrganization",
    "methods": {}
  },
  "376ebdf0a939": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentResourceRoleCount",
        "apiReference": ""
      }
    }
  },
  "fc5d2a514a53": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignmentResourceRoles/microsoft.graph.My()",
    "methods": {}
  },
  "1c32c3aba701": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-accesspackageassignments?view=graph-rest-beta"
      }
    }
  },
  "727139a173aa": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageAssignment",
        "apiReference": ""
      }
    }
  },
  "b297497b34e1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage",
    "methods": {}
  },
  "13cdee81d19a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies",
    "methods": {}
  },
  "f0f976ac59c4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}",
    "methods": {}
  },
  "35139f29891e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/accessPackage",
    "methods": {}
  },
  "9e01e289c5a4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/accessPackageCatalog",
    "methods": {}
  },
  "f57cbf27d5be": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers",
    "methods": {}
  },
  "2f0c141cb591": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/{customExtensionHandler-id}",
    "methods": {}
  },
  "32564928f129": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/{customExtensionHandler-id}/customExtension",
    "methods": {}
  },
  "b5ed190ea567": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/$count",
    "methods": {}
  },
  "6a4913f051cf": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings",
    "methods": {}
  },
  "226ef0a49637": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/{customExtensionStageSetting-id}",
    "methods": {}
  },
  "52943c0ea1ef": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/{customExtensionStageSetting-id}/customExtension",
    "methods": {}
  },
  "eb7e2d40b81a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/$count",
    "methods": {}
  },
  "286ad2aa09fa": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageAssignmentPolicies/$count",
    "methods": {}
  },
  "566ded204347": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageCatalog",
    "methods": {}
  },
  "e4c7a103b989": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes",
    "methods": {}
  },
  "f252c28e7289": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}",
    "methods": {}
  },
  "9fa03727cf19": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole",
    "methods": {}
  },
  "f362ff8dc7e3": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource",
    "methods": {}
  },
  "e64333d2ce15": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "10958bb0c9ee": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "4eadaca4ca45": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "64ea3aa9f4cc": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "c7bc470e2a63": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "39788c6c3f57": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "a3dc7656ea2d": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "f2f6d7ddd329": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "982b7d1c58fd": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "cddffc8c4be4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "7b875d10438b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "98d3226b42fe": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "f71f290f7c4b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "b10c314f147b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "61a5819befd6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope",
    "methods": {}
  },
  "3bc6cdaa37dd": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource",
    "methods": {}
  },
  "016a1b14b0d6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "c6b9d6a48158": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "c1b7dab5c2ab": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "99801a56887f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "18647941bf48": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "d1a248695604": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "63833614954f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "daefa7c1f431": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "5e135e4d6717": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "6b80b53f2c2e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "a52eb1f2280c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "cb6b6bbc88b1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "4168b60c742e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "e32a0179cd73": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "18cb5ddb2ead": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackageResourceRoleScopes/$count",
    "methods": {}
  },
  "da64bf3a13e5": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackagesIncompatibleWith",
    "methods": {}
  },
  "dc3c6fd5bd5e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackagesIncompatibleWith/{accessPackage-id}",
    "methods": {}
  },
  "3b7696b84876": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackagesIncompatibleWith(uniqueName='{uniqueName}')",
    "methods": {}
  },
  "f1e22a4f1c35": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/accessPackagesIncompatibleWith/$count",
    "methods": {}
  },
  "204aaa85391c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleAccessPackages",
    "methods": {}
  },
  "4741fffd842a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleAccessPackages/{accessPackage-id}/$ref",
    "methods": {}
  },
  "4a1383a0dc07": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleAccessPackages/$count",
    "methods": {}
  },
  "1fd8adceb8c4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleAccessPackages/$ref",
    "methods": {}
  },
  "5430bd11b3fa": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleGroups",
    "methods": {}
  },
  "5ab0b433f871": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleGroups/{group-id}/$ref",
    "methods": {}
  },
  "e8690e446ffb": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleGroups/{group-id}/serviceProvisioningErrors",
    "methods": {}
  },
  "a7f3c756a51a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleGroups/{group-id}/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "cdfe8274940c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleGroups/$count",
    "methods": {}
  },
  "97c1b3def344": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/incompatibleGroups/$ref",
    "methods": {}
  },
  "c261a5dcbaad": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/microsoft.graph.getApplicablePolicyRequirements",
    "methods": {}
  },
  "a28a8418e0b2": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackage/microsoft.graph.moveToCatalog",
    "methods": {}
  },
  "27651b7097da": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy",
    "methods": {}
  },
  "d537076cfa1f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/accessPackage",
    "methods": {}
  },
  "e5416134f978": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/accessPackageCatalog",
    "methods": {}
  },
  "c3f1b6df69d2": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/customExtensionHandlers",
    "methods": {}
  },
  "e4b651a5d8de": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/customExtensionHandlers/{customExtensionHandler-id}",
    "methods": {}
  },
  "0af4b069d70b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/customExtensionHandlers/{customExtensionHandler-id}/customExtension",
    "methods": {}
  },
  "8b0418f91e1f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/customExtensionHandlers/$count",
    "methods": {}
  },
  "048bbf0ee810": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/customExtensionStageSettings",
    "methods": {}
  },
  "13cfb03db430": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/customExtensionStageSettings/{customExtensionStageSetting-id}",
    "methods": {}
  },
  "fe09322c2036": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/customExtensionStageSettings/{customExtensionStageSetting-id}/customExtension",
    "methods": {}
  },
  "69b8fb142590": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentPolicy/customExtensionStageSettings/$count",
    "methods": {}
  },
  "8d1585320e6e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests",
    "methods": {}
  },
  "777c5f0cc819": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}",
    "methods": {}
  },
  "561b03ecfa99": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/accessPackage",
    "methods": {}
  },
  "45770c949a0b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/accessPackageAssignment",
    "methods": {}
  },
  "6c15ff93b968": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "57954421427c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.reprocess",
    "methods": {}
  },
  "fec2bf72f6a0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.resume",
    "methods": {}
  },
  "b3864dbd08f3": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/requestor",
    "methods": {}
  },
  "3d28c24d9298": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/{accessPackageAssignmentRequest-id}/requestor/connectedOrganization",
    "methods": {}
  },
  "fbab97b2de67": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/$count",
    "methods": {}
  },
  "324dc9f55eb5": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "56caa56ca20f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles",
    "methods": {}
  },
  "0c9a687841eb": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}",
    "methods": {}
  },
  "18b1ed325485": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageAssignments",
    "methods": {}
  },
  "2f680ea17b1c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageAssignments/{accessPackageAssignment-id1}",
    "methods": {}
  },
  "012c317c3546": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageAssignments/$count",
    "methods": {}
  },
  "83df51fae486": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole",
    "methods": {}
  },
  "507af5da5287": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource",
    "methods": {}
  },
  "856a9cefa896": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "dce8045235e8": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "0a57a51006be": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "f0a3f249ef56": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "c64b3f195bf0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "924debf76259": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "bbe3d1e16d07": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "98a94d825c75": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "287676925bb1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "18598570ab9a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "3e66949bdc62": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "1adbf3158d75": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "7a3728acd727": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "deb0ff5b0937": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceRole/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "ccc7b5d595f5": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope",
    "methods": {}
  },
  "9e9cc58c4bfa": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource",
    "methods": {}
  },
  "cb67e9a14bd3": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "deb24f013a82": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "2c85726861fc": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "7f050f35f592": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "a7edbda3bc4c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "f331cc071eb4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "fe268b53126b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "1258f7ab815a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "04a9af9266f1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "bc85eb249e2d": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "7bda0b48a800": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "73b40dc25a2c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "dabf31d87f99": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "823745725e35": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageResourceScope/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "e6988a566e52": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageSubject",
    "methods": {}
  },
  "7aa92cccf768": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/{accessPackageAssignmentResourceRole-id}/accessPackageSubject/connectedOrganization",
    "methods": {}
  },
  "6a1d1b32a882": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/$count",
    "methods": {}
  },
  "72841f91da7f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/accessPackageAssignmentResourceRoles/microsoft.graph.My()",
    "methods": {}
  },
  "0d35817483d1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/microsoft.graph.reprocess",
    "methods": {}
  },
  "3c4e6fe6057f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/target",
    "methods": {}
  },
  "a708adf94d5e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/{accessPackageAssignment-id}/target/connectedOrganization",
    "methods": {}
  },
  "fd57825a6d5a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "44a7db94e1bf": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/microsoft.graph.additionalAccess()",
    "methods": {}
  },
  "3bce84912419": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/microsoft.graph.additionalAccess(accessPackageId='{accessPackageId}',incompatibleAccessPackageId='{incompatibleAccessPackageId}')",
    "methods": {}
  },
  "e3bff7254c8a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageAssignments/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "f453bd58be20": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalog",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-accesspackagecatalogs?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageCatalog",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-post-accesspackagecatalogs?view=graph-rest-beta"
      }
    }
  },
  "152240d8d345": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalog",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageCatalog",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageCatalog",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-delete?view=graph-rest-beta"
      }
    }
  },
  "4c8065f8a0a9": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageCustomWorkflowExtensions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogAccessPackageCustomWorkflowExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-list-accesspackagecustomworkflowextensions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaEntitlementManagementAccessPackageCatalogAccessPackageCustomWorkflowExtension",
        "apiReference": ""
      }
    }
  },
  "7489d6ba28af": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageCustomWorkflowExtensions/{customCalloutExtension-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogAccessPackageCustomWorkflowExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentworkflowextension-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageCatalogAccessPackageCustomWorkflowExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentrequestworkflowextension-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageCatalogAccessPackageCustomWorkflowExtension",
        "apiReference": ""
      }
    }
  },
  "268ce445b798": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageCustomWorkflowExtensions/$count",
    "methods": {}
  },
  "1949abfc7e96": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogAccessPackageResourceRole",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-list-accesspackageresourceroles?view=graph-rest-beta"
      }
    }
  },
  "92584d1d2988": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "344fe1e68b70": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "c5c806b4ab83": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "d6c48e2b0aba": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "61cf7fd4b0a8": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id1}",
    "methods": {}
  },
  "77e9471a560f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "b74909dcfd64": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "48b6a92dcc82": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "961b3f44fa04": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "89d117674504": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "b4e54658ccc1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "f37c4ef1316a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id1}",
    "methods": {}
  },
  "3a721d6f1894": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "e8f4c86a6490": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "aed6a6ab65c0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "3c209a299da8": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "181f86545927": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "4c91c7839d45": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogAccessPackageResource",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-list-accesspackageresources?view=graph-rest-beta"
      }
    }
  },
  "ea23da117ea7": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}",
    "methods": {}
  },
  "e46f3ff3a265": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceEnvironment",
    "methods": {}
  },
  "e7d6d1d307fe": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles",
    "methods": {}
  },
  "b3330794e6de": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "844112549514": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "390ae88b1734": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "bc8699a8556b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "78e16668326b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "fb779f31c330": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "a8da261db52f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "da6a6daec111": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "879f5d645ebc": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "24b122d95038": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "e93deeb41297": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "d9b6b2591caf": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes",
    "methods": {}
  },
  "ebb713156f88": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "cebfe72972cc": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "ce888fcdba67": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "00dc5eef94f7": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "4e2fd197047e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "3b403480a081": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "17337411f963": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "9ee1f059f85e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "425298f1db94": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "8bc85b111e55": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "ebaa02409f57": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "f13493015e28": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/{accessPackageResource-id}/microsoft.graph.refresh",
    "methods": {}
  },
  "3fbfd8702862": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResources/$count",
    "methods": {}
  },
  "a7e187dc481f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogAccessPackageResourceScope",
        "apiReference": ""
      }
    }
  },
  "28c75492eaa4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "15d36bd07f26": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "93c827866728": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "97a341f20650": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "5a253d96b12e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "f17ed39e6c07": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "ad01fe24ee76": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "3cac50ae8d2c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "afb964967cc6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id1}",
    "methods": {}
  },
  "1487c53c4be6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "c1a0e5540c30": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "b254a0f0c34e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "ca7f95a3a3ed": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "9023b600c227": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id1}",
    "methods": {}
  },
  "db72e397bbc5": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "6809ab737485": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "79d898e81434": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "556ecae8c02d": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackages",
    "methods": {}
  },
  "52554cacd95b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackages/{accessPackage-id}",
    "methods": {}
  },
  "fa20723a1f3d": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackages(uniqueName='{uniqueName}')",
    "methods": {}
  },
  "8b508a657e14": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/accessPackages/$count",
    "methods": {}
  },
  "c9369e2d5184": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/customAccessPackageWorkflowExtensions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogCustomAccessPackageWorkflowExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-list-customaccesspackageworkflowextensions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageCatalogCustomAccessPackageWorkflowExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-post-customaccesspackageworkflowextensions?view=graph-rest-beta"
      }
    }
  },
  "ca30060d93d1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/customAccessPackageWorkflowExtensions/{customAccessPackageWorkflowExtension-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogCustomAccessPackageWorkflowExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/customaccesspackageworkflowextension-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageCatalogCustomAccessPackageWorkflowExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/customaccesspackageworkflowextension-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageCatalogCustomAccessPackageWorkflowExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageassignmentrequestworkflowextension-delete?view=graph-rest-beta"
      }
    }
  },
  "789e88870ec7": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/{accessPackageCatalog-id}/customAccessPackageWorkflowExtensions/$count",
    "methods": {}
  },
  "66cb1139a3b6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs(uniqueName='{uniqueName}')",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogByUniqueName",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageCatalogByUniqueName",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageCatalogByUniqueName",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagecatalog-delete?view=graph-rest-beta"
      }
    }
  },
  "8116e2072c37": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCatalogCount",
        "apiReference": ""
      }
    }
  },
  "de91ad85a3c6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageCatalogs/microsoft.graph.Search()",
    "methods": {}
  },
  "14b0fa7135f5": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceEnvironments",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResourceEnvironment",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-accesspackageresourceenvironment?view=graph-rest-beta"
      }
    }
  },
  "57aaf583bca7": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceEnvironments/{accessPackageResourceEnvironment-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResourceEnvironment",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackageresourceenvironment-get?view=graph-rest-beta"
      }
    }
  },
  "dad4530a6544": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceEnvironments/{accessPackageResourceEnvironment-id}/accessPackageResources",
    "methods": {}
  },
  "8e77c96ef469": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceEnvironments/{accessPackageResourceEnvironment-id}/accessPackageResources/{accessPackageResource-id}",
    "methods": {}
  },
  "39c1fa1089f0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceEnvironments/{accessPackageResourceEnvironment-id}/accessPackageResources/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResourceEnvironmentAccessPackageResourceCount",
        "apiReference": ""
      }
    }
  },
  "1cb3579fc4d1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceEnvironments/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResourceEnvironmentCount",
        "apiReference": ""
      }
    }
  },
  "90ac0733bb85": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResourceRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-accesspackageresourcerequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageResourceRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-post-accesspackageresourcerequests?view=graph-rest-beta"
      }
    }
  },
  "04c869ca4b62": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRequests/{accessPackageResourceRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResourceRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageResourceRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageResourceRequest",
        "apiReference": ""
      }
    }
  },
  "ffa862dc2db0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRequests/{accessPackageResourceRequest-id}/accessPackageResource",
    "methods": {}
  },
  "2054d92b2ce3": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRequests/{accessPackageResourceRequest-id}/requestor",
    "methods": {}
  },
  "b420018cc252": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRequests/{accessPackageResourceRequest-id}/requestor/connectedOrganization",
    "methods": {}
  },
  "57e26f75b6ca": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResourceRequestCount",
        "apiReference": ""
      }
    }
  },
  "63c2b3dcaa7a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes",
    "methods": {}
  },
  "e9f23aced10f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}",
    "methods": {}
  },
  "2f33125ca74a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole",
    "methods": {}
  },
  "50a87836599d": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource",
    "methods": {}
  },
  "9fa538e6f533": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "b19777f05501": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "ebf9d8fac568": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "f122e24eb352": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "d7d8d5fadc79": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "5f664772d204": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "c9154f048fb6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "4f440d2d9d43": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "9dffdc539e7f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "5ad03e1d78ff": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "a49cac491bd4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "c21abacdedb7": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "5da3ddb8b043": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "83765fdb64f1": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "1d7e49723882": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope",
    "methods": {}
  },
  "8e918e790dfb": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource",
    "methods": {}
  },
  "01f859cc6f86": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "a5f16c681e1e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "b5f142d5e7ba": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "9bac62a60465": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "31b0db31bd8d": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "7f7d85938487": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "258eb614bc94": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "3a2349651f50": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "233ffb516e2e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "2d479a0a60a4": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "0915b0f66d29": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "2d0aa74ca22b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "a2b44cbcb020": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "11ee5da8f214": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "b9a97d4f8b6f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResourceRoleScopes/$count",
    "methods": {}
  },
  "eb3062a51ce6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResource",
        "apiReference": ""
      }
    }
  },
  "123c52edcd10": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResource",
        "apiReference": ""
      }
    }
  },
  "fa7779e95eba": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceEnvironment",
    "methods": {}
  },
  "491480a61898": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles",
    "methods": {}
  },
  "bc3fa84e05bf": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "cd5b5d470084": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "847519366f14": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "0d3c2bef42c3": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "6095704dca85": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "93edbebd358b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "c9a19825b9c8": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "06cba70dffb7": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "fa380117b300": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "7c9687a1e6bd": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "136ef230501f": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "6ab06648ae0e": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes",
    "methods": {}
  },
  "3bca04644072": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "2681bb2f8d39": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "86512871d49a": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "05dcec616d78": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "daef0d8a3195": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "0aadd82affd2": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "5829393789b6": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "5555e15acb5b": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "dec587a87152": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "786d05f377f9": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "a4ee30a75c14": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "eb499694887c": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/{accessPackageResource-id}/microsoft.graph.refresh",
    "methods": {}
  },
  "990bd0b02cb0": {
    "path": "/identityGovernance/entitlementManagement/accessPackageResources/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageResourceCount",
        "apiReference": ""
      }
    }
  },
  "1b3d2624fd77": {
    "path": "/identityGovernance/entitlementManagement/accessPackages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackage",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-accesspackages?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackage",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-post-accesspackages?view=graph-rest-beta"
      }
    }
  },
  "0c39251e82c8": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackage",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-list-accesspackageresourcerolescopes?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackage",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackage",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-delete?view=graph-rest-beta"
      }
    }
  },
  "7a5a66e848bf": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies",
    "methods": {}
  },
  "0ea0066ded82": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}",
    "methods": {
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageAssignmentPolicy",
        "apiReference": ""
      }
    }
  },
  "7f69b2d803a8": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/accessPackage",
    "methods": {}
  },
  "299edcffef15": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/accessPackageCatalog",
    "methods": {}
  },
  "97cbcafb77fb": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers",
    "methods": {}
  },
  "1d24f487ef22": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/{customExtensionHandler-id}",
    "methods": {}
  },
  "3850f159a780": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/{customExtensionHandler-id}/customExtension",
    "methods": {}
  },
  "ccc8212f2029": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionHandlers/$count",
    "methods": {}
  },
  "f1f4969362a2": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings",
    "methods": {}
  },
  "bae8a80ef947": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/{customExtensionStageSetting-id}",
    "methods": {}
  },
  "dea80afce6d7": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/{customExtensionStageSetting-id}/customExtension",
    "methods": {}
  },
  "2164b01cc429": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/{accessPackageAssignmentPolicy-id}/customExtensionStageSettings/$count",
    "methods": {}
  },
  "969a20183b7a": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageAssignmentPolicies/$count",
    "methods": {}
  },
  "64818665afb4": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageCatalog",
    "methods": {}
  },
  "0848468af5ee": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes",
    "methods": {
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageResourceRoleScope",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-post-accesspackageresourcerolescopes?view=graph-rest-beta"
      }
    }
  },
  "28de7ed41c01": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}",
    "methods": {
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageResourceRoleScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageResourceRoleScope",
        "apiReference": ""
      }
    }
  },
  "0ce1cf7e9983": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole",
    "methods": {}
  },
  "22fae1a96e47": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource",
    "methods": {}
  },
  "922143c28b8f": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "fe30a027ca29": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "6cc557f5d5fb": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "c63c675827bb": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "bcbfab2a7324": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "cbe5f24b72c6": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "fd29247855aa": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource",
    "methods": {}
  },
  "a7acb80fd526": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "e4f914081581": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "4ba88feca55b": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "71347d2437cb": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "6d2a19243203": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "679f36ec92bc": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "187ddc870a93": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceRole/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "ac6bbe5b2347": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope",
    "methods": {}
  },
  "df745cbdf673": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource",
    "methods": {}
  },
  "f519a9349c7d": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "a477792608ee": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles",
    "methods": {}
  },
  "c9f6ddc6a961": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}",
    "methods": {}
  },
  "3d20132c7f44": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource",
    "methods": {}
  },
  "e629a777e16c": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceEnvironment",
    "methods": {}
  },
  "230747b722af": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "c9d9359169a8": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "216e69cb959c": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "4ebf24d6c2de": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/{accessPackageResourceRole-id}/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "9638637f59b0": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceRoles/$count",
    "methods": {}
  },
  "76bd0575d449": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes",
    "methods": {}
  },
  "e8d0cf677596": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/{accessPackageResourceScope-id}",
    "methods": {}
  },
  "a237078f0e6b": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/accessPackageResourceScopes/$count",
    "methods": {}
  },
  "1c8e5a06e11a": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/{accessPackageResourceRoleScope-id}/accessPackageResourceScope/accessPackageResource/microsoft.graph.refresh",
    "methods": {}
  },
  "24542be84030": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackageResourceRoleScopes/$count",
    "methods": {}
  },
  "74c931319908": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackagesIncompatibleWith",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageIncompatibleWith",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-list-accesspackagesincompatiblewith?view=graph-rest-beta"
      }
    }
  },
  "0d647a3c9503": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackagesIncompatibleWith/{accessPackage-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAccessPackageIncompatibleWith",
        "apiReference": ""
      }
    }
  },
  "79933f4e3220": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackagesIncompatibleWith(uniqueName='{uniqueName}')",
    "methods": {}
  },
  "95db158535f3": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/accessPackagesIncompatibleWith/$count",
    "methods": {}
  },
  "a55b0a909000": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleAccessPackages",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageIncompatibleAccessPackage",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-list-incompatibleaccesspackages?view=graph-rest-beta"
      }
    }
  },
  "498f9bbc4d65": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleAccessPackages/{accessPackage-id1}/$ref",
    "methods": {}
  },
  "15e07f3f6b44": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleAccessPackages/$count",
    "methods": {}
  },
  "69d12b1634bf": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleAccessPackages/$ref",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageIncompatibleAccessPackageByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-list-incompatibleaccesspackages?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageIncompatibleAccessPackageByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-post-incompatibleaccesspackage?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageIncompatibleAccessPackageByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-delete-incompatibleaccesspackage?view=graph-rest-beta"
      }
    }
  },
  "ee1f4956f416": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleGroups",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageIncompatibleGroup",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-list-incompatiblegroups?view=graph-rest-beta"
      }
    }
  },
  "ddf3a0362b41": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleGroups/{group-id}/$ref",
    "methods": {}
  },
  "7b52c7900ff7": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleGroups/{group-id}/serviceProvisioningErrors",
    "methods": {}
  },
  "b091130b0b47": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleGroups/{group-id}/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "1cd17ed4f413": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleGroups/$count",
    "methods": {}
  },
  "5b92365d3863": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/incompatibleGroups/$ref",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageIncompatibleGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-list-incompatiblegroups?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAccessPackageIncompatibleGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-post-incompatiblegroup?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageIncompatibleGroupByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-delete-incompatiblegroup?view=graph-rest-beta"
      }
    }
  },
  "fd96b9a067a2": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/microsoft.graph.getApplicablePolicyRequirements",
    "methods": {}
  },
  "6472ab153419": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/{accessPackage-id}/microsoft.graph.moveToCatalog",
    "methods": {}
  },
  "8b3815bf362c": {
    "path": "/identityGovernance/entitlementManagement/accessPackages(uniqueName='{uniqueName}')",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageByUniqueName",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-list-accesspackageresourcerolescopes?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementAccessPackageByUniqueName",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAccessPackageByUniqueName",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackage-delete?view=graph-rest-beta"
      }
    }
  },
  "898a4e6e1096": {
    "path": "/identityGovernance/entitlementManagement/accessPackages(uniqueName='{uniqueName}')/microsoft.graph.getApplicablePolicyRequirements",
    "methods": {}
  },
  "1b8263b6a97a": {
    "path": "/identityGovernance/entitlementManagement/accessPackages(uniqueName='{uniqueName}')/microsoft.graph.moveToCatalog",
    "methods": {}
  },
  "a94f9b4c2baf": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAccessPackageCount",
        "apiReference": ""
      }
    }
  },
  "888a426d96ca": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "506bc868df46": {
    "path": "/identityGovernance/entitlementManagement/accessPackages/microsoft.graph.Search()",
    "methods": {}
  },
  "0d437874ca75": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAssignmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-assignmentrequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementAssignmentRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-post-assignmentrequests?view=graph-rest-beta"
      }
    }
  },
  "7ac17a7ff9c5": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/{accessPackageAssignmentRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAssignmentRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementAssignmentRequest",
        "apiReference": ""
      }
    }
  },
  "7158917ea2fd": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/{accessPackageAssignmentRequest-id}/accessPackage",
    "methods": {}
  },
  "ab0b4c3aad88": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/{accessPackageAssignmentRequest-id}/accessPackageAssignment",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAssignmentRequestAccessPackageAssignment",
        "apiReference": ""
      }
    }
  },
  "09cb39b69679": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "242422dfd416": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.reprocess",
    "methods": {}
  },
  "eb1ce4337028": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/{accessPackageAssignmentRequest-id}/microsoft.graph.resume",
    "methods": {}
  },
  "de57fd27b21f": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/{accessPackageAssignmentRequest-id}/requestor",
    "methods": {}
  },
  "49d1486ae45e": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/{accessPackageAssignmentRequest-id}/requestor/connectedOrganization",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementAssignmentRequestRequestorConnectedOrganization",
        "apiReference": ""
      }
    }
  },
  "de8eb39d8183": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementAssignmentRequestCount",
        "apiReference": ""
      }
    }
  },
  "147de2e62908": {
    "path": "/identityGovernance/entitlementManagement/assignmentRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "c395b5713c8d": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganization",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-list-connectedorganizations?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementConnectedOrganization",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagement-post-connectedorganizations?view=graph-rest-beta"
      }
    }
  },
  "374da2a4c368": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganization",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementConnectedOrganization",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementConnectedOrganization",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-delete?view=graph-rest-beta"
      }
    }
  },
  "729d810566c9": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}/externalSponsors",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganizationExternalSponsor",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-list-externalsponsors?view=graph-rest-beta"
      }
    }
  },
  "0ad12a37a43e": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}/externalSponsors/{directoryObject-id}/$ref",
    "methods": {
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementConnectedOrganizationExternalSponsorDirectoryObjectByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-delete-externalsponsors?view=graph-rest-beta"
      }
    }
  },
  "f798a7d4cb6c": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}/externalSponsors/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganizationExternalSponsorCount",
        "apiReference": ""
      }
    }
  },
  "0883a8b71ebf": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}/externalSponsors/$ref",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganizationExternalSponsorByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-list-externalsponsors?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementConnectedOrganizationExternalSponsorByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-post-externalsponsors?view=graph-rest-beta"
      }
    }
  },
  "532007ca825d": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}/internalSponsors",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganizationInternalSponsor",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-list-internalsponsors?view=graph-rest-beta"
      }
    }
  },
  "76177db4ea13": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}/internalSponsors/{directoryObject-id}/$ref",
    "methods": {
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementConnectedOrganizationInternalSponsorDirectoryObjectByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-delete-internalsponsors?view=graph-rest-beta"
      }
    }
  },
  "de55ce6a6988": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}/internalSponsors/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganizationInternalSponsorCount",
        "apiReference": ""
      }
    }
  },
  "28157c97c15c": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/{connectedOrganization-id}/internalSponsors/$ref",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganizationInternalSponsorByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-list-internalsponsors?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementConnectedOrganizationInternalSponsorByRef",
        "apiReference": "https://learn.microsoft.com/graph/api/connectedorganization-post-internalsponsors?view=graph-rest-beta"
      }
    }
  },
  "ff9f3dc006d2": {
    "path": "/identityGovernance/entitlementManagement/connectedOrganizations/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementConnectedOrganizationCount",
        "apiReference": ""
      }
    }
  },
  "1ec6cf978af1": {
    "path": "/identityGovernance/entitlementManagement/settings",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaEntitlementManagementSetting",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagementsettings-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementSetting",
        "apiReference": "https://learn.microsoft.com/graph/api/entitlementmanagementsettings-update?view=graph-rest-beta"
      }
    }
  },
  "7f55b5d584a1": {
    "path": "/identityGovernance/entitlementManagement/subjects",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementSubject",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagesubject-get?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaEntitlementManagementSubject",
        "apiReference": ""
      }
    }
  },
  "17ca54894dd0": {
    "path": "/identityGovernance/entitlementManagement/subjects/{accessPackageSubject-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementSubject",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementSubject",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagesubject-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementSubject",
        "apiReference": ""
      }
    }
  },
  "8d98b1af14b8": {
    "path": "/identityGovernance/entitlementManagement/subjects/{accessPackageSubject-id}/connectedOrganization",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementSubjectConnectedOrganization",
        "apiReference": ""
      }
    }
  },
  "9d8b3085fb47": {
    "path": "/identityGovernance/entitlementManagement/subjects(objectId='{objectId}')",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementSubjectByObjectId",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaEntitlementManagementSubjectByObjectId",
        "apiReference": "https://learn.microsoft.com/graph/api/accesspackagesubject-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaEntitlementManagementSubjectByObjectId",
        "apiReference": ""
      }
    }
  },
  "616e15c94950": {
    "path": "/identityGovernance/entitlementManagement/subjects/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaEntitlementManagementSubjectCount",
        "apiReference": ""
      }
    }
  },
  "ee7b97b3b859": {
    "path": "/identityGovernance/lifecycleWorkflows",
    "methods": {}
  },
  "0808367ba964": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecycleworkflowscontainer-list-customtaskextensions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecycleworkflowscontainer-post-customtaskextensions?view=graph-rest-beta"
      }
    }
  },
  "30b4e4ba6de1": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-customtaskextension-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-customtaskextension-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtension",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-customtaskextension-delete?view=graph-rest-beta"
      }
    }
  },
  "3c368fb4261c": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}/createdBy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionCreatedBy",
        "apiReference": ""
      }
    }
  },
  "46ed98ff6365": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}/createdBy/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionCreatedByMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionCreatedByMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "162c0b6d232a": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}/createdBy/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionCreatedByServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "53b98f8aedbb": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}/createdBy/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionCreatedByServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "0b611392d705": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}/lastModifiedBy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionLastModifiedBy",
        "apiReference": ""
      }
    }
  },
  "389748571c0c": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}/lastModifiedBy/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionLastModifiedByMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionLastModifiedByMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "117eccdc9dc2": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}/lastModifiedBy/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionLastModifiedByServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "2b2aabae11c7": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/{customTaskExtension-id}/lastModifiedBy/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionLastModifiedByServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "1be88274bd42": {
    "path": "/identityGovernance/lifecycleWorkflows/customTaskExtensions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCustomTaskExtensionCount",
        "apiReference": ""
      }
    }
  },
  "0af04fe66427": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItem",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItem",
        "apiReference": ""
      }
    }
  },
  "9c199e40a0ed": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecycleworkflowscontainer-list-deleteditems?view=graph-rest-beta"
      }
    }
  },
  "2680083d44f3": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-deleteditemcontainer-get?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-deleteditemcontainer-delete?view=graph-rest-beta"
      }
    }
  },
  "e2bd2ccc1cc0": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/createdBy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowCreatedBy",
        "apiReference": ""
      }
    }
  },
  "788bd77f93ae": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/createdBy/mailboxSettings",
    "methods": {}
  },
  "d076d5bf8b4c": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/createdBy/serviceProvisioningErrors",
    "methods": {}
  },
  "b4b431b98274": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/createdBy/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "095e0933bc68": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/executionScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowExecutionScope",
        "apiReference": ""
      }
    }
  },
  "491a219fba7c": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/executionScope/{userProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowExecutionScope",
        "apiReference": ""
      }
    }
  },
  "38f4a8b537c6": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/executionScope/$count",
    "methods": {}
  },
  "c3913caee3c2": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/lastModifiedBy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowLastModifiedBy",
        "apiReference": ""
      }
    }
  },
  "b10e7d840285": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/lastModifiedBy/mailboxSettings",
    "methods": {}
  },
  "99980bacf4b4": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/lastModifiedBy/serviceProvisioningErrors",
    "methods": {}
  },
  "a5f4fd27c0e3": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/lastModifiedBy/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "489d0ac8df58": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/microsoft.graph.identityGovernance.activate",
    "methods": {}
  },
  "5427bef6f828": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/microsoft.graph.identityGovernance.createNewVersion",
    "methods": {}
  },
  "7d4898109431": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/microsoft.graph.identityGovernance.restore",
    "methods": {}
  },
  "b3d06e0e3f2d": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowRun",
        "apiReference": ""
      }
    }
  },
  "dffef15ab77d": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowRun",
        "apiReference": ""
      }
    }
  },
  "ac61b671219e": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults",
    "methods": {}
  },
  "455a8d17a3e5": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {}
  },
  "3a8121df7244": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "f2d97ad54ebd": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {}
  },
  "26db9e3547a4": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "60a1a848c925": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "a4b8d44cab8e": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "28389f722d9b": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {}
  },
  "1e83046261d8": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/$count",
    "methods": {}
  },
  "bb75d28f7491": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults",
    "methods": {}
  },
  "fae27b55c540": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}",
    "methods": {}
  },
  "017dd97694ea": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/subject",
    "methods": {}
  },
  "f24e9b7dfdfc": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "ff6f1c6fc4bd": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "820934ca0cd3": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "170759f00681": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults",
    "methods": {}
  },
  "4894fe96114d": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {}
  },
  "f263aa25fa76": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "ee4be3d0ceae": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {}
  },
  "d1b49c4ccab7": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "80dbf0052cd6": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "91d5279a138b": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "879b9d43fcc4": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {}
  },
  "b4e7ba027ae0": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/$count",
    "methods": {}
  },
  "504d5a2f033f": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/$count",
    "methods": {}
  },
  "ddd705c52ad1": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/microsoft.graph.identityGovernance.summary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "da59677f823d": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/$count",
    "methods": {}
  },
  "c7a6dd730fae": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/runs/microsoft.graph.identityGovernance.summary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "61c29dc8c01c": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowTaskReport",
        "apiReference": ""
      }
    }
  },
  "91b9f8069622": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowTaskReport",
        "apiReference": ""
      }
    }
  },
  "d3bef3bafc61": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/task",
    "methods": {}
  },
  "b20c735c2692": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskDefinition",
    "methods": {}
  },
  "6e9efb394fb1": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults",
    "methods": {}
  },
  "2126ce0a1fec": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {}
  },
  "1a9ebf663bc9": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "f4bebdeed550": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {}
  },
  "915aa7fca3ba": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "b1cbb558fec0": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "93b7a0f5240f": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "e1645229ce19": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {}
  },
  "7a2ab770bd5b": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/$count",
    "methods": {}
  },
  "675374723f03": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/$count",
    "methods": {}
  },
  "1cb7f349ad7c": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/taskReports/microsoft.graph.identityGovernance.summary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "3a05de3af7fd": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowTask",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowTask",
        "apiReference": ""
      }
    }
  },
  "0c20d7112fed": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowTask",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowTask",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowTask",
        "apiReference": ""
      }
    }
  },
  "6ac70e2f9b8e": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults",
    "methods": {}
  },
  "89e665186e82": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {}
  },
  "8fac8c8e0ae1": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "4a55d5c598af": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {}
  },
  "2b1f78e85552": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "273dee0c5512": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "556da9d0dba3": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "3a3141aeb9ea": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {}
  },
  "bfacead53ba3": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/$count",
    "methods": {}
  },
  "134bd6d21a69": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/tasks/$count",
    "methods": {}
  },
  "c0c6827ea784": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowUserProcessingResult",
        "apiReference": ""
      }
    }
  },
  "93ba8221af3c": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowUserProcessingResult",
        "apiReference": ""
      }
    }
  },
  "c98e53c8de37": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/subject",
    "methods": {}
  },
  "0f509496c725": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "03601a94301f": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "8a5e760e355e": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "69072d0aa8a7": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults",
    "methods": {}
  },
  "0a869db14b4a": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {}
  },
  "a3b9920412ae": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "1454097e1c3e": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {}
  },
  "3cc60ba361a7": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "3bc04fad47a0": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "86706b43012b": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "fb6abefb1209": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {}
  },
  "b3dc85170e24": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/$count",
    "methods": {}
  },
  "d4b918ec02b8": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/$count",
    "methods": {}
  },
  "12d2ccbe742b": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/userProcessingResults/microsoft.graph.identityGovernance.summary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "7c9c7650f516": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowVersion",
        "apiReference": ""
      }
    }
  },
  "85e92a678c8b": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowVersion",
        "apiReference": ""
      }
    }
  },
  "f38f6f5011a4": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/createdBy",
    "methods": {}
  },
  "c907133c916c": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/createdBy/mailboxSettings",
    "methods": {}
  },
  "6516967de29a": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/createdBy/serviceProvisioningErrors",
    "methods": {}
  },
  "593b8b4509e6": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/createdBy/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "50e59059a9b6": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/lastModifiedBy",
    "methods": {}
  },
  "7add16d9d282": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/lastModifiedBy/mailboxSettings",
    "methods": {}
  },
  "deabc1022454": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/lastModifiedBy/serviceProvisioningErrors",
    "methods": {}
  },
  "d0078b6365d7": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/lastModifiedBy/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "dc6f0e753c4c": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks",
    "methods": {}
  },
  "ae7c11b92b4b": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}",
    "methods": {}
  },
  "2c478fae2b3d": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults",
    "methods": {}
  },
  "e0d43816bc74": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {}
  },
  "e5c6a54db9c3": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "5ac0cb4240c1": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {}
  },
  "0317771bd650": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "093c3851bf39": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "327a0ad20696": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "5ad57fb572ae": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {}
  },
  "ec7349e3d4d3": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/$count",
    "methods": {}
  },
  "410220d77867": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/$count",
    "methods": {}
  },
  "b6002215c97a": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/{workflow-id}/versions/$count",
    "methods": {}
  },
  "c9d592ca34b5": {
    "path": "/identityGovernance/lifecycleWorkflows/deletedItems/workflows/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowDeletedItemWorkflowCount",
        "apiReference": ""
      }
    }
  },
  "eebdb1386002": {
    "path": "/identityGovernance/lifecycleWorkflows/insights",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowInsight",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowInsight",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceLifecycleWorkflowInsight",
        "apiReference": ""
      }
    }
  },
  "bd59e509582b": {
    "path": "/identityGovernance/lifecycleWorkflows/insights/microsoft.graph.identityGovernance.topTasksProcessedSummary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "0d80b990019d": {
    "path": "/identityGovernance/lifecycleWorkflows/insights/microsoft.graph.identityGovernance.topWorkflowsProcessedSummary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "bd5bc5af0d38": {
    "path": "/identityGovernance/lifecycleWorkflows/insights/microsoft.graph.identityGovernance.workflowsProcessedByCategory(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "69329ba9424b": {
    "path": "/identityGovernance/lifecycleWorkflows/insights/microsoft.graph.identityGovernance.workflowsProcessedSummary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "96d30f4ec3bd": {
    "path": "/identityGovernance/lifecycleWorkflows/settings",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowSetting",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecyclemanagementsettings-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowSetting",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecyclemanagementsettings-update?view=graph-rest-beta"
      }
    }
  },
  "90df825330da": {
    "path": "/identityGovernance/lifecycleWorkflows/taskDefinitions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecycleworkflowscontainer-list-taskdefinitions?view=graph-rest-beta"
      }
    }
  },
  "cc3c697ec57e": {
    "path": "/identityGovernance/lifecycleWorkflows/taskDefinitions/{taskDefinition-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-taskdefinition-get?view=graph-rest-beta"
      }
    }
  },
  "621dd98285d1": {
    "path": "/identityGovernance/lifecycleWorkflows/taskDefinitions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "e7a69dbb7647": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecycleworkflowscontainer-list-workflows?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceLifecycleWorkflow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecycleworkflowscontainer-post-workflows?view=graph-rest-beta"
      }
    }
  },
  "ef8e5631ed07": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflow-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflow-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceLifecycleWorkflow",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflow-delete?view=graph-rest-beta"
      }
    }
  },
  "00ebe9534924": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/createdBy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCreatedBy",
        "apiReference": ""
      }
    }
  },
  "3ac784399526": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/createdBy/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCreatedByMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowCreatedByMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "ddc27508e55a": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/createdBy/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCreatedByServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "8b58095d78e7": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/createdBy/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCreatedByServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "58872f672a86": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/executionScope",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowExecutionScope",
        "apiReference": ""
      }
    }
  },
  "d9e9c6d27a85": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/executionScope/{userProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowExecutionScope",
        "apiReference": ""
      }
    }
  },
  "27bd820f1def": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/executionScope/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowExecutionScopeCount",
        "apiReference": ""
      }
    }
  },
  "5826173859e3": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/lastModifiedBy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowLastModifiedBy",
        "apiReference": ""
      }
    }
  },
  "5fcac09cc165": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/lastModifiedBy/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowLastModifiedByMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowLastModifiedByMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "d6fd05a7f3bf": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/lastModifiedBy/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowLastModifiedByServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "c73991c3a420": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/lastModifiedBy/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowLastModifiedByServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "8ce80a1d1ae9": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/microsoft.graph.identityGovernance.activate",
    "methods": {}
  },
  "2245c4b66300": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/microsoft.graph.identityGovernance.createNewVersion",
    "methods": {}
  },
  "1ebdc5118470": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/microsoft.graph.identityGovernance.restore",
    "methods": {}
  },
  "76ffd361105f": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRun",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflow-list-runs?view=graph-rest-beta"
      }
    }
  },
  "3a2f8d79f2db": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRun",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-run-get?view=graph-rest-beta"
      }
    }
  },
  "b57b0ceb79f9": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResult",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-run-list-taskprocessingresults?view=graph-rest-beta"
      }
    }
  },
  "bfbfc3c3cdfa": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "9e83bf8539b5": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "71a2fa695dac": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResultSubject",
        "apiReference": ""
      }
    }
  },
  "95dec09d7d34": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "59b1c4a3a411": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResultSubjectServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "1659ebaf1550": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResultSubjectServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "0895893ac67d": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResultTask",
        "apiReference": ""
      }
    }
  },
  "8f581b269b65": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/taskProcessingResults/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunTaskProcessingResultCount",
        "apiReference": ""
      }
    }
  },
  "5a9ee1fb2b97": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResult",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-run-list-userprocessingresults?view=graph-rest-beta"
      }
    }
  },
  "263ce8fc11f0": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResult",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-userprocessingresult-get?view=graph-rest-beta"
      }
    }
  },
  "6838442fbd70": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResultSubject",
        "apiReference": ""
      }
    }
  },
  "1b5961c1d2bc": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/subject/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "06b6d1810c49": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResultSubjectServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "61934adf65e7": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResultSubjectServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "fae5eca38cc8": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResultTaskProcessingResult",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-userprocessingresult-list-taskprocessingresults?view=graph-rest-beta"
      }
    }
  },
  "e10d22c4dca2": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResultTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "a72c62c823d1": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "87deb3f2c507": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {}
  },
  "fcb3e89370d8": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "9791749eb3ab": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "5179c2076d5d": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "75f07e0abeba": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {}
  },
  "c6b7651874de": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/$count",
    "methods": {}
  },
  "1c910c960e35": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunUserProcessingResultCount",
        "apiReference": ""
      }
    }
  },
  "ddd35f16ad48": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/{run-id}/userProcessingResults/microsoft.graph.identityGovernance.summary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "2b5d91c324c1": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowRunCount",
        "apiReference": ""
      }
    }
  },
  "0a277939b6f1": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/runs/microsoft.graph.identityGovernance.summary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "d5ad8a99d8f6": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReport",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflow-list-taskreports?view=graph-rest-beta"
      }
    }
  },
  "e3c7fa7946f0": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReport",
        "apiReference": ""
      }
    }
  },
  "774e1979d99f": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/task",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTask",
        "apiReference": ""
      }
    }
  },
  "1d0c08e4db20": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskDefinition",
        "apiReference": ""
      }
    }
  },
  "f60556987f9f": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResult",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-taskreport-list-taskprocessingresults?view=graph-rest-beta"
      }
    }
  },
  "11d4dee09ba6": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "80862712fb17": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "4818e98dc022": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResultSubject",
        "apiReference": ""
      }
    }
  },
  "f963d440b290": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "773772b9aca9": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResultSubjectServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "ed46aa998a7d": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResultSubjectServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "b0c04a7753d4": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResultTask",
        "apiReference": ""
      }
    }
  },
  "e9a32bf16c83": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/{taskReport-id}/taskProcessingResults/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportTaskProcessingResultCount",
        "apiReference": ""
      }
    }
  },
  "4833b7db5db2": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskReportCount",
        "apiReference": ""
      }
    }
  },
  "644c3551565b": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/taskReports/microsoft.graph.identityGovernance.summary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "27c9d41a1fb9": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTask",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflow-list-task?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceLifecycleWorkflowTask",
        "apiReference": ""
      }
    }
  },
  "d5d2442f811e": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTask",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowTask",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceLifecycleWorkflowTask",
        "apiReference": ""
      }
    }
  },
  "113678269e03": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "7b8e1f54605e": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "a5333640a317": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "a2d067b4bc38": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResultSubject",
        "apiReference": ""
      }
    }
  },
  "66cf87bf867d": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "b4195e1f6d2f": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResultSubjectServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "e289a2bdf872": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResultSubjectServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "aac8c9e32a1c": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResultTask",
        "apiReference": ""
      }
    }
  },
  "565a3df32578": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/{task-id}/taskProcessingResults/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskProcessingResultCount",
        "apiReference": ""
      }
    }
  },
  "0415f7252c85": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/tasks/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTaskCount",
        "apiReference": ""
      }
    }
  },
  "fa6da8f13e6e": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResult",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflow-list-userprocessingresults?view=graph-rest-beta"
      }
    }
  },
  "e89bb49045a5": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResult",
        "apiReference": ""
      }
    }
  },
  "aba5de7d1df9": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResultSubject",
        "apiReference": ""
      }
    }
  },
  "a581367d8bfc": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/subject/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "0294c52e67b9": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResultSubjectServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "4b496c1291c4": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResultSubjectServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "711b6d658930": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResultTaskProcessingResult",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-userprocessingresult-list-taskprocessingresults?view=graph-rest-beta"
      }
    }
  },
  "1172bd734848": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResultTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "dd014959fbdf": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "297b72850f16": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {}
  },
  "ad3082e65cf2": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {}
  },
  "4e2b42e7050e": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {}
  },
  "7fb3716fa6f3": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {}
  },
  "c18fd634105d": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {}
  },
  "2ab2658b4082": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/{userProcessingResult-id}/taskProcessingResults/$count",
    "methods": {}
  },
  "65c05e4c5f49": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowUserProcessingResultCount",
        "apiReference": ""
      }
    }
  },
  "dbc34b5ae898": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/userProcessingResults/microsoft.graph.identityGovernance.summary(startDateTime={startDateTime},endDateTime={endDateTime})",
    "methods": {}
  },
  "9f1056a874fd": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersion",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflow-list-versions?view=graph-rest-beta"
      }
    }
  },
  "af3ea9ff8f3f": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersion",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflowversion-get?view=graph-rest-beta"
      }
    }
  },
  "1d4176950029": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/createdBy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionCreatedBy",
        "apiReference": ""
      }
    }
  },
  "2a4eec357fd4": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/createdBy/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionCreatedByMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowVersionCreatedByMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "2f3f2ccb9f48": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/createdBy/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionCreatedByServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "a34a4ede3416": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/createdBy/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionCreatedByServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "017bfac54bd9": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/lastModifiedBy",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionLastModifiedBy",
        "apiReference": ""
      }
    }
  },
  "c9d23491c158": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/lastModifiedBy/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionLastModifiedByMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowVersionLastModifiedByMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "a8565ca05ad0": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/lastModifiedBy/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionLastModifiedByServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "005fd8907258": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/lastModifiedBy/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionLastModifiedByServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "99e146db7a4b": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTask",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflowversion-list-tasks?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceLifecycleWorkflowVersionTask",
        "apiReference": ""
      }
    }
  },
  "dea8943f74e1": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTask",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-task-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowVersionTask",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceLifecycleWorkflowVersionTask",
        "apiReference": ""
      }
    }
  },
  "c3357d610a2a": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "c8e0d319c5d2": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "8e101f667d52": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "9711d48254ce": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResultSubject",
        "apiReference": ""
      }
    }
  },
  "b7f7fadb9342": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "8629c4dba5c5": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResultSubjectServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "85aa9f8d523e": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResultSubjectServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "0d5afd19afbe": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResultTask",
        "apiReference": ""
      }
    }
  },
  "f5b20df22b0e": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/{task-id}/taskProcessingResults/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskProcessingResultCount",
        "apiReference": ""
      }
    }
  },
  "ca61418f50e7": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/{workflowVersion-versionNumber}/tasks/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionTaskCount",
        "apiReference": ""
      }
    }
  },
  "f0aea2432f91": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/{workflow-id}/versions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowVersionCount",
        "apiReference": ""
      }
    }
  },
  "ec028692267c": {
    "path": "/identityGovernance/lifecycleWorkflows/workflows/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowCount",
        "apiReference": ""
      }
    }
  },
  "8c0050fe9528": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplate",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-lifecycleworkflowscontainer-list-workflowtemplates?view=graph-rest-beta"
      }
    }
  },
  "d867a54a0ccd": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplate",
        "apiReference": "https://learn.microsoft.com/graph/api/identitygovernance-workflowtemplate-get?view=graph-rest-beta"
      }
    }
  },
  "2fec9315129e": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTask",
        "apiReference": ""
      }
    }
  },
  "2ada0c44f5e9": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTask",
        "apiReference": ""
      }
    }
  },
  "1845d1647684": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "36b036d74fbc": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResult",
        "apiReference": ""
      }
    }
  },
  "3e8c3f35f3ee": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/microsoft.graph.identityGovernance.resume",
    "methods": {}
  },
  "9ae77bfbcb46": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResultSubject",
        "apiReference": ""
      }
    }
  },
  "20f4cd58579b": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/mailboxSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResultSubjectMailboxSetting",
        "apiReference": ""
      }
    }
  },
  "e33cd09e4c6a": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResultSubjectServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "0322cb396d67": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/subject/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResultSubjectServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "f625bf77c00b": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults/{taskProcessingResult-id}/task",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResultTask",
        "apiReference": ""
      }
    }
  },
  "e551112c8cbf": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/{task-id}/taskProcessingResults/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskProcessingResultCount",
        "apiReference": ""
      }
    }
  },
  "47416691f95d": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/{workflowTemplate-id}/tasks/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateTaskCount",
        "apiReference": ""
      }
    }
  },
  "c1cc08d62b93": {
    "path": "/identityGovernance/lifecycleWorkflows/workflowTemplates/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "LifecycleWorkflows.Read.All",
            "IsAdmin": false,
            "Description": "Read all lifecycle workflows resources",
            "FullDescription": "Allows the app to list and read all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "LifecycleWorkflows.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all lifecycle workflows resources",
            "FullDescription": "Allows the app to create, update, list, read and delete all workflows, tasks and related lifecycle workflows resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceLifecycleWorkflowTemplateCount",
        "apiReference": ""
      }
    }
  },
  "1c96bf460bdc": {
    "path": "/identityGovernance/permissionsAnalytics",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalytic",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalytic",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalytic",
        "apiReference": ""
      }
    }
  },
  "1c34d968f264": {
    "path": "/identityGovernance/permissionsAnalytics/aws",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAw",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticAw",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticAw",
        "apiReference": ""
      }
    }
  },
  "41af69b04e85": {
    "path": "/identityGovernance/permissionsAnalytics/aws/findings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAwFinding",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionAnalyticAwFinding",
        "apiReference": ""
      }
    }
  },
  "c9150c8e6883": {
    "path": "/identityGovernance/permissionsAnalytics/aws/findings/{finding-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAwFinding",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticAwFinding",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticAwFinding",
        "apiReference": ""
      }
    }
  },
  "392528cce3c8": {
    "path": "/identityGovernance/permissionsAnalytics/aws/findings/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAwFindingCount",
        "apiReference": ""
      }
    }
  },
  "145d72e7f519": {
    "path": "/identityGovernance/permissionsAnalytics/aws/permissionsCreepIndexDistributions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAwPermissionCreepIndexDistribution",
        "apiReference": "https://learn.microsoft.com/graph/api/permissionsanalytics-list-permissionscreepindexdistributions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionAnalyticAwPermissionCreepIndexDistribution",
        "apiReference": ""
      }
    }
  },
  "d5ebc155af02": {
    "path": "/identityGovernance/permissionsAnalytics/aws/permissionsCreepIndexDistributions/{permissionsCreepIndexDistribution-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAwPermissionCreepIndexDistribution",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticAwPermissionCreepIndexDistribution",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticAwPermissionCreepIndexDistribution",
        "apiReference": ""
      }
    }
  },
  "c374ae5dcf98": {
    "path": "/identityGovernance/permissionsAnalytics/aws/permissionsCreepIndexDistributions/{permissionsCreepIndexDistribution-id}/authorizationSystem",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAwPermissionCreepIndexDistributionAuthorizationSystem",
        "apiReference": ""
      }
    }
  },
  "fc4716d16485": {
    "path": "/identityGovernance/permissionsAnalytics/aws/permissionsCreepIndexDistributions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAwPermissionCreepIndexDistributionCount",
        "apiReference": ""
      }
    }
  },
  "c740552220d4": {
    "path": "/identityGovernance/permissionsAnalytics/azure",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAzure",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticAzure",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticAzure",
        "apiReference": ""
      }
    }
  },
  "ee511811c0c7": {
    "path": "/identityGovernance/permissionsAnalytics/azure/findings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAzureFinding",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionAnalyticAzureFinding",
        "apiReference": ""
      }
    }
  },
  "54bef5c34efa": {
    "path": "/identityGovernance/permissionsAnalytics/azure/findings/{finding-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAzureFinding",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticAzureFinding",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticAzureFinding",
        "apiReference": ""
      }
    }
  },
  "c74c0a7b916c": {
    "path": "/identityGovernance/permissionsAnalytics/azure/findings/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAzureFindingCount",
        "apiReference": ""
      }
    }
  },
  "7dd211b72f9b": {
    "path": "/identityGovernance/permissionsAnalytics/azure/permissionsCreepIndexDistributions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAzurePermissionCreepIndexDistribution",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionAnalyticAzurePermissionCreepIndexDistribution",
        "apiReference": ""
      }
    }
  },
  "6ec897ca9cd7": {
    "path": "/identityGovernance/permissionsAnalytics/azure/permissionsCreepIndexDistributions/{permissionsCreepIndexDistribution-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAzurePermissionCreepIndexDistribution",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticAzurePermissionCreepIndexDistribution",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticAzurePermissionCreepIndexDistribution",
        "apiReference": ""
      }
    }
  },
  "8caf3b61f17b": {
    "path": "/identityGovernance/permissionsAnalytics/azure/permissionsCreepIndexDistributions/{permissionsCreepIndexDistribution-id}/authorizationSystem",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAzurePermissionCreepIndexDistributionAuthorizationSystem",
        "apiReference": ""
      }
    }
  },
  "db3159d0fb23": {
    "path": "/identityGovernance/permissionsAnalytics/azure/permissionsCreepIndexDistributions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticAzurePermissionCreepIndexDistributionCount",
        "apiReference": ""
      }
    }
  },
  "4771d8eec969": {
    "path": "/identityGovernance/permissionsAnalytics/gcp",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticGcp",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticGcp",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticGcp",
        "apiReference": ""
      }
    }
  },
  "d18ade5866b5": {
    "path": "/identityGovernance/permissionsAnalytics/gcp/findings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticGcpFinding",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionAnalyticGcpFinding",
        "apiReference": ""
      }
    }
  },
  "71c4e7736b32": {
    "path": "/identityGovernance/permissionsAnalytics/gcp/findings/{finding-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticGcpFinding",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticGcpFinding",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticGcpFinding",
        "apiReference": ""
      }
    }
  },
  "7fa7ca782ab8": {
    "path": "/identityGovernance/permissionsAnalytics/gcp/findings/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticGcpFindingCount",
        "apiReference": ""
      }
    }
  },
  "c6c8f83f5e1d": {
    "path": "/identityGovernance/permissionsAnalytics/gcp/permissionsCreepIndexDistributions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticGcpPermissionCreepIndexDistribution",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionAnalyticGcpPermissionCreepIndexDistribution",
        "apiReference": ""
      }
    }
  },
  "ecfd4cbab014": {
    "path": "/identityGovernance/permissionsAnalytics/gcp/permissionsCreepIndexDistributions/{permissionsCreepIndexDistribution-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticGcpPermissionCreepIndexDistribution",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionAnalyticGcpPermissionCreepIndexDistribution",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionAnalyticGcpPermissionCreepIndexDistribution",
        "apiReference": ""
      }
    }
  },
  "c88533e6c797": {
    "path": "/identityGovernance/permissionsAnalytics/gcp/permissionsCreepIndexDistributions/{permissionsCreepIndexDistribution-id}/authorizationSystem",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticGcpPermissionCreepIndexDistributionAuthorizationSystem",
        "apiReference": ""
      }
    }
  },
  "ae6b857cbc2d": {
    "path": "/identityGovernance/permissionsAnalytics/gcp/permissionsCreepIndexDistributions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionAnalyticGcpPermissionCreepIndexDistributionCount",
        "apiReference": ""
      }
    }
  },
  "585aab74224b": {
    "path": "/identityGovernance/permissionsManagement",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagement",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionManagement",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionManagement",
        "apiReference": ""
      }
    }
  },
  "2008d4f31d78": {
    "path": "/identityGovernance/permissionsManagement/permissionsRequestChanges",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementPermissionRequestChange",
        "apiReference": "https://learn.microsoft.com/graph/api/permissionsmanagement-list-permissionsrequestchanges?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionManagementPermissionRequestChange",
        "apiReference": ""
      }
    }
  },
  "dcd47879a94b": {
    "path": "/identityGovernance/permissionsManagement/permissionsRequestChanges/{permissionsRequestChange-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementPermissionRequestChange",
        "apiReference": "https://learn.microsoft.com/graph/api/permissionsrequestchange-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionManagementPermissionRequestChange",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionManagementPermissionRequestChange",
        "apiReference": ""
      }
    }
  },
  "a3ba3c1c4fbf": {
    "path": "/identityGovernance/permissionsManagement/permissionsRequestChanges/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementPermissionRequestChangeCount",
        "apiReference": ""
      }
    }
  },
  "74f215317658": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsApprovals",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApproval",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApproval",
        "apiReference": ""
      }
    }
  },
  "ba15e6d73fbd": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsApprovals/{approval-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApproval",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApproval",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApproval",
        "apiReference": ""
      }
    }
  },
  "5f0e263024bc": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsApprovals/{approval-id}/steps",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApprovalStep",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApprovalStep",
        "apiReference": ""
      }
    }
  },
  "920266e6f621": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsApprovals/{approval-id}/steps/{approvalStep-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApprovalStep",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApprovalStep",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApprovalStep",
        "apiReference": ""
      }
    }
  },
  "950ae3d57926": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsApprovals/{approval-id}/steps/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApprovalStepCount",
        "apiReference": ""
      }
    }
  },
  "4a9aabb23eb8": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsApprovals/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementScheduledPermissionApprovalCount",
        "apiReference": ""
      }
    }
  },
  "ad69b13013d7": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsApprovals/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "5280e3647d89": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsRequests",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePermissionManagementScheduledPermissionRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePermissionManagementScheduledPermissionRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/permissionsmanagement-post-scheduledpermissionsrequests?view=graph-rest-beta"
      }
    }
  },
  "0478b03c8395": {
    "path": "/identityGovernance/permissionsManagement/scheduledPermissionsRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "97c428c00bd0": {
    "path": "/identityGovernance/privilegedAccess",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccess",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccess",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccess",
        "apiReference": ""
      }
    }
  },
  "6f7a8f444d9a": {
    "path": "/identityGovernance/privilegedAccess/group",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroup",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroup",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroup",
        "apiReference": ""
      }
    }
  },
  "eea147fc2816": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentApprovals",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApproval",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "e51ee99b106c": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentApprovals/{approval-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApproval",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApproval",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "75badedfc0aa": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentApprovals/{approval-id}/steps",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApprovalStep",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "19e4e73019e1": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentApprovals/{approval-id}/steps/{approvalStep-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApprovalStep",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApprovalStep",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "50d045c5e157": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentApprovals/{approval-id}/steps/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApprovalStepCount",
        "apiReference": ""
      }
    }
  },
  "9290a7899353": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentApprovals/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentApprovalCount",
        "apiReference": ""
      }
    }
  },
  "b72438502c79": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentApprovals/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "d96a2680ebda": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroup-list-assignmentscheduleinstances?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "30e5f8299ed9": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances/{privilegedAccessGroupAssignmentScheduleInstance-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroupassignmentscheduleinstance-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "0faf6ff9a48c": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances/{privilegedAccessGroupAssignmentScheduleInstance-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstanceActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "19178fceb86d": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances/{privilegedAccessGroupAssignmentScheduleInstance-id}/group",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstanceGroup",
        "apiReference": ""
      }
    }
  },
  "224d61ee7a9c": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances/{privilegedAccessGroupAssignmentScheduleInstance-id}/group/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstanceGroupServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "f099a505536e": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances/{privilegedAccessGroupAssignmentScheduleInstance-id}/group/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstanceGroupServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "894d246fb206": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances/{privilegedAccessGroupAssignmentScheduleInstance-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstancePrincipal",
        "apiReference": ""
      }
    }
  },
  "84f332648e0b": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleInstanceCount",
        "apiReference": ""
      }
    }
  },
  "8e188a669abd": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleInstances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "3cfc66f4930f": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroup-list-assignmentschedulerequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.Remove.AzureADGroup",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroup-post-assignmentschedulerequests?view=graph-rest-beta"
      }
    }
  },
  "e724daac597f": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/{privilegedAccessGroupAssignmentScheduleRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroupassignmentschedulerequest-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "3965423753e5": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/{privilegedAccessGroupAssignmentScheduleRequest-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequestActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "8f60420153c4": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/{privilegedAccessGroupAssignmentScheduleRequest-id}/group",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequestGroup",
        "apiReference": ""
      }
    }
  },
  "ce8d3c3b3456": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/{privilegedAccessGroupAssignmentScheduleRequest-id}/group/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequestGroupServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "2a934d50f9a9": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/{privilegedAccessGroupAssignmentScheduleRequest-id}/group/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequestGroupServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "682e8a42cb82": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/{privilegedAccessGroupAssignmentScheduleRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "33944394f3ae": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/{privilegedAccessGroupAssignmentScheduleRequest-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequestPrincipal",
        "apiReference": ""
      }
    }
  },
  "667d2a2bda3f": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/{privilegedAccessGroupAssignmentScheduleRequest-id}/targetSchedule",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequestTargetSchedule",
        "apiReference": ""
      }
    }
  },
  "d0aed18f99b4": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleRequestCount",
        "apiReference": ""
      }
    }
  },
  "cb0d5740bcbf": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentScheduleRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "fdc57434e49d": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentSchedule",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroup-list-assignmentschedules?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentSchedule",
        "apiReference": ""
      }
    }
  },
  "b00b762ddc32": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules/{privilegedAccessGroupAssignmentSchedule-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentSchedule",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroupassignmentschedule-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentSchedule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentSchedule",
        "apiReference": ""
      }
    }
  },
  "1b85b57deefe": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules/{privilegedAccessGroupAssignmentSchedule-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "370233587c1f": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules/{privilegedAccessGroupAssignmentSchedule-id}/group",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleGroup",
        "apiReference": ""
      }
    }
  },
  "3c898a0ef2dd": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules/{privilegedAccessGroupAssignmentSchedule-id}/group/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleGroupServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "8b43afcbc45a": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules/{privilegedAccessGroupAssignmentSchedule-id}/group/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleGroupServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "6cae2f4ec906": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules/{privilegedAccessGroupAssignmentSchedule-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentSchedulePrincipal",
        "apiReference": ""
      }
    }
  },
  "76275db26ca2": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedAssignmentSchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedAssignmentSchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete assignment schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based assignment schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupAssignmentScheduleCount",
        "apiReference": ""
      }
    }
  },
  "6fb301a033f6": {
    "path": "/identityGovernance/privilegedAccess/group/assignmentSchedules/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "15e73849b9de": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleInstances",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroup-list-eligibilityscheduleinstances?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "864d58dcecb1": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleInstances/{privilegedAccessGroupEligibilityScheduleInstance-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroupeligibilityscheduleinstance-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "5d63e8155c9e": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleInstances/{privilegedAccessGroupEligibilityScheduleInstance-id}/group",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstanceGroup",
        "apiReference": ""
      }
    }
  },
  "8a4a1f3eb5c4": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleInstances/{privilegedAccessGroupEligibilityScheduleInstance-id}/group/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstanceGroupServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "8aa826dc9d05": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleInstances/{privilegedAccessGroupEligibilityScheduleInstance-id}/group/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstanceGroupServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "efc6d8151fbd": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleInstances/{privilegedAccessGroupEligibilityScheduleInstance-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstancePrincipal",
        "apiReference": ""
      }
    }
  },
  "da3264f36dde": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleInstances/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleInstanceCount",
        "apiReference": ""
      }
    }
  },
  "8f7136a93a65": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleInstances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "b62dc3bfdbd0": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroup-list-eligibilityschedulerequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.Remove.AzureADGroup",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroup-post-eligibilityschedulerequests?view=graph-rest-beta"
      }
    }
  },
  "b092c9a25c42": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/{privilegedAccessGroupEligibilityScheduleRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroupeligibilityschedulerequest-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "3b0e45311ac3": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/{privilegedAccessGroupEligibilityScheduleRequest-id}/group",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequestGroup",
        "apiReference": ""
      }
    }
  },
  "0d8afa4a87eb": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/{privilegedAccessGroupEligibilityScheduleRequest-id}/group/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequestGroupServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "6cd403bb7e15": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/{privilegedAccessGroupEligibilityScheduleRequest-id}/group/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequestGroupServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "1888134b5b3a": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/{privilegedAccessGroupEligibilityScheduleRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "333ffec86c11": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/{privilegedAccessGroupEligibilityScheduleRequest-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequestPrincipal",
        "apiReference": ""
      }
    }
  },
  "98b34bdea639": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/{privilegedAccessGroupEligibilityScheduleRequest-id}/targetSchedule",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequestTargetSchedule",
        "apiReference": ""
      }
    }
  },
  "eee0b31d03d9": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleRequestCount",
        "apiReference": ""
      }
    }
  },
  "bea1d0f3364f": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilityScheduleRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "570c02879b36": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilitySchedules",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilitySchedule",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroup-list-eligibilityschedules?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilitySchedule",
        "apiReference": ""
      }
    }
  },
  "3aba81dcd39f": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilitySchedules/{privilegedAccessGroupEligibilitySchedule-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilitySchedule",
        "apiReference": "https://learn.microsoft.com/graph/api/privilegedaccessgroupeligibilityschedule-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilitySchedule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilitySchedule",
        "apiReference": ""
      }
    }
  },
  "35b9f598062b": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilitySchedules/{privilegedAccessGroupEligibilitySchedule-id}/group",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleGroup",
        "apiReference": ""
      }
    }
  },
  "7b2b12685735": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilitySchedules/{privilegedAccessGroupEligibilitySchedule-id}/group/serviceProvisioningErrors",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleGroupServiceProvisioningError",
        "apiReference": ""
      }
    }
  },
  "cb3f6bffb023": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilitySchedules/{privilegedAccessGroupEligibilitySchedule-id}/group/serviceProvisioningErrors/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleGroupServiceProvisioningErrorCount",
        "apiReference": ""
      }
    }
  },
  "af86aae0c324": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilitySchedules/{privilegedAccessGroupEligibilitySchedule-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilitySchedulePrincipal",
        "apiReference": ""
      }
    }
  },
  "e9c137b25b95": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilitySchedules/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "PrivilegedEligibilitySchedule.Read.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "PrivilegedEligibilitySchedule.ReadWrite.AzureADGroup",
            "IsAdmin": false,
            "Description": "Read, create, and delete eligibility schedules for access to Azure AD groups",
            "FullDescription": "Allows the app to read, create, and delete time-based eligibility schedules for access to Azure AD groups, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernancePrivilegedAccessGroupEligibilityScheduleCount",
        "apiReference": ""
      }
    }
  },
  "9af4128f6fab": {
    "path": "/identityGovernance/privilegedAccess/group/eligibilitySchedules/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "9738fb67c502": {
    "path": "/identityGovernance/roleManagementAlerts",
    "methods": {}
  },
  "eaf62efc48f3": {
    "path": "/identityGovernance/roleManagementAlerts/alertConfigurations",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertConfiguration",
        "apiReference": "https://learn.microsoft.com/graph/api/rolemanagementalert-list-alertconfigurations?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceRoleManagementAlertConfiguration",
        "apiReference": ""
      }
    }
  },
  "b7404996b5b6": {
    "path": "/identityGovernance/roleManagementAlerts/alertConfigurations/{unifiedRoleManagementAlertConfiguration-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertConfiguration",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceRoleManagementAlertConfiguration",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceRoleManagementAlertConfiguration",
        "apiReference": ""
      }
    }
  },
  "731c1a41bca2": {
    "path": "/identityGovernance/roleManagementAlerts/alertConfigurations/{unifiedRoleManagementAlertConfiguration-id}/alertDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertConfigurationAlertDefinition",
        "apiReference": ""
      }
    }
  },
  "a2d77e03ec84": {
    "path": "/identityGovernance/roleManagementAlerts/alertConfigurations/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertConfigurationCount",
        "apiReference": ""
      }
    }
  },
  "9ce2c49dd06e": {
    "path": "/identityGovernance/roleManagementAlerts/alertDefinitions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/rolemanagementalert-list-alertdefinitions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceRoleManagementAlertDefinition",
        "apiReference": ""
      }
    }
  },
  "c36bbb39c104": {
    "path": "/identityGovernance/roleManagementAlerts/alertDefinitions/{unifiedRoleManagementAlertDefinition-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceRoleManagementAlertDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceRoleManagementAlertDefinition",
        "apiReference": ""
      }
    }
  },
  "aeae159bc477": {
    "path": "/identityGovernance/roleManagementAlerts/alertDefinitions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "49bb365f9dc0": {
    "path": "/identityGovernance/roleManagementAlerts/alerts",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlert",
        "apiReference": "https://learn.microsoft.com/graph/api/rolemanagementalert-list-alerts?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceRoleManagementAlert",
        "apiReference": ""
      }
    }
  },
  "62c52f8aaa05": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlert",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceRoleManagementAlert",
        "apiReference": ""
      }
    }
  },
  "055ebac32830": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert-id}/alertConfiguration",
    "methods": {}
  },
  "033df4556b89": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert-id}/alertDefinition",
    "methods": {}
  },
  "a51dbac1c50f": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert-id}/alertIncidents",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertIncident",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceRoleManagementAlertIncident",
        "apiReference": ""
      }
    }
  },
  "0097efd06270": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert-id}/alertIncidents/{unifiedRoleManagementAlertIncident-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertIncident",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceRoleManagementAlertIncident",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceRoleManagementAlertIncident",
        "apiReference": ""
      }
    }
  },
  "b4be3c34f647": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert-id}/alertIncidents/{unifiedRoleManagementAlertIncident-id}/microsoft.graph.remediate",
    "methods": {}
  },
  "e31001230891": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert-id}/alertIncidents/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertIncidentCount",
        "apiReference": ""
      }
    }
  },
  "5a137927620c": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/{unifiedRoleManagementAlert-id}/microsoft.graph.refresh",
    "methods": {}
  },
  "456ce3c2c750": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertCount",
        "apiReference": ""
      }
    }
  },
  "ad59b510089e": {
    "path": "/identityGovernance/roleManagementAlerts/alerts/microsoft.graph.refresh",
    "methods": {}
  },
  "f95c105c0e41": {
    "path": "/identityGovernance/roleManagementAlerts/operations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertOperation",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceRoleManagementAlertOperation",
        "apiReference": ""
      }
    }
  },
  "69af5c2edc72": {
    "path": "/identityGovernance/roleManagementAlerts/operations/{longRunningOperation-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagementAlert.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data for your company's directory",
            "FullDescription": "Allows the app to read all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagementAlert.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read all alert data, configure alerts, and take actions on all alerts for your company's directory",
            "FullDescription": "Allows the app to read and manage all role-based access control (RBAC) alerts for your company's directory, without a signed-in user. This includes managing alert settings, initiating alert scans, dimissing alerts, remediating alert incidents, and reading alert statuses, alert definitions, alert configurations and incidents that lead to an alert.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertOperation",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceRoleManagementAlertOperation",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceRoleManagementAlertOperation",
        "apiReference": ""
      }
    }
  },
  "2d487668aff3": {
    "path": "/identityGovernance/roleManagementAlerts/operations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceRoleManagementAlertOperationCount",
        "apiReference": ""
      }
    }
  },
  "b5220f79bf36": {
    "path": "/identityGovernance/termsOfUse",
    "methods": {}
  },
  "3bd72b8bddeb": {
    "path": "/identityGovernance/termsOfUse/agreementAcceptances",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementAcceptance",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceTermsOfUseAgreementAcceptance",
        "apiReference": ""
      }
    }
  },
  "c042040af70d": {
    "path": "/identityGovernance/termsOfUse/agreementAcceptances/{agreementAcceptance-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementAcceptance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceTermsOfUseAgreementAcceptance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceTermsOfUseAgreementAcceptance",
        "apiReference": ""
      }
    }
  },
  "0c0fad0f9e7e": {
    "path": "/identityGovernance/termsOfUse/agreementAcceptances/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementAcceptanceCount",
        "apiReference": ""
      }
    }
  },
  "1774114f119f": {
    "path": "/identityGovernance/termsOfUse/agreements",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreement",
        "apiReference": "https://learn.microsoft.com/graph/api/termsofusecontainer-list-agreements?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceTermsOfUseAgreement",
        "apiReference": "https://learn.microsoft.com/graph/api/termsofusecontainer-post-agreements?view=graph-rest-beta"
      }
    }
  },
  "b52953ce863b": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreement",
        "apiReference": "https://learn.microsoft.com/graph/api/agreement-list-files?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceTermsOfUseAgreement",
        "apiReference": "https://learn.microsoft.com/graph/api/agreement-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceTermsOfUseAgreement",
        "apiReference": "https://learn.microsoft.com/graph/api/agreement-delete?view=graph-rest-beta"
      }
    }
  },
  "1ccd86c4ef06": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/acceptances",
    "methods": {}
  },
  "a6113ad1291b": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/acceptances/{agreementAcceptance-id}",
    "methods": {}
  },
  "e0cdf28533a1": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/acceptances/$count",
    "methods": {}
  },
  "5c77292fe3dd": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/file",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFile",
        "apiReference": "https://learn.microsoft.com/graph/api/agreementfile-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceTermsOfUseAgreementFile",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceTermsOfUseAgreementFile",
        "apiReference": ""
      }
    }
  },
  "ef91423dfc28": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/file/localizations",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalization",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalization",
        "apiReference": ""
      }
    }
  },
  "18a25475835d": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/file/localizations/{agreementFileLocalization-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalization",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalization",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalization",
        "apiReference": ""
      }
    }
  },
  "f1d5ddd2dbfb": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/file/localizations/{agreementFileLocalization-id}/versions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalizationVersion",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalizationVersion",
        "apiReference": ""
      }
    }
  },
  "897db3bee0e0": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/file/localizations/{agreementFileLocalization-id}/versions/{agreementFileVersion-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalizationVersion",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalizationVersion",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalizationVersion",
        "apiReference": ""
      }
    }
  },
  "921a0c70adc8": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/file/localizations/{agreementFileLocalization-id}/versions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalizationVersionCount",
        "apiReference": ""
      }
    }
  },
  "36d1dea997e0": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/file/localizations/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileLocalizationCount",
        "apiReference": ""
      }
    }
  },
  "f2475340475a": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/files",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFile",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceTermsOfUseAgreementFile",
        "apiReference": "https://learn.microsoft.com/graph/api/agreement-post-files?view=graph-rest-beta"
      }
    }
  },
  "4f80c08c781a": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/files/{agreementFileLocalization-id}",
    "methods": {}
  },
  "e369090c4e00": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/files/{agreementFileLocalization-id}/versions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileVersion",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaIdentityGovernanceTermsOfUseAgreementFileVersion",
        "apiReference": ""
      }
    }
  },
  "e5a6650b85ac": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/files/{agreementFileLocalization-id}/versions/{agreementFileVersion-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileVersion",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaIdentityGovernanceTermsOfUseAgreementFileVersion",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaIdentityGovernanceTermsOfUseAgreementFileVersion",
        "apiReference": ""
      }
    }
  },
  "57a0dae3113a": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/files/{agreementFileLocalization-id}/versions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileVersionCount",
        "apiReference": ""
      }
    }
  },
  "02daaec51376": {
    "path": "/identityGovernance/termsOfUse/agreements/{agreement-id}/files/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementFileCount",
        "apiReference": ""
      }
    }
  },
  "3f86ff7dde8b": {
    "path": "/identityGovernance/termsOfUse/agreements/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaIdentityGovernanceTermsOfUseAgreementCount",
        "apiReference": ""
      }
    }
  },
  "d77c6b415fc7": {
    "path": "/privilegedAccess",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccess",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccess",
        "apiReference": ""
      }
    }
  },
  "5ce074d74ba3": {
    "path": "/privilegedAccess/{privilegedAccess-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccess",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccess",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccess",
        "apiReference": ""
      }
    }
  },
  "f78595484734": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResource",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessResource",
        "apiReference": ""
      }
    }
  },
  "e87bdb486cc0": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResource",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResource",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResource",
        "apiReference": ""
      }
    }
  },
  "0854bb763a07": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/parent",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceParent",
        "apiReference": ""
      }
    }
  },
  "ae6ef1bca5e5": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessResourceRoleAssignmentRequest",
        "apiReference": ""
      }
    }
  },
  "2b65881fd3f6": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleAssignmentRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleAssignmentRequest",
        "apiReference": ""
      }
    }
  },
  "3140a6bdf257": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "156de638aa7d": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/microsoft.graph.updateRequest",
    "methods": {}
  },
  "b7cbed355805": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRequestResource",
        "apiReference": ""
      }
    }
  },
  "5b92261aa84a": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRequestRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleAssignmentRequestRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleAssignmentRequestRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "159fba71994a": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/roleDefinition/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRequestRoleDefinitionResource",
        "apiReference": ""
      }
    }
  },
  "f7305a833720": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/roleDefinition/roleSetting",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRequestRoleDefinitionRoleSetting",
        "apiReference": ""
      }
    }
  },
  "a95cd52beaa0": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRequestSubject",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleAssignmentRequestSubject",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleAssignmentRequestSubject",
        "apiReference": ""
      }
    }
  },
  "e7184d1f7ff3": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignmentRequests/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRequestCount",
        "apiReference": ""
      }
    }
  },
  "15fc3e600024": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignment",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessResourceRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "9dc0681bb717": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/{governanceRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "32fe92b90c7c": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/{governanceRoleAssignment-id}/linkedEligibleRoleAssignment",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentLinkedEligibleRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "e657af80c285": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/{governanceRoleAssignment-id}/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentResource",
        "apiReference": ""
      }
    }
  },
  "b304b81eb69f": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/{governanceRoleAssignment-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleAssignmentRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleAssignmentRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "df63ab4f2029": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/{governanceRoleAssignment-id}/roleDefinition/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRoleDefinitionResource",
        "apiReference": ""
      }
    }
  },
  "fc9a60c616fc": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/{governanceRoleAssignment-id}/roleDefinition/roleSetting",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentRoleDefinitionRoleSetting",
        "apiReference": ""
      }
    }
  },
  "608ea0bbaa6a": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/{governanceRoleAssignment-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentSubject",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleAssignmentSubject",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleAssignmentSubject",
        "apiReference": ""
      }
    }
  },
  "d20bf98a1921": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "ee3334c8d7c5": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleAssignments/microsoft.graph.export()",
    "methods": {}
  },
  "9f16f93d3b10": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleDefinitions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleDefinition",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessResourceRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "89732f7af042": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleDefinitions/{governanceRoleDefinition-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "d9f753fe87ff": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleDefinitions/{governanceRoleDefinition-id}/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleDefinitionResource",
        "apiReference": ""
      }
    }
  },
  "c411b571ba05": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleDefinitions/{governanceRoleDefinition-id}/roleSetting",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleDefinitionRoleSetting",
        "apiReference": ""
      }
    }
  },
  "9ae45fcbdda3": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleDefinitions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "cce7f944f48f": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleSetting",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessResourceRoleSetting",
        "apiReference": ""
      }
    }
  },
  "2d10c36b5d55": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleSettings/{governanceRoleSetting-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleSetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleSetting",
        "apiReference": ""
      }
    }
  },
  "af9abbfd4a23": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleSettings/{governanceRoleSetting-id}/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleSettingResource",
        "apiReference": ""
      }
    }
  },
  "895037d23f20": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleSettings/{governanceRoleSetting-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleSettingRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessResourceRoleSettingRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessResourceRoleSettingRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "ef67669f9ca8": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleSettings/{governanceRoleSetting-id}/roleDefinition/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleSettingRoleDefinitionResource",
        "apiReference": ""
      }
    }
  },
  "2d246c180a7b": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleSettings/{governanceRoleSetting-id}/roleDefinition/roleSetting",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleSettingRoleDefinitionRoleSetting",
        "apiReference": ""
      }
    }
  },
  "28959e1d7021": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/{governanceResource-id}/roleSettings/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceRoleSettingCount",
        "apiReference": ""
      }
    }
  },
  "646b0acaf3a0": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessResourceCount",
        "apiReference": ""
      }
    }
  },
  "ecf2ae96e2cb": {
    "path": "/privilegedAccess/{privilegedAccess-id}/resources/microsoft.graph.register",
    "methods": {}
  },
  "f765797d69d4": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessRoleAssignmentRequest",
        "apiReference": ""
      }
    }
  },
  "966724f60f6c": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleAssignmentRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleAssignmentRequest",
        "apiReference": ""
      }
    }
  },
  "2d8d891185bf": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "2185cc36a8a5": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/microsoft.graph.updateRequest",
    "methods": {}
  },
  "2beea4659059": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentRequestResource",
        "apiReference": ""
      }
    }
  },
  "a86ab8707af1": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentRequestRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleAssignmentRequestRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleAssignmentRequestRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "797271556f04": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/roleDefinition/resource",
    "methods": {}
  },
  "19e19c99d59c": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/roleDefinition/roleSetting",
    "methods": {}
  },
  "a8f204d8361c": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/{governanceRoleAssignmentRequest-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentRequestSubject",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleAssignmentRequestSubject",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleAssignmentRequestSubject",
        "apiReference": ""
      }
    }
  },
  "c620528039a3": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignmentRequests/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentRequestCount",
        "apiReference": ""
      }
    }
  },
  "04fade556a52": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignment",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "8a74e2d90334": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/{governanceRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "e8a2df3f2016": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/{governanceRoleAssignment-id}/linkedEligibleRoleAssignment",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentLinkedEligibleRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "af7622b3ffc3": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/{governanceRoleAssignment-id}/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentResource",
        "apiReference": ""
      }
    }
  },
  "0eca413db27f": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/{governanceRoleAssignment-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleAssignmentRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleAssignmentRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "d28638a77475": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/{governanceRoleAssignment-id}/roleDefinition/resource",
    "methods": {}
  },
  "03d2a1d18cd6": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/{governanceRoleAssignment-id}/roleDefinition/roleSetting",
    "methods": {}
  },
  "e737a8589536": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/{governanceRoleAssignment-id}/subject",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentSubject",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleAssignmentSubject",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleAssignmentSubject",
        "apiReference": ""
      }
    }
  },
  "fde5de0eacb9": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "0e7d7cc6a7a3": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleAssignments/microsoft.graph.export()",
    "methods": {}
  },
  "0492adce5066": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleDefinitions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleDefinition",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "6ff405db7508": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleDefinitions/{governanceRoleDefinition-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "02e530fa0af7": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleDefinitions/{governanceRoleDefinition-id}/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleDefinitionResource",
        "apiReference": ""
      }
    }
  },
  "bcf424f759f6": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleDefinitions/{governanceRoleDefinition-id}/roleSetting",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleDefinitionRoleSetting",
        "apiReference": ""
      }
    }
  },
  "8bc9f05416ec": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleDefinitions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "73f5ad570e96": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleSettings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleSetting",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedAccessRoleSetting",
        "apiReference": ""
      }
    }
  },
  "bdfa1c2d0dfe": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleSettings/{governanceRoleSetting-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleSetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleSetting",
        "apiReference": ""
      }
    }
  },
  "21bf20871c50": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleSettings/{governanceRoleSetting-id}/resource",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleSettingResource",
        "apiReference": ""
      }
    }
  },
  "e0384d823d29": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleSettings/{governanceRoleSetting-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleSettingRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedAccessRoleSettingRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedAccessRoleSettingRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "aa02d5a28320": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleSettings/{governanceRoleSetting-id}/roleDefinition/resource",
    "methods": {}
  },
  "39906f7d6620": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleSettings/{governanceRoleSetting-id}/roleDefinition/roleSetting",
    "methods": {}
  },
  "41ebec149d7c": {
    "path": "/privilegedAccess/{privilegedAccess-id}/roleSettings/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessRoleSettingCount",
        "apiReference": ""
      }
    }
  },
  "3e43113581fc": {
    "path": "/privilegedAccess/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedAccessCount",
        "apiReference": ""
      }
    }
  },
  "fa66fb4f521b": {
    "path": "/privilegedApproval",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApproval",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedApproval",
        "apiReference": ""
      }
    }
  },
  "57ce0861192f": {
    "path": "/privilegedApproval/{privilegedApproval-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApproval",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedApproval",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedApproval",
        "apiReference": ""
      }
    }
  },
  "0264fbd91a79": {
    "path": "/privilegedApproval/{privilegedApproval-id}/request",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApprovalRequest",
        "apiReference": ""
      }
    }
  },
  "82bde0e92354": {
    "path": "/privilegedApproval/{privilegedApproval-id}/roleInfo",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApprovalRoleInfo",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedApprovalRoleInfo",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedApprovalRoleInfo",
        "apiReference": ""
      }
    }
  },
  "d606db550f1e": {
    "path": "/privilegedApproval/{privilegedApproval-id}/roleInfo/assignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApprovalRoleInfoAssignment",
        "apiReference": ""
      }
    }
  },
  "70efb8ee4280": {
    "path": "/privilegedApproval/{privilegedApproval-id}/roleInfo/assignments/{privilegedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApprovalRoleInfoAssignment",
        "apiReference": ""
      }
    }
  },
  "dbbd5586801a": {
    "path": "/privilegedApproval/{privilegedApproval-id}/roleInfo/assignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApprovalRoleInfoAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "1e7ff7496dd3": {
    "path": "/privilegedApproval/{privilegedApproval-id}/roleInfo/microsoft.graph.selfActivate",
    "methods": {}
  },
  "b409ba7abd18": {
    "path": "/privilegedApproval/{privilegedApproval-id}/roleInfo/microsoft.graph.selfDeactivate",
    "methods": {}
  },
  "9ae4c3709d0c": {
    "path": "/privilegedApproval/{privilegedApproval-id}/roleInfo/settings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApprovalRoleInfoSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedApprovalRoleInfoSetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedApprovalRoleInfoSetting",
        "apiReference": ""
      }
    }
  },
  "d27d2e3ac24b": {
    "path": "/privilegedApproval/{privilegedApproval-id}/roleInfo/summary",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApprovalRoleInfoSummary",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedApprovalRoleInfoSummary",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedApprovalRoleInfoSummary",
        "apiReference": ""
      }
    }
  },
  "f7f0d9dacd3c": {
    "path": "/privilegedApproval/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedApprovalCount",
        "apiReference": ""
      }
    }
  },
  "da25605e0576": {
    "path": "/privilegedApproval/microsoft.graph.myRequests()",
    "methods": {}
  },
  "30cec8828da8": {
    "path": "/privilegedOperationEvents",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedOperationEvent",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedOperationEvent",
        "apiReference": ""
      }
    }
  },
  "d9d77454c94d": {
    "path": "/privilegedOperationEvents/{privilegedOperationEvent-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedOperationEvent",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedOperationEvent",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedOperationEvent",
        "apiReference": ""
      }
    }
  },
  "bed32a3577e0": {
    "path": "/privilegedOperationEvents/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedOperationEventCount",
        "apiReference": ""
      }
    }
  },
  "bdf6afd9979e": {
    "path": "/privilegedRoleAssignmentRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Directory.Read.All",
            "IsAdmin": true,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "PrivilegedAccess.ReadWrite.AzureAD",
            "IsAdmin": true,
            "Description": "Read and write privileged access to Azure AD",
            "FullDescription": "Allows the app to request and manage just in time elevation (including scheduled elevation) of users to Azure AD built-in administrative roles, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedRoleAssignmentRequest",
        "apiReference": ""
      }
    }
  },
  "ba9455d37d14": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleAssignmentRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleAssignmentRequest",
        "apiReference": ""
      }
    }
  },
  "42160ca04e55": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "45ccf8230a08": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/roleInfo",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequestRoleInfo",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleAssignmentRequestRoleInfo",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleAssignmentRequestRoleInfo",
        "apiReference": ""
      }
    }
  },
  "b7be247ec8cd": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/roleInfo/assignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequestRoleInfoAssignment",
        "apiReference": ""
      }
    }
  },
  "8009668fd77e": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/roleInfo/assignments/{privilegedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequestRoleInfoAssignment",
        "apiReference": ""
      }
    }
  },
  "f447e0e1bbed": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/roleInfo/assignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequestRoleInfoAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "fb4d9ea2f313": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/roleInfo/microsoft.graph.selfActivate",
    "methods": {}
  },
  "ff8d3e82c0af": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/roleInfo/microsoft.graph.selfDeactivate",
    "methods": {}
  },
  "92c25112cb76": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/roleInfo/settings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequestRoleInfoSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleAssignmentRequestRoleInfoSetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleAssignmentRequestRoleInfoSetting",
        "apiReference": ""
      }
    }
  },
  "79ac1422e389": {
    "path": "/privilegedRoleAssignmentRequests/{privilegedRoleAssignmentRequest-id}/roleInfo/summary",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequestRoleInfoSummary",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleAssignmentRequestRoleInfoSummary",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleAssignmentRequestRoleInfoSummary",
        "apiReference": ""
      }
    }
  },
  "4ab28c75cde4": {
    "path": "/privilegedRoleAssignmentRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "Directory.Read.All",
            "IsAdmin": true,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "PrivilegedAccess.ReadWrite.AzureAD",
            "IsAdmin": true,
            "Description": "Read and write privileged access to Azure AD",
            "FullDescription": "Allows the app to request and manage just in time elevation (including scheduled elevation) of users to Azure AD built-in administrative roles, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRequestCount",
        "apiReference": ""
      }
    }
  },
  "1471ad895deb": {
    "path": "/privilegedRoleAssignmentRequests/microsoft.graph.my()",
    "methods": {}
  },
  "23bdbb1ddb87": {
    "path": "/privilegedRoleAssignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleRoleAssignment",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "68dcb0b7bb03": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleRoleAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "640b6a369e94": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/microsoft.graph.makeEligible",
    "methods": {}
  },
  "f49558d81cc9": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/microsoft.graph.makePermanent",
    "methods": {}
  },
  "81285be0019b": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/roleInfo",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRoleInfo",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleAssignmentRoleInfo",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleAssignmentRoleInfo",
        "apiReference": ""
      }
    }
  },
  "221ef43747b5": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/roleInfo/assignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRoleInfoAssignment",
        "apiReference": ""
      }
    }
  },
  "10027d3eb7eb": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/roleInfo/assignments/{privilegedRoleAssignment-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRoleInfoAssignment",
        "apiReference": ""
      }
    }
  },
  "083dd9b2bece": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/roleInfo/assignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRoleInfoAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "759001b5912d": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/roleInfo/microsoft.graph.selfActivate",
    "methods": {}
  },
  "66698f14586e": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/roleInfo/microsoft.graph.selfDeactivate",
    "methods": {}
  },
  "ddd8688ea4ff": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/roleInfo/settings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRoleInfoSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleAssignmentRoleInfoSetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleAssignmentRoleInfoSetting",
        "apiReference": ""
      }
    }
  },
  "bfbda48d0cc8": {
    "path": "/privilegedRoleAssignments/{privilegedRoleAssignment-id}/roleInfo/summary",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentRoleInfoSummary",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleAssignmentRoleInfoSummary",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleAssignmentRoleInfoSummary",
        "apiReference": ""
      }
    }
  },
  "8190e2c7aab8": {
    "path": "/privilegedRoleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "9a33df77d2ca": {
    "path": "/privilegedRoleAssignments/microsoft.graph.my()",
    "methods": {}
  },
  "1c5896634231": {
    "path": "/privilegedRoles",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRole",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaPrivilegedRole",
        "apiReference": ""
      }
    }
  },
  "a7a5be7c2c54": {
    "path": "/privilegedRoles/{privilegedRole-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRole",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRole",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRole",
        "apiReference": ""
      }
    }
  },
  "5d9abd652982": {
    "path": "/privilegedRoles/{privilegedRole-id}/assignments",
    "methods": {}
  },
  "13132459b9d5": {
    "path": "/privilegedRoles/{privilegedRole-id}/assignments/{privilegedRoleAssignment-id}",
    "methods": {}
  },
  "69bfe327eb7f": {
    "path": "/privilegedRoles/{privilegedRole-id}/assignments/$count",
    "methods": {}
  },
  "26221fbefd2e": {
    "path": "/privilegedRoles/{privilegedRole-id}/microsoft.graph.selfActivate",
    "methods": {}
  },
  "d551c1b5985d": {
    "path": "/privilegedRoles/{privilegedRole-id}/microsoft.graph.selfDeactivate",
    "methods": {}
  },
  "4adafc356f3e": {
    "path": "/privilegedRoles/{privilegedRole-id}/settings",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleSetting",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleSetting",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleSetting",
        "apiReference": ""
      }
    }
  },
  "61fdce94e7a0": {
    "path": "/privilegedRoles/{privilegedRole-id}/summary",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleSummary",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaPrivilegedRoleSummary",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaPrivilegedRoleSummary",
        "apiReference": ""
      }
    }
  },
  "2e0e5c626487": {
    "path": "/privilegedRoles/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaPrivilegedRoleCount",
        "apiReference": ""
      }
    }
  },
  "40d72d3485ec": {
    "path": "/programControls",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ProgramControl.Read.All",
            "IsAdmin": false,
            "Description": "Read all programs",
            "FullDescription": "Allows the app to read programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ProgramControl.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all programs",
            "FullDescription": "Allows the app to read, update, delete and perform actions on programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaProgramControl",
        "apiReference": "https://learn.microsoft.com/graph/api/programcontrol-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaProgramControl",
        "apiReference": "https://learn.microsoft.com/graph/api/programcontrol-create?view=graph-rest-beta"
      }
    }
  },
  "c1900e60db67": {
    "path": "/programControls/{programControl-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaProgramControl",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaProgramControl",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaProgramControl",
        "apiReference": "https://learn.microsoft.com/graph/api/programcontrol-delete?view=graph-rest-beta"
      }
    }
  },
  "063fda650549": {
    "path": "/programControls/{programControl-id}/program",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaProgramControlProgram",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaProgramControlProgram",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaProgramControlProgram",
        "apiReference": ""
      }
    }
  },
  "19218785a8b2": {
    "path": "/programControls/{programControl-id}/program/controls",
    "methods": {}
  },
  "365fcc439f30": {
    "path": "/programControls/{programControl-id}/program/controls/{programControl-id1}",
    "methods": {}
  },
  "2047e9db6e80": {
    "path": "/programControls/{programControl-id}/program/controls/$count",
    "methods": {}
  },
  "876f39648007": {
    "path": "/programControls/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ProgramControl.Read.All",
            "IsAdmin": false,
            "Description": "Read all programs",
            "FullDescription": "Allows the app to read programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ProgramControl.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all programs",
            "FullDescription": "Allows the app to read, update, delete and perform actions on programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaProgramControlCount",
        "apiReference": ""
      }
    }
  },
  "f342d6b7d94c": {
    "path": "/programControlTypes",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ProgramControl.Read.All",
            "IsAdmin": false,
            "Description": "Read all programs",
            "FullDescription": "Allows the app to read programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ProgramControl.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all programs",
            "FullDescription": "Allows the app to read, update, delete and perform actions on programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaProgramControlType",
        "apiReference": "https://learn.microsoft.com/graph/api/programcontroltype-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaProgramControlType",
        "apiReference": ""
      }
    }
  },
  "67cf50a2234c": {
    "path": "/programControlTypes/{programControlType-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaProgramControlType",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaProgramControlType",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaProgramControlType",
        "apiReference": ""
      }
    }
  },
  "ddc00cbdd8d3": {
    "path": "/programControlTypes/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ProgramControl.Read.All",
            "IsAdmin": false,
            "Description": "Read all programs",
            "FullDescription": "Allows the app to read programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ProgramControl.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all programs",
            "FullDescription": "Allows the app to read, update, delete and perform actions on programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaProgramControlTypeCount",
        "apiReference": ""
      }
    }
  },
  "41e7e15714a2": {
    "path": "/programs",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ProgramControl.Read.All",
            "IsAdmin": false,
            "Description": "Read all programs",
            "FullDescription": "Allows the app to read programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ProgramControl.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all programs",
            "FullDescription": "Allows the app to read, update, delete and perform actions on programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaProgram",
        "apiReference": "https://learn.microsoft.com/graph/api/program-list?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaProgram",
        "apiReference": "https://learn.microsoft.com/graph/api/program-create?view=graph-rest-beta"
      }
    }
  },
  "d7f215cf733e": {
    "path": "/programs/{program-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaProgram",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaProgram",
        "apiReference": "https://learn.microsoft.com/graph/api/program-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaProgram",
        "apiReference": "https://learn.microsoft.com/graph/api/program-delete?view=graph-rest-beta"
      }
    }
  },
  "f5e80e34d788": {
    "path": "/programs/{program-id}/controls",
    "methods": {}
  },
  "3838f5875630": {
    "path": "/programs/{program-id}/controls/{programControl-id}",
    "methods": {}
  },
  "8769b9b2c331": {
    "path": "/programs/{program-id}/controls/{programControl-id}/program",
    "methods": {}
  },
  "5e61d2161abc": {
    "path": "/programs/{program-id}/controls/$count",
    "methods": {}
  },
  "770ecbb2f792": {
    "path": "/programs/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "ProgramControl.Read.All",
            "IsAdmin": false,
            "Description": "Read all programs",
            "FullDescription": "Allows the app to read programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "ProgramControl.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Manage all programs",
            "FullDescription": "Allows the app to read, update, delete and perform actions on programs and program controls in the organization, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaProgramCount",
        "apiReference": ""
      }
    }
  },
  "75874c27e6ab": {
    "path": "/roleManagement/cloudPC/resourceNamespaces/{unifiedRbacResourceNamespace-id}/microsoft.graph.importResourceActions",
    "methods": {}
  },
  "2546e50f1ff6": {
    "path": "/roleManagement/cloudPC/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "b9b7ba6f656a": {
    "path": "/roleManagement/cloudPC/roleDefinitions/{unifiedRoleDefinition-id}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "9b18915c6ab9": {
    "path": "/roleManagement/defender/resourceNamespaces/{unifiedRbacResourceNamespace-id}/microsoft.graph.importResourceActions",
    "methods": {}
  },
  "57f580c047dc": {
    "path": "/roleManagement/defender/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "219ff585315d": {
    "path": "/roleManagement/defender/roleDefinitions/{unifiedRoleDefinition-id}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "4ddb59075e63": {
    "path": "/roleManagement/deviceManagement/resourceNamespaces/{unifiedRbacResourceNamespace-id}/microsoft.graph.importResourceActions",
    "methods": {}
  },
  "fb4dfc5947fa": {
    "path": "/roleManagement/deviceManagement/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "b607a9781ffc": {
    "path": "/roleManagement/deviceManagement/roleDefinitions/{unifiedRoleDefinition-id}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "28dd0c5c0175": {
    "path": "/roleManagement/directory",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectory",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectory",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectory",
        "apiReference": ""
      }
    }
  },
  "4be9e1679a36": {
    "path": "/roleManagement/directory/microsoft.graph.roleScheduleInstances(directoryScopeId='@directoryScopeId',appScopeId='@appScopeId',principalId='@principalId',roleDefinitionId='@roleDefinitionId')",
    "methods": {}
  },
  "f56362f394ca": {
    "path": "/roleManagement/directory/microsoft.graph.roleSchedules(directoryScopeId='@directoryScopeId',appScopeId='@appScopeId',principalId='@principalId',roleDefinitionId='@roleDefinitionId')",
    "methods": {}
  },
  "80c06cfbf65e": {
    "path": "/roleManagement/directory/resourceNamespaces",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryResourceNamespace",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplicationmultiple-list-resourcenamespaces?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryResourceNamespace",
        "apiReference": ""
      }
    }
  },
  "a64b269641a8": {
    "path": "/roleManagement/directory/resourceNamespaces/{unifiedRbacResourceNamespace-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryResourceNamespace",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedrbacresourcenamespace-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryResourceNamespace",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryResourceNamespace",
        "apiReference": ""
      }
    }
  },
  "0c3dc7d778be": {
    "path": "/roleManagement/directory/resourceNamespaces/{unifiedRbacResourceNamespace-id}/microsoft.graph.importResourceActions",
    "methods": {}
  },
  "659fde22d6f7": {
    "path": "/roleManagement/directory/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryResourceNamespaceResourceAction",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedrbacresourcenamespace-list-resourceactions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryResourceNamespaceResourceAction",
        "apiReference": ""
      }
    }
  },
  "78fd142bc0a4": {
    "path": "/roleManagement/directory/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryResourceNamespaceResourceAction",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedrbacresourceaction-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryResourceNamespaceResourceAction",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryResourceNamespaceResourceAction",
        "apiReference": ""
      }
    }
  },
  "9c846200548f": {
    "path": "/roleManagement/directory/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}/authenticationContext",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryResourceNamespaceResourceActionAuthenticationContext",
        "apiReference": ""
      }
    }
  },
  "57b3e00d6505": {
    "path": "/roleManagement/directory/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}/resourceScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      }
    }
  },
  "f0e94f2997c7": {
    "path": "/roleManagement/directory/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryResourceNamespaceResourceActionCount",
        "apiReference": ""
      }
    }
  },
  "7dd585aa01e5": {
    "path": "/roleManagement/directory/resourceNamespaces/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryResourceNamespaceCount",
        "apiReference": ""
      }
    }
  },
  "11deb3120530": {
    "path": "/roleManagement/directory/roleAssignmentApprovals",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentApproval",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryRoleAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "7afd2ee9f7dd": {
    "path": "/roleManagement/directory/roleAssignmentApprovals/{approval-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentApproval",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleAssignmentApproval",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "c0c936bb4df6": {
    "path": "/roleManagement/directory/roleAssignmentApprovals/{approval-id}/steps",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryRoleAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "83ae361d6d36": {
    "path": "/roleManagement/directory/roleAssignmentApprovals/{approval-id}/steps/{approvalStep-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "f19a068016b7": {
    "path": "/roleManagement/directory/roleAssignmentApprovals/{approval-id}/steps/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentApprovalStepCount",
        "apiReference": ""
      }
    }
  },
  "49f46f36000c": {
    "path": "/roleManagement/directory/roleAssignmentApprovals/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentApprovalCount",
        "apiReference": ""
      }
    }
  },
  "738535c48004": {
    "path": "/roleManagement/directory/roleAssignmentApprovals/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "ecec322811c7": {
    "path": "/roleManagement/directory/roleAssignments",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roleassignments?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryRoleAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-post-roleassignments?view=graph-rest-beta"
      }
    }
  },
  "3952973dde79": {
    "path": "/roleManagement/directory/roleAssignments/{unifiedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroleassignment-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroleassignment-delete?view=graph-rest-beta"
      }
    }
  },
  "5f337de58f03": {
    "path": "/roleManagement/directory/roleAssignments/{unifiedRoleAssignment-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentAppScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleAssignmentAppScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleAssignmentAppScope",
        "apiReference": ""
      }
    }
  },
  "6cee6904b0a0": {
    "path": "/roleManagement/directory/roleAssignments/{unifiedRoleAssignment-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "5faf6fb9f8dc": {
    "path": "/roleManagement/directory/roleAssignments/{unifiedRoleAssignment-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentPrincipal",
        "apiReference": ""
      }
    }
  },
  "a79d0383c03f": {
    "path": "/roleManagement/directory/roleAssignments/{unifiedRoleAssignment-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "d3305e1e80c8": {
    "path": "/roleManagement/directory/roleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "e22beea46acf": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all active role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the active role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roleassignmentscheduleinstances?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "48c7559e369c": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all active role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the active role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroleassignmentscheduleinstance-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "551ba680501c": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstanceActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "8a95355ecfa0": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstanceAppScope",
        "apiReference": ""
      }
    }
  },
  "f242ad6f2942": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstanceDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "e008c2df42f7": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstancePrincipal",
        "apiReference": ""
      }
    }
  },
  "6a817a6d79e8": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstanceRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "56b5217d3d3d": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all active role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the active role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleInstanceCount",
        "apiReference": ""
      }
    }
  },
  "7f9ff7ab90c3": {
    "path": "/roleManagement/directory/roleAssignmentScheduleInstances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "f4e77b16239e": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": true,
            "Description": "Read directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, on your behalf.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roleassignmentschedulerequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleEligibilitySchedule.Remove.Directory",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleAssignmentSchedule.Remove.Directory",
            "IsAdmin": false,
            "Description": "Consent name unavailable",
            "FullDescription": "Consent description unavailable",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-post-roleassignmentschedulerequests?view=graph-rest-beta"
      }
    }
  },
  "19686368db5d": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": true,
            "Description": "Read directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, on your behalf.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroleassignmentschedulerequest-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "8187bec7f6d1": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequestActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "29cbcfb36511": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequestAppScope",
        "apiReference": ""
      }
    }
  },
  "1f13b7afc771": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequestDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "500cb5dbec47": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "5039a5ec820b": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequestPrincipal",
        "apiReference": ""
      }
    }
  },
  "31f58b47f2cd": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequestRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "acab1a0f2af9": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/targetSchedule",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequestTargetSchedule",
        "apiReference": ""
      }
    }
  },
  "1c9a6b6e1cf3": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": true,
            "Description": "Read directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, on your behalf.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRequestCount",
        "apiReference": ""
      }
    }
  },
  "ca3d305d8b90": {
    "path": "/roleManagement/directory/roleAssignmentScheduleRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "4e8d719967ab": {
    "path": "/roleManagement/directory/roleAssignmentSchedules",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all active role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the active role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentSchedule",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roleassignmentschedules?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryRoleAssignmentSchedule",
        "apiReference": ""
      }
    }
  },
  "05e80a31f39b": {
    "path": "/roleManagement/directory/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all active role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the active role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentSchedule",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroleassignmentschedule-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleAssignmentSchedule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleAssignmentSchedule",
        "apiReference": ""
      }
    }
  },
  "c25a5138aaf5": {
    "path": "/roleManagement/directory/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "f53a2809ab6a": {
    "path": "/roleManagement/directory/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleAppScope",
        "apiReference": ""
      }
    }
  },
  "a95333b659b9": {
    "path": "/roleManagement/directory/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "108690bf4085": {
    "path": "/roleManagement/directory/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentSchedulePrincipal",
        "apiReference": ""
      }
    }
  },
  "a2969e063bff": {
    "path": "/roleManagement/directory/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "8768c30dda22": {
    "path": "/roleManagement/directory/roleAssignmentSchedules/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleAssignmentSchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all active role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the active role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleAssignmentSchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all policies for privileged role assignments of your company's directory",
            "FullDescription": "Allows the app to read, update, and delete policies for privileged role-based access control (RBAC) assignments of your company's directory, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleAssignmentScheduleCount",
        "apiReference": ""
      }
    }
  },
  "0e2c6da2c4f3": {
    "path": "/roleManagement/directory/roleAssignmentSchedules/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "a660a0f58b30": {
    "path": "/roleManagement/directory/roleDefinitions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roledefinitions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaRoleManagementDirectoryRoleDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-post-roledefinitions?view=graph-rest-beta"
      }
    }
  },
  "0316151e55e6": {
    "path": "/roleManagement/directory/roleDefinitions/{unifiedRoleDefinition-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroledefinition-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Update-MgBetaRoleManagementDirectoryRoleDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroledefinition-update?view=graph-rest-beta"
      },
      "delete": {
        "permissions": [
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroledefinition-delete?view=graph-rest-beta"
      }
    }
  },
  "8be76b95c247": {
    "path": "/roleManagement/directory/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      }
    }
  },
  "db3d165c03ee": {
    "path": "/roleManagement/directory/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      }
    }
  },
  "12cec878236d": {
    "path": "/roleManagement/directory/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "42cd959fa09d": {
    "path": "/roleManagement/directory/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFromCount",
        "apiReference": ""
      }
    }
  },
  "d64fbe96f323": {
    "path": "/roleManagement/directory/roleDefinitions/{unifiedRoleDefinition-id}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "8aae18848d04": {
    "path": "/roleManagement/directory/roleDefinitions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "312ee5615aa9": {
    "path": "/roleManagement/directory/roleEligibilityScheduleInstances",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all eligible role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all eligible role assignments and schedules for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roleeligibilityscheduleinstances?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "2e690777c732": {
    "path": "/roleManagement/directory/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all eligible role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all eligible role assignments and schedules for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstance",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroleeligibilityscheduleinstance-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "c91f5cff9a15": {
    "path": "/roleManagement/directory/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstanceAppScope",
        "apiReference": ""
      }
    }
  },
  "a603351a8de5": {
    "path": "/roleManagement/directory/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstanceDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "c082b46e7d89": {
    "path": "/roleManagement/directory/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstancePrincipal",
        "apiReference": ""
      }
    }
  },
  "72de444c39b8": {
    "path": "/roleManagement/directory/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstanceRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "2b5fe5b5c32d": {
    "path": "/roleManagement/directory/roleEligibilityScheduleInstances/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all eligible role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all eligible role assignments and schedules for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleInstanceCount",
        "apiReference": ""
      }
    }
  },
  "14511627607b": {
    "path": "/roleManagement/directory/roleEligibilityScheduleInstances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "d46c2cfc8234": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all eligible role assignments for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments for your company's directory, on your behalf. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read and write directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, on your behalf. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": true,
            "Description": "Read directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, on your behalf.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete  all eligible role assignments for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments for your company's directory, on your behalf. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roleeligibilityschedulerequests?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all eligible role assignments and schedules for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-post-roleeligibilityschedulerequests?view=graph-rest-beta"
      }
    }
  },
  "210862791a0e": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete  all eligible role assignments for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments for your company's directory, on your behalf. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read and write directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, on your behalf. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": true,
            "Description": "Read directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, on your behalf.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all eligible role assignments for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments for your company's directory, on your behalf. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequest",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroleeligibilityschedulerequest-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "e53858ea1dc1": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequestAppScope",
        "apiReference": ""
      }
    }
  },
  "48aad9272e12": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequestDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "0ebab1e95df3": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "0f74a233e368": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequestPrincipal",
        "apiReference": ""
      }
    }
  },
  "2da5a7766f26": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequestRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "d739fc8d20e9": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/targetSchedule",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequestTargetSchedule",
        "apiReference": ""
      }
    }
  },
  "1e8ee849a1a2": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": true,
            "Description": "Read all eligible role assignments for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments for your company's directory, on your behalf. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read and write directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, on your behalf. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": true,
            "Description": "Read directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, on your behalf.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": true,
            "Description": "Read, update, and delete  all eligible role assignments for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments for your company's directory, on your behalf. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRequestCount",
        "apiReference": ""
      }
    }
  },
  "545ce0c4bdaa": {
    "path": "/roleManagement/directory/roleEligibilityScheduleRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "02067753afe7": {
    "path": "/roleManagement/directory/roleEligibilitySchedules",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all eligible role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all eligible role assignments and schedules for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilitySchedule",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roleeligibilityschedules?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryRoleEligibilitySchedule",
        "apiReference": ""
      }
    }
  },
  "4ece8b34a0bf": {
    "path": "/roleManagement/directory/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all eligible role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all eligible role assignments and schedules for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilitySchedule",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroleeligibilityschedule-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryRoleEligibilitySchedule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryRoleEligibilitySchedule",
        "apiReference": ""
      }
    }
  },
  "857263199ca2": {
    "path": "/roleManagement/directory/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleAppScope",
        "apiReference": ""
      }
    }
  },
  "5cbfcad19cda": {
    "path": "/roleManagement/directory/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "ed5a2ced1e0a": {
    "path": "/roleManagement/directory/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilitySchedulePrincipal",
        "apiReference": ""
      }
    }
  },
  "be0c3d4c3e88": {
    "path": "/roleManagement/directory/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "e12c0a39d61a": {
    "path": "/roleManagement/directory/roleEligibilitySchedules/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleEligibilitySchedule.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all eligible role assignments and role schedules for your company's directory",
            "FullDescription": "Allows the app to read the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes reading directory role templates, and directory roles.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read role-based access control (RBAC) settings for all RBAC providers without a signed-in user. This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleEligibilitySchedule.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read, update, and delete all eligible role assignments and schedules for your company's directory",
            "FullDescription": "Allows the app to read and manage the eligible role-based access control (RBAC) assignments and schedules for your company's directory, without a signed-in user. This includes managing eligible directory role membership, and reading directory role templates, directory roles and eligible memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryRoleEligibilityScheduleCount",
        "apiReference": ""
      }
    }
  },
  "8d2780a55b82": {
    "path": "/roleManagement/directory/roleEligibilitySchedules/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "54c13dc8e622": {
    "path": "/roleManagement/directory/transitiveRoleAssignments",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryTransitiveRoleAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-transitiveroleassignments?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementDirectoryTransitiveRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "a5d637870057": {
    "path": "/roleManagement/directory/transitiveRoleAssignments/{unifiedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryTransitiveRoleAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryTransitiveRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryTransitiveRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "885353b6fc2e": {
    "path": "/roleManagement/directory/transitiveRoleAssignments/{unifiedRoleAssignment-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementDirectoryTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementDirectoryTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      }
    }
  },
  "42d42edb3e38": {
    "path": "/roleManagement/directory/transitiveRoleAssignments/{unifiedRoleAssignment-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryTransitiveRoleAssignmentDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "43e55acc42f3": {
    "path": "/roleManagement/directory/transitiveRoleAssignments/{unifiedRoleAssignment-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryTransitiveRoleAssignmentPrincipal",
        "apiReference": ""
      }
    }
  },
  "c3c74a4bf164": {
    "path": "/roleManagement/directory/transitiveRoleAssignments/{unifiedRoleAssignment-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementDirectoryTransitiveRoleAssignmentRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "8259fd2b81f6": {
    "path": "/roleManagement/directory/transitiveRoleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementDirectoryTransitiveRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "890c0c1eb4f5": {
    "path": "/roleManagement/enterpriseApps",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseApp",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseApp",
        "apiReference": ""
      }
    }
  },
  "a5ad99055d84": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseApp",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseApp",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseApp",
        "apiReference": ""
      }
    }
  },
  "8d1f5fbe5070": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/microsoft.graph.roleScheduleInstances(directoryScopeId='@directoryScopeId',appScopeId='@appScopeId',principalId='@principalId',roleDefinitionId='@roleDefinitionId')",
    "methods": {}
  },
  "5c6b88a0a9f4": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/microsoft.graph.roleSchedules(directoryScopeId='@directoryScopeId',appScopeId='@appScopeId',principalId='@principalId',roleDefinitionId='@roleDefinitionId')",
    "methods": {}
  },
  "2788b3c60427": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppResourceNamespace",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppResourceNamespace",
        "apiReference": ""
      }
    }
  },
  "10a8c3c45d6e": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces/{unifiedRbacResourceNamespace-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppResourceNamespace",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppResourceNamespace",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppResourceNamespace",
        "apiReference": ""
      }
    }
  },
  "8977d633473f": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces/{unifiedRbacResourceNamespace-id}/microsoft.graph.importResourceActions",
    "methods": {}
  },
  "56fa4d436768": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceAction",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceAction",
        "apiReference": ""
      }
    }
  },
  "cfa919c8baac": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceAction",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceAction",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceAction",
        "apiReference": ""
      }
    }
  },
  "32cb68cd5a6e": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}/authenticationContext",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceActionAuthenticationContext",
        "apiReference": ""
      }
    }
  },
  "8ce7b421b634": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}/resourceScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      }
    }
  },
  "f1acac70d5c7": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppResourceNamespaceResourceActionCount",
        "apiReference": ""
      }
    }
  },
  "ec2d6692548f": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/resourceNamespaces/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppResourceNamespaceCount",
        "apiReference": ""
      }
    }
  },
  "f4b359529bd3": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentApprovals",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentApproval",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "4af4ab22742e": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentApprovals/{approval-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentApproval",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleAssignmentApproval",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "c60666ccb1b5": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentApprovals/{approval-id}/steps",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "8e1f1b825904": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentApprovals/{approval-id}/steps/{approvalStep-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "56bfb80c4b84": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentApprovals/{approval-id}/steps/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentApprovalStepCount",
        "apiReference": ""
      }
    }
  },
  "4724134b08a6": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentApprovals/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentApprovalCount",
        "apiReference": ""
      }
    }
  },
  "04cbdf08d298": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentApprovals/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "a404d7ba39ba": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignment",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "d5f6d91c0764": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignments/{unifiedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "a5e52b9a72ea": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignments/{unifiedRoleAssignment-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentAppScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleAssignmentAppScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleAssignmentAppScope",
        "apiReference": ""
      }
    }
  },
  "63f0d7fde2b0": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignments/{unifiedRoleAssignment-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "624c9dd0c155": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignments/{unifiedRoleAssignment-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentPrincipal",
        "apiReference": ""
      }
    }
  },
  "30a6926ce9b6": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignments/{unifiedRoleAssignment-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "2d4824278f79": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "b6c41745fb48": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstance",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "831d6ddf8761": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "a915d9645c56": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstanceActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "fe0df19d67c1": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstanceAppScope",
        "apiReference": ""
      }
    }
  },
  "c4706ee5bcad": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstanceDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "5059da6f8cf1": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstancePrincipal",
        "apiReference": ""
      }
    }
  },
  "4b1bff8e5d32": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstanceRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "defb0220e190": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleInstanceCount",
        "apiReference": ""
      }
    }
  },
  "bf68d8498b11": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleInstances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "67826c049398": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "8a272982a387": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "071135af2266": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequestActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "4ca77841b5ec": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequestAppScope",
        "apiReference": ""
      }
    }
  },
  "e22f05e18df4": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequestDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "06104b5868a8": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "9a6e01f1173a": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequestPrincipal",
        "apiReference": ""
      }
    }
  },
  "8d0922aaf18c": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequestRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "8ea3936dce8c": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/targetSchedule",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequestTargetSchedule",
        "apiReference": ""
      }
    }
  },
  "66cc9cd5dadb": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRequestCount",
        "apiReference": ""
      }
    }
  },
  "67b8cf0504ca": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentScheduleRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "3835ea79f4e8": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentSchedule",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleAssignmentSchedule",
        "apiReference": ""
      }
    }
  },
  "8c0b47be31ff": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentSchedule",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleAssignmentSchedule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleAssignmentSchedule",
        "apiReference": ""
      }
    }
  },
  "24e7e7d13f95": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "60f10b03a16e": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleAppScope",
        "apiReference": ""
      }
    }
  },
  "1ea8511404cd": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "b2aa41a09028": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentSchedulePrincipal",
        "apiReference": ""
      }
    }
  },
  "86c23a857a52": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "50dd543b4706": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleAssignmentScheduleCount",
        "apiReference": ""
      }
    }
  },
  "bb44b585616a": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleAssignmentSchedules/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "344cccf9b630": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleDefinitions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleDefinition",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "acfa6aab08f7": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleDefinitions/{unifiedRoleDefinition-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleDefinition",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "38aa715fd891": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      }
    }
  },
  "2b035d1964ac": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      }
    }
  },
  "e2931f927aae": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "4123d27caba3": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleDefinitionInheritPermissionFromCount",
        "apiReference": ""
      }
    }
  },
  "18f9cb665705": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleDefinitions/{unifiedRoleDefinition-id}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "09ca7edaa156": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleDefinitions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "4e67af16b9ff": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleInstances",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstance",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "4903830f09e4": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "e859c017b377": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstanceAppScope",
        "apiReference": ""
      }
    }
  },
  "a5a202f90b11": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstanceDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "c63ce4ede214": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstancePrincipal",
        "apiReference": ""
      }
    }
  },
  "40dbe896d57e": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstanceRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "0ddaa445a5ae": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleInstances/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleInstanceCount",
        "apiReference": ""
      }
    }
  },
  "ab2f3ed45271": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleInstances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "19df2cc53b8f": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "cd83271a2dfa": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "c93bb39f5846": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequestAppScope",
        "apiReference": ""
      }
    }
  },
  "805c9a61d7e7": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequestDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "93ebde31c835": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "41a8bd892d79": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequestPrincipal",
        "apiReference": ""
      }
    }
  },
  "4620119f740a": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequestRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "5d875c19ba72": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/targetSchedule",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequestTargetSchedule",
        "apiReference": ""
      }
    }
  },
  "00c649f6a38e": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRequestCount",
        "apiReference": ""
      }
    }
  },
  "5924d7486fe9": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilityScheduleRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "9cb8dde0523e": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilitySchedules",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilitySchedule",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppRoleEligibilitySchedule",
        "apiReference": ""
      }
    }
  },
  "c4f61c3e9c33": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilitySchedule",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppRoleEligibilitySchedule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppRoleEligibilitySchedule",
        "apiReference": ""
      }
    }
  },
  "57f7da7f16db": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleAppScope",
        "apiReference": ""
      }
    }
  },
  "80b83a7237fa": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "990f08ef681a": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilitySchedulePrincipal",
        "apiReference": ""
      }
    }
  },
  "b10861bf0d46": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "645f2309e3a0": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilitySchedules/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppRoleEligibilityScheduleCount",
        "apiReference": ""
      }
    }
  },
  "6070104cd55d": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/roleEligibilitySchedules/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "c751555fc240": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/transitiveRoleAssignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignment",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "67ec9cdb313d": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/transitiveRoleAssignments/{unifiedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "41582603865d": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/transitiveRoleAssignments/{unifiedRoleAssignment-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      }
    }
  },
  "e1fd78dff06a": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/transitiveRoleAssignments/{unifiedRoleAssignment-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignmentDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "cfc66ad2b5ff": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/transitiveRoleAssignments/{unifiedRoleAssignment-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignmentPrincipal",
        "apiReference": ""
      }
    }
  },
  "911ddd185938": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/transitiveRoleAssignments/{unifiedRoleAssignment-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignmentRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "d7247ff0548e": {
    "path": "/roleManagement/enterpriseApps/{rbacApplication-id}/transitiveRoleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppTransitiveRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "5ee7fa7ff4b1": {
    "path": "/roleManagement/enterpriseApps/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEnterpriseAppCount",
        "apiReference": ""
      }
    }
  },
  "a09ab5a57707": {
    "path": "/roleManagement/entitlementManagement",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagement",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagement",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagement",
        "apiReference": ""
      }
    }
  },
  "8a7c0821baf4": {
    "path": "/roleManagement/entitlementManagement/microsoft.graph.roleScheduleInstances(directoryScopeId='@directoryScopeId',appScopeId='@appScopeId',principalId='@principalId',roleDefinitionId='@roleDefinitionId')",
    "methods": {}
  },
  "77dbd4ade617": {
    "path": "/roleManagement/entitlementManagement/microsoft.graph.roleSchedules(directoryScopeId='@directoryScopeId',appScopeId='@appScopeId',principalId='@principalId',roleDefinitionId='@roleDefinitionId')",
    "methods": {}
  },
  "20eb87a680ed": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementResourceNamespace",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementResourceNamespace",
        "apiReference": ""
      }
    }
  },
  "706ec89e7248": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces/{unifiedRbacResourceNamespace-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementResourceNamespace",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementResourceNamespace",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementResourceNamespace",
        "apiReference": ""
      }
    }
  },
  "80d662b8bcd8": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces/{unifiedRbacResourceNamespace-id}/microsoft.graph.importResourceActions",
    "methods": {}
  },
  "904d76eb0da4": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceAction",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceAction",
        "apiReference": ""
      }
    }
  },
  "264c836e95ca": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceAction",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceAction",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceAction",
        "apiReference": ""
      }
    }
  },
  "3dd9ffff0301": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}/authenticationContext",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceActionAuthenticationContext",
        "apiReference": ""
      }
    }
  },
  "9d7ec539d7ab": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/{unifiedRbacResourceAction-id}/resourceScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceActionResourceScope",
        "apiReference": ""
      }
    }
  },
  "d841e07b4bc1": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces/{unifiedRbacResourceNamespace-id}/resourceActions/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementResourceNamespaceResourceActionCount",
        "apiReference": ""
      }
    }
  },
  "900c7da4a69d": {
    "path": "/roleManagement/entitlementManagement/resourceNamespaces/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementResourceNamespaceCount",
        "apiReference": ""
      }
    }
  },
  "ada011f4f362": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentApprovals",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentApproval",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "917d0ad99ef7": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentApprovals/{approval-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentApproval",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleAssignmentApproval",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleAssignmentApproval",
        "apiReference": ""
      }
    }
  },
  "bfb0321f174d": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentApprovals/{approval-id}/steps",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "3bd726d1ff6a": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentApprovals/{approval-id}/steps/{approvalStep-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleAssignmentApprovalStep",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleAssignmentApprovalStep",
        "apiReference": ""
      }
    }
  },
  "f6dcb0e61114": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentApprovals/{approval-id}/steps/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentApprovalStepCount",
        "apiReference": ""
      }
    }
  },
  "67b79670aee7": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentApprovals/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentApprovalCount",
        "apiReference": ""
      }
    }
  },
  "2bd07a8a585d": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentApprovals/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "6f33414ce3fb": {
    "path": "/roleManagement/entitlementManagement/roleAssignments",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roleassignments?view=graph-rest-beta"
      },
      "post": {
        "permissions": [
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleAssignment",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-post-roleassignments?view=graph-rest-beta"
      }
    }
  },
  "22356d7f0093": {
    "path": "/roleManagement/entitlementManagement/roleAssignments/{unifiedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "02f2925f5aec": {
    "path": "/roleManagement/entitlementManagement/roleAssignments/{unifiedRoleAssignment-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentAppScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleAssignmentAppScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleAssignmentAppScope",
        "apiReference": ""
      }
    }
  },
  "5df5c7a469b6": {
    "path": "/roleManagement/entitlementManagement/roleAssignments/{unifiedRoleAssignment-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "83b8bb3ab959": {
    "path": "/roleManagement/entitlementManagement/roleAssignments/{unifiedRoleAssignment-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentPrincipal",
        "apiReference": ""
      }
    }
  },
  "6c67dbdbbed9": {
    "path": "/roleManagement/entitlementManagement/roleAssignments/{unifiedRoleAssignment-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "33a37718462a": {
    "path": "/roleManagement/entitlementManagement/roleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": false,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "f01047b31c13": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstance",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "e71890ddc915": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "97076fa3f9cb": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstanceActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "ded50074a455": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstanceAppScope",
        "apiReference": ""
      }
    }
  },
  "11a9d418e3c9": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstanceDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "6a6c3f4c306e": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstancePrincipal",
        "apiReference": ""
      }
    }
  },
  "515c56999aad": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances/{unifiedRoleAssignmentScheduleInstance-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstanceRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "a30230788969": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleInstanceCount",
        "apiReference": ""
      }
    }
  },
  "6122b69cff5b": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleInstances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "671b5e5f06c8": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "387cceeee010": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "28012c00b261": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequestActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "9afe2489f7d4": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequestAppScope",
        "apiReference": ""
      }
    }
  },
  "0850c1c7e907": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequestDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "eb26d217b07a": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "a07f33381f0d": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequestPrincipal",
        "apiReference": ""
      }
    }
  },
  "46cf028c89fb": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequestRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "32504ead13e0": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/{unifiedRoleAssignmentScheduleRequest-id}/targetSchedule",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequestTargetSchedule",
        "apiReference": ""
      }
    }
  },
  "30c513fc4dbf": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRequestCount",
        "apiReference": ""
      }
    }
  },
  "6a4d44552156": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentScheduleRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "c3d14485db24": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentSchedule",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleAssignmentSchedule",
        "apiReference": ""
      }
    }
  },
  "ae89b533e2af": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentSchedule",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleAssignmentSchedule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleAssignmentSchedule",
        "apiReference": ""
      }
    }
  },
  "a5bae9ec6d32": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/activatedUsing",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleActivatedUsing",
        "apiReference": ""
      }
    }
  },
  "ceadd53dbf05": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleAppScope",
        "apiReference": ""
      }
    }
  },
  "039d866324b7": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "2662196fea53": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentSchedulePrincipal",
        "apiReference": ""
      }
    }
  },
  "f8ede96e3776": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules/{unifiedRoleAssignmentSchedule-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "39adec106ac4": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleAssignmentScheduleCount",
        "apiReference": ""
      }
    }
  },
  "a8267c454f03": {
    "path": "/roleManagement/entitlementManagement/roleAssignmentSchedules/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "62964183a7f2": {
    "path": "/roleManagement/entitlementManagement/roleDefinitions",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "CloudPC.Read.All",
            "IsAdmin": false,
            "Description": "Read Cloud PCs",
            "FullDescription": "Allows the app to read the properties of Cloud PCs, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write entitlement management resources",
            "FullDescription": "Allows the app to request access to and management of access packages and related entitlement management resources that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as other users, groups.  It does not allow the app to delete users or groups, or reset user passwords.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": true,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "DeviceManagementRBAC.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write Microsoft Intune RBAC settings",
            "FullDescription": "Allows the app to read and write the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "DeviceManagementRBAC.Read.All",
            "IsAdmin": true,
            "Description": "Read Microsoft Intune RBAC settings",
            "FullDescription": "Allows the app to read the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "CloudPC.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write Cloud PCs",
            "FullDescription": "Allows the app to read and write the properties of Cloud PCs, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.CloudPC",
            "IsAdmin": false,
            "Description": "Read and write all Cloud PC RBAC settings",
            "FullDescription": "Allows the app to read and manage the Cloud PC role-based access control (RBAC) settings, without a signed-in user. This includes reading and managing Cloud PC role definitions and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.CloudPC",
            "IsAdmin": false,
            "Description": "Read Cloud PC RBAC settings",
            "FullDescription": "Allows the app to read the Cloud PC role-based access control (RBAC) settings, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/rbacapplication-list-roledefinitions?view=graph-rest-beta"
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "b039ff57e769": {
    "path": "/roleManagement/entitlementManagement/roleDefinitions/{unifiedRoleDefinition-id}",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.CloudPC",
            "IsAdmin": true,
            "Description": "Read and write Cloud PC RBAC settings",
            "FullDescription": "Allows the app to read and manage the Cloud PC role-based access control (RBAC) settings, on your behalf. This includes reading and managing Cloud PC role definitions and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": true,
            "Description": "Read directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, on your behalf.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.CloudPC",
            "IsAdmin": true,
            "Description": "Read Cloud PC RBAC settings",
            "FullDescription": "Allows the app to read the Cloud PC role-based access control (RBAC) settings, on your behalf. This includes reading Cloud PC role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write all entitlement management resources",
            "FullDescription": "Allows the app to read and write access packages and related entitlement management resources without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user.  Does not allow user or group deletion.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": false,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "DeviceManagementRBAC.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write Microsoft Intune RBAC settings",
            "FullDescription": "Allows the app to read and write the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "DeviceManagementRBAC.Read.All",
            "IsAdmin": false,
            "Description": "Read Microsoft Intune RBAC settings",
            "FullDescription": "Allows the app to read the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "CloudPC.ReadWrite.All",
            "IsAdmin": false,
            "Description": "Read and write Cloud PCs",
            "FullDescription": "Allows the app to read and write the properties of Cloud PCs, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "CloudPC.Read.All",
            "IsAdmin": false,
            "Description": "Read Cloud PCs",
            "FullDescription": "Allows the app to read the properties of Cloud PCs, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleDefinition",
        "apiReference": "https://learn.microsoft.com/graph/api/unifiedroledefinition-get?view=graph-rest-beta"
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleDefinition",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "ba7ef6adc2d3": {
    "path": "/roleManagement/entitlementManagement/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      }
    }
  },
  "5762a9901c62": {
    "path": "/roleManagement/entitlementManagement/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleDefinitionInheritPermissionFrom",
        "apiReference": ""
      }
    }
  },
  "53851ac89370": {
    "path": "/roleManagement/entitlementManagement/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "06ed84037746": {
    "path": "/roleManagement/entitlementManagement/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleDefinitionInheritPermissionFromCount",
        "apiReference": ""
      }
    }
  },
  "d776b3c5ca98": {
    "path": "/roleManagement/entitlementManagement/roleDefinitions/{unifiedRoleDefinition-id}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "8362030b355e": {
    "path": "/roleManagement/entitlementManagement/roleDefinitions/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "EntitlementManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read all entitlement management resources",
            "FullDescription": "Allows the app to read access packages and related entitlement management resources that you have access to.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "CloudPC.Read.All",
            "IsAdmin": false,
            "Description": "Read Cloud PCs",
            "FullDescription": "Allows the app to read the properties of Cloud PCs, without a signed-in user.",
            "IsLeastPrivilege": true,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.All",
            "IsAdmin": true,
            "Description": "Read role management data for all RBAC providers",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for all RBAC providers, on your behalf.  This includes reading role definitions and role assignments.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "EntitlementManagement.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write entitlement management resources",
            "FullDescription": "Allows the app to request access to and management of access packages and related entitlement management resources that you have access to.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Directory.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write directory data",
            "FullDescription": "Allows the app to read and write data in your organization's directory, such as other users, groups.  It does not allow the app to delete users or groups, or reset user passwords.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "Directory.Read.All",
            "IsAdmin": true,
            "Description": "Read directory data",
            "FullDescription": "Allows the app to read data in your organization's directory.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "DeviceManagementRBAC.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write Microsoft Intune RBAC settings",
            "FullDescription": "Allows the app to read and write the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "DeviceManagementRBAC.Read.All",
            "IsAdmin": true,
            "Description": "Read Microsoft Intune RBAC settings",
            "FullDescription": "Allows the app to read the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "CloudPC.ReadWrite.All",
            "IsAdmin": true,
            "Description": "Read and write Cloud PCs",
            "FullDescription": "Allows the app to read and write the properties of Cloud PCs, on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "RoleManagement.ReadWrite.Directory",
            "IsAdmin": false,
            "Description": "Read and write all directory RBAC settings",
            "FullDescription": "Allows the app to read and manage the role-based access control (RBAC) settings for your company's directory, without a signed-in user. This includes instantiating directory roles and managing directory role membership, and reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.ReadWrite.CloudPC",
            "IsAdmin": false,
            "Description": "Read and write all Cloud PC RBAC settings",
            "FullDescription": "Allows the app to read and manage the Cloud PC role-based access control (RBAC) settings, without a signed-in user. This includes reading and managing Cloud PC role definitions and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.Directory",
            "IsAdmin": false,
            "Description": "Read all directory RBAC settings",
            "FullDescription": "Allows the app to read the role-based access control (RBAC) settings for your company's directory, without a signed-in user.  This includes reading directory role templates, directory roles and memberships.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          },
          {
            "Name": "RoleManagement.Read.CloudPC",
            "IsAdmin": false,
            "Description": "Read Cloud PC RBAC settings",
            "FullDescription": "Allows the app to read the Cloud PC role-based access control (RBAC) settings, without a signed-in user.",
            "IsLeastPrivilege": false,
            "PermissionType": "Application"
          }
        ],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleDefinitionCount",
        "apiReference": ""
      }
    }
  },
  "4cf9cabaa53d": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleInstances",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstance",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "dbe404784afa": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstance",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstance",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstance",
        "apiReference": ""
      }
    }
  },
  "d1a13ec23ce5": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstanceAppScope",
        "apiReference": ""
      }
    }
  },
  "8d48c4b28569": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstanceDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "adb6acf8e01a": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstancePrincipal",
        "apiReference": ""
      }
    }
  },
  "62d7beb718b2": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleInstances/{unifiedRoleEligibilityScheduleInstance-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstanceRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "ae808ad5a684": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleInstances/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleInstanceCount",
        "apiReference": ""
      }
    }
  },
  "21ac9e1a9185": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleInstances/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "328b5a94a8a0": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequest",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "783e5cca6be3": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequest",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequest",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequest",
        "apiReference": ""
      }
    }
  },
  "313fa09d902b": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequestAppScope",
        "apiReference": ""
      }
    }
  },
  "c284fc31763f": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequestDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "c2a76d81cc1b": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/microsoft.graph.cancel",
    "methods": {}
  },
  "21ecc69235bf": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequestPrincipal",
        "apiReference": ""
      }
    }
  },
  "7b8342a314f5": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequestRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "baf243ce00cb": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/{unifiedRoleEligibilityScheduleRequest-id}/targetSchedule",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequestTargetSchedule",
        "apiReference": ""
      }
    }
  },
  "4ed5fa9ba042": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRequestCount",
        "apiReference": ""
      }
    }
  },
  "9585c324e561": {
    "path": "/roleManagement/entitlementManagement/roleEligibilityScheduleRequests/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "d2b3266e4b60": {
    "path": "/roleManagement/entitlementManagement/roleEligibilitySchedules",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilitySchedule",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementRoleEligibilitySchedule",
        "apiReference": ""
      }
    }
  },
  "c7546058a6dd": {
    "path": "/roleManagement/entitlementManagement/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilitySchedule",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementRoleEligibilitySchedule",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementRoleEligibilitySchedule",
        "apiReference": ""
      }
    }
  },
  "c33b3ab393b3": {
    "path": "/roleManagement/entitlementManagement/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleAppScope",
        "apiReference": ""
      }
    }
  },
  "0387d94029d5": {
    "path": "/roleManagement/entitlementManagement/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "8862c0e8f43c": {
    "path": "/roleManagement/entitlementManagement/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilitySchedulePrincipal",
        "apiReference": ""
      }
    }
  },
  "3909353c3287": {
    "path": "/roleManagement/entitlementManagement/roleEligibilitySchedules/{unifiedRoleEligibilitySchedule-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "762fe75c3e61": {
    "path": "/roleManagement/entitlementManagement/roleEligibilitySchedules/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementRoleEligibilityScheduleCount",
        "apiReference": ""
      }
    }
  },
  "374b76de6bc0": {
    "path": "/roleManagement/entitlementManagement/roleEligibilitySchedules/microsoft.graph.filterByCurrentUser(on='{on}')",
    "methods": {}
  },
  "62ed2bb4827b": {
    "path": "/roleManagement/entitlementManagement/transitiveRoleAssignments",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignment",
        "apiReference": ""
      },
      "post": {
        "permissions": [],
        "command": "New-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "743ecd486cd6": {
    "path": "/roleManagement/entitlementManagement/transitiveRoleAssignments/{unifiedRoleAssignment-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignment",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignment",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignment",
        "apiReference": ""
      }
    }
  },
  "ff6894f587e4": {
    "path": "/roleManagement/entitlementManagement/transitiveRoleAssignments/{unifiedRoleAssignment-id}/appScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      },
      "patch": {
        "permissions": [],
        "command": "Update-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      },
      "delete": {
        "permissions": [],
        "command": "Remove-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignmentAppScope",
        "apiReference": ""
      }
    }
  },
  "fbd136c867e3": {
    "path": "/roleManagement/entitlementManagement/transitiveRoleAssignments/{unifiedRoleAssignment-id}/directoryScope",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignmentDirectoryScope",
        "apiReference": ""
      }
    }
  },
  "fd73eedd338e": {
    "path": "/roleManagement/entitlementManagement/transitiveRoleAssignments/{unifiedRoleAssignment-id}/principal",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignmentPrincipal",
        "apiReference": ""
      }
    }
  },
  "a3a88b5195dc": {
    "path": "/roleManagement/entitlementManagement/transitiveRoleAssignments/{unifiedRoleAssignment-id}/roleDefinition",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignmentRoleDefinition",
        "apiReference": ""
      }
    }
  },
  "3875168b564c": {
    "path": "/roleManagement/entitlementManagement/transitiveRoleAssignments/$count",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaRoleManagementEntitlementManagementTransitiveRoleAssignmentCount",
        "apiReference": ""
      }
    }
  },
  "62469dbb2d88": {
    "path": "/roleManagement/exchange/resourceNamespaces/{unifiedRbacResourceNamespace-id}/microsoft.graph.importResourceActions",
    "methods": {}
  },
  "4f32328c9e16": {
    "path": "/roleManagement/exchange/roleDefinitions/{unifiedRoleDefinition-id}/inheritsPermissionsFrom/{unifiedRoleDefinition-id1}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "4727ed03ae85": {
    "path": "/roleManagement/exchange/roleDefinitions/{unifiedRoleDefinition-id}/microsoft.graph.assignedPrincipals(transitive=@transitive,directoryScopeType='@directoryScopeType',directoryScopeId='@directoryScopeId')",
    "methods": {}
  },
  "d91077923edf": {
    "path": "/users/{user-id}/agreementAcceptances",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AgreementAcceptance.Read",
            "IsAdmin": true,
            "Description": "Read your terms of use acceptance statuses",
            "FullDescription": "Allows the app to read your terms of use acceptance statuses.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AgreementAcceptance.Read.All",
            "IsAdmin": true,
            "Description": "Read all terms of use acceptance statuses",
            "FullDescription": "Allows the app to read terms of use acceptance statuses on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAgreementAcceptance",
        "apiReference": ""
      }
    }
  },
  "4a8a9de85a4f": {
    "path": "/users/{user-id}/agreementAcceptances/{agreementAcceptance-id}",
    "methods": {
      "get": {
        "permissions": [],
        "command": "Get-MgBetaUserAgreementAcceptance",
        "apiReference": ""
      }
    }
  },
  "28be1a8eba27": {
    "path": "/users/{user-id}/agreementAcceptances/$count",
    "methods": {
      "get": {
        "permissions": [
          {
            "Name": "AgreementAcceptance.Read",
            "IsAdmin": true,
            "Description": "Read your terms of use acceptance statuses",
            "FullDescription": "Allows the app to read your terms of use acceptance statuses.",
            "IsLeastPrivilege": true,
            "PermissionType": "DelegatedWork"
          },
          {
            "Name": "AgreementAcceptance.Read.All",
            "IsAdmin": true,
            "Description": "Read all terms of use acceptance statuses",
            "FullDescription": "Allows the app to read terms of use acceptance statuses on your behalf.",
            "IsLeastPrivilege": false,
            "PermissionType": "DelegatedWork"
          }
        ],
        "command": "Get-MgBetaUserAgreementAcceptanceCount",
        "apiReference": ""
      }
    }
  }
}