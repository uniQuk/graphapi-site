{
  "/users/{user-id}/calendar/events/{event-id}/exceptionOccurrences/{event-id1}/instances/microsoft.graph.delta()": {
    "get": {
      "tags": [
        "users.Functions"
      ],
      "summary": "Invoke function delta",
      "description": "Get a set of event resources that have been added, deleted, or updated in one or more calendars. You can get specific types of these incremental changes in the events in all the calendars of a mailbox or in a specific calendar, or in an event collection of a calendarView (range of events defined by start and end dates) of a calendar. The calendar can be the default calendar or some other specified calendar of the user's. In the case of getting incremental changes on calendarView, the calendar can be a group calendar as well. Typically, synchronizing events in a calendar or calendarView in a local store entails a round of multiple delta function calls. The initial call is a full synchronization, and every subsequent delta call in the same round gets the incremental changes (additions, deletions, or updates). This allows you to maintain and synchronize a local store of events in the specified calendar, without having to fetch all the events of that calendar from the server every time. The following table lists the differences between the delta function on events and the delta function on a calendarView in a calendar.",
      "externalDocs": {
        "description": "Find more info here",
        "url": "https://learn.microsoft.com/graph/api/event-delta?view=graph-rest-beta"
      },
      "operationId": "user.calendar.event.exceptionOccurrence.instance_delta",
      "parameters": [
        {
          "name": "user-id",
          "in": "path",
          "description": "The unique identifier of user",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string"
          },
          "x-ms-docs-key-type": "user"
        },
        {
          "name": "event-id",
          "in": "path",
          "description": "The unique identifier of event",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string"
          },
          "x-ms-docs-key-type": "event"
        },
        {
          "name": "event-id1",
          "in": "path",
          "description": "The unique identifier of event",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string"
          },
          "x-ms-docs-key-type": "event"
        },
        {
          "name": "startDateTime",
          "in": "query",
          "description": "The start date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
          "required": true,
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "endDateTime",
          "in": "query",
          "description": "The end date and time of the time range in the function, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00",
          "required": true,
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "$top",
          "in": "query",
          "description": "Show only the first n items",
          "style": "form",
          "explode": false,
          "schema": {
            "minimum": 0,
            "type": "integer"
          },
          "example": 50
        },
        {
          "name": "$skip",
          "in": "query",
          "description": "Skip the first n items",
          "style": "form",
          "explode": false,
          "schema": {
            "minimum": 0,
            "type": "integer"
          }
        },
        {
          "name": "$search",
          "in": "query",
          "description": "Search items by search phrases",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "$filter",
          "in": "query",
          "description": "Filter items by property values",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "$count",
          "in": "query",
          "description": "Include count of items",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "$select",
          "in": "query",
          "description": "Select properties to be returned",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "$orderby",
          "in": "query",
          "description": "Order items by property values",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "$expand",
          "in": "query",
          "description": "Expand related entities",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      ],
      "responses": {
        "2XX": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "title": "Collection of event",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.event"
                    }
                  },
                  "@odata.nextLink": {
                    "type": "string",
                    "nullable": true
                  },
                  "@odata.deltaLink": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "default": {
          "$ref": "#/components/responses/error"
        }
      },
      "deprecated": true,
      "x-ms-deprecation": {
        "removalDate": "2025-07-02",
        "date": "2024-07-02",
        "version": "2024-07/PrivatePreview:copilotExportAPI"
      },
      "x-ms-docs-operation-type": "function",
      "x-ms-pageable": {
        "nextLinkName": "@odata.nextLink",
        "operationName": "listMore"
      }
    }
  }
}