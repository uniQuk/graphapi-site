{
  "/groups/{group-id}/sites/microsoft.graph.delta()": {
    "get": {
      "tags": [
        "groups.Functions"
      ],
      "summary": "Invoke function delta",
      "description": "Get a set of newly created, updated, or deleted sites without having to perform a full read of the entire sites collection. A delta function call for sites is similar to a GET request, except that by appropriately applying state tokens in one or more of these calls, \nyou can query for incremental changes in the sites. It allows you to maintain and synchronize a local store of a user's sites without having to fetch all the sites from the server every time.\nThe application calls the API without specifying any parameters.\nThe service begins enumerating sites and returns pages of changes to these sites, accompanied by either an @odata.nextLink or an @odata.deltaLink.\nYour application should continue making calls using the @odata.nextLink until there's an @odata.deltaLink  in the response. After you receive all the changes, you can apply them to your local state.\nTo monitor future changes, call the delta API by using the @odata.deltaLink in the previous response. Any resources marked as deleted should be removed from your local state.",
      "externalDocs": {
        "description": "Find more info here",
        "url": "https://learn.microsoft.com/graph/api/site-delta?view=graph-rest-beta"
      },
      "operationId": "group.site_delta",
      "parameters": [
        {
          "name": "group-id",
          "in": "path",
          "description": "The unique identifier of group",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string"
          },
          "x-ms-docs-key-type": "group"
        },
        {
          "name": "$top",
          "in": "query",
          "description": "Show only the first n items",
          "style": "form",
          "explode": false,
          "schema": {
            "minimum": 0,
            "type": "integer"
          },
          "example": 50
        },
        {
          "name": "$skip",
          "in": "query",
          "description": "Skip the first n items",
          "style": "form",
          "explode": false,
          "schema": {
            "minimum": 0,
            "type": "integer"
          }
        },
        {
          "name": "$search",
          "in": "query",
          "description": "Search items by search phrases",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "$filter",
          "in": "query",
          "description": "Filter items by property values",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "$count",
          "in": "query",
          "description": "Include count of items",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "$select",
          "in": "query",
          "description": "Select properties to be returned",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "$orderby",
          "in": "query",
          "description": "Order items by property values",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "$expand",
          "in": "query",
          "description": "Expand related entities",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      ],
      "responses": {
        "2XX": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "title": "Collection of site",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.site"
                    }
                  },
                  "@odata.nextLink": {
                    "type": "string",
                    "nullable": true
                  },
                  "@odata.deltaLink": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "default": {
          "$ref": "#/components/responses/error"
        }
      },
      "x-ms-docs-operation-type": "function",
      "x-ms-pageable": {
        "nextLinkName": "@odata.nextLink",
        "operationName": "listMore"
      }
    }
  }
}