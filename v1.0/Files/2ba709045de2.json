{
  "/drives/{drive-id}/list/items/microsoft.graph.delta()": {
    "get": {
      "tags": [
        "drives.Functions"
      ],
      "summary": "Invoke function delta",
      "description": "Get newly created, updated, or deleted list items without having to perform a full read of the entire items collection. Your app begins by calling delta without any parameters.\nThe service starts enumerating the hierarchy of the list, returning pages of items, and either an @odata.nextLink or an @odata.deltaLink.\nYour app should continue calling with the @odata.nextLink until you see an @odata.deltaLink returned. After you received all the\u00a0changes, you can apply them to your local state.\nTo check for changes in the\u00a0future, call delta again with the @odata.deltaLink from the previous response. The delta feed shows the latest state for each item, not each change. If an item was renamed twice, it only shows up once, with its latest name.\nThe same item might appear more than once in a delta feed, for various reasons. You should use the last occurrence you see. Items with this property should be removed from your local state.",
      "externalDocs": {
        "description": "Find more info here",
        "url": "https://learn.microsoft.com/graph/api/listitem-delta?view=graph-rest-1.0"
      },
      "operationId": "drive.list.item_delta",
      "parameters": [
        {
          "name": "drive-id",
          "in": "path",
          "description": "The unique identifier of drive",
          "required": true,
          "style": "simple",
          "schema": {
            "type": "string"
          },
          "x-ms-docs-key-type": "drive"
        },
        {
          "name": "$top",
          "in": "query",
          "description": "Show only the first n items",
          "style": "form",
          "explode": false,
          "schema": {
            "minimum": 0,
            "type": "integer"
          },
          "example": 50
        },
        {
          "name": "$skip",
          "in": "query",
          "description": "Skip the first n items",
          "style": "form",
          "explode": false,
          "schema": {
            "minimum": 0,
            "type": "integer"
          }
        },
        {
          "name": "$search",
          "in": "query",
          "description": "Search items by search phrases",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "$filter",
          "in": "query",
          "description": "Filter items by property values",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "$count",
          "in": "query",
          "description": "Include count of items",
          "style": "form",
          "explode": false,
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "$select",
          "in": "query",
          "description": "Select properties to be returned",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "$orderby",
          "in": "query",
          "description": "Order items by property values",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        {
          "name": "$expand",
          "in": "query",
          "description": "Expand related entities",
          "style": "form",
          "explode": false,
          "schema": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      ],
      "responses": {
        "2XX": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "title": "Collection of listItem",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/microsoft.graph.listItem"
                    }
                  },
                  "@odata.nextLink": {
                    "type": "string",
                    "nullable": true
                  },
                  "@odata.deltaLink": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "default": {
          "$ref": "#/components/responses/error"
        }
      },
      "x-ms-docs-operation-type": "function",
      "x-ms-pageable": {
        "nextLinkName": "@odata.nextLink",
        "operationName": "listMore"
      }
    }
  }
}